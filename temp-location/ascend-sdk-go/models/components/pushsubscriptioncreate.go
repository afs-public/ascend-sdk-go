// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// PushSubscriptionCreate - Configuration information about a push subscription
type PushSubscriptionCreate struct {
	// The client that owns the subscription. A client subscription will receive events for it and all of its correspondents. This can only be set at creation time and is mutually exclusive with correspondent_id.
	ClientID *string `json:"client_id,omitempty"`
	// The correspondent that owns the subscription. A correspondent subscription will receive events only for itself. This can only be set at creation time and is mutually exclusive with client_id.
	CorrespondentID *string `json:"correspondent_id,omitempty"`
	// The user-defined name for the subscription
	DisplayName string `json:"display_name"`
	// Filter for event types; ["\*"] matches all values; Suffix wildcards using "\*" (e.g. ["account.\*"]) are supported
	EventTypes []string `json:"event_types"`
	// Configuration information about an HTTP target callback
	HTTPCallback *HTTPPushCallbackCreate `json:"http_callback,omitempty"`
}

func (o *PushSubscriptionCreate) GetClientID() *string {
	if o == nil {
		return nil
	}
	return o.ClientID
}

func (o *PushSubscriptionCreate) GetCorrespondentID() *string {
	if o == nil {
		return nil
	}
	return o.CorrespondentID
}

func (o *PushSubscriptionCreate) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *PushSubscriptionCreate) GetEventTypes() []string {
	if o == nil {
		return []string{}
	}
	return o.EventTypes
}

func (o *PushSubscriptionCreate) GetHTTPCallback() *HTTPPushCallbackCreate {
	if o == nil {
		return nil
	}
	return o.HTTPCallback
}
