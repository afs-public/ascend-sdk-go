// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// TemporalTaxYear - A temporal tax year value. This will always evaluate to a year based on the date the transfer was initiated.
type TemporalTaxYear string

const (
	TemporalTaxYearTemporalTaxYearUnspecified TemporalTaxYear = "TEMPORAL_TAX_YEAR_UNSPECIFIED"
	TemporalTaxYearCurrentCalendarYear        TemporalTaxYear = "CURRENT_CALENDAR_YEAR"
	TemporalTaxYearMinimumTaxYear             TemporalTaxYear = "MINIMUM_TAX_YEAR"
)

func (e TemporalTaxYear) ToPointer() *TemporalTaxYear {
	return &e
}
func (e *TemporalTaxYear) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TEMPORAL_TAX_YEAR_UNSPECIFIED":
		fallthrough
	case "CURRENT_CALENDAR_YEAR":
		fallthrough
	case "MINIMUM_TAX_YEAR":
		*e = TemporalTaxYear(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TemporalTaxYear: %v", v)
	}
}

// ScheduledRetirementContributionCreateType - The type of retirement contribution.
type ScheduledRetirementContributionCreateType string

const (
	ScheduledRetirementContributionCreateTypeTypeUnspecified    ScheduledRetirementContributionCreateType = "TYPE_UNSPECIFIED"
	ScheduledRetirementContributionCreateTypeRegular            ScheduledRetirementContributionCreateType = "REGULAR"
	ScheduledRetirementContributionCreateTypeEmployee           ScheduledRetirementContributionCreateType = "EMPLOYEE"
	ScheduledRetirementContributionCreateTypeEmployer           ScheduledRetirementContributionCreateType = "EMPLOYER"
	ScheduledRetirementContributionCreateTypeRecharacterization ScheduledRetirementContributionCreateType = "RECHARACTERIZATION"
	ScheduledRetirementContributionCreateTypeRollover60Day      ScheduledRetirementContributionCreateType = "ROLLOVER_60_DAY"
	ScheduledRetirementContributionCreateTypeRolloverDirect     ScheduledRetirementContributionCreateType = "ROLLOVER_DIRECT"
	ScheduledRetirementContributionCreateTypeTransfer           ScheduledRetirementContributionCreateType = "TRANSFER"
	ScheduledRetirementContributionCreateTypeTrusteeFee         ScheduledRetirementContributionCreateType = "TRUSTEE_FEE"
	ScheduledRetirementContributionCreateTypeConversion         ScheduledRetirementContributionCreateType = "CONVERSION"
	ScheduledRetirementContributionCreateTypeRepayment          ScheduledRetirementContributionCreateType = "REPAYMENT"
)

func (e ScheduledRetirementContributionCreateType) ToPointer() *ScheduledRetirementContributionCreateType {
	return &e
}
func (e *ScheduledRetirementContributionCreateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "REGULAR":
		fallthrough
	case "EMPLOYEE":
		fallthrough
	case "EMPLOYER":
		fallthrough
	case "RECHARACTERIZATION":
		fallthrough
	case "ROLLOVER_60_DAY":
		fallthrough
	case "ROLLOVER_DIRECT":
		fallthrough
	case "TRANSFER":
		fallthrough
	case "TRUSTEE_FEE":
		fallthrough
	case "CONVERSION":
		fallthrough
	case "REPAYMENT":
		*e = ScheduledRetirementContributionCreateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScheduledRetirementContributionCreateType: %v", v)
	}
}

// ScheduledRetirementContributionCreate - The retirement contribution details for a scheduled deposit
type ScheduledRetirementContributionCreate struct {
	// An explicit tax year value. The current year is always valid; and the prior year is valid only before the tax deadline. Must be in "YYYY" format.
	TaxYear *int `json:"tax_year,omitempty"`
	// A temporal tax year value. This will always evaluate to a year based on the date the transfer was initiated.
	TemporalTaxYear *TemporalTaxYear `json:"temporal_tax_year,omitempty"`
	// The type of retirement contribution.
	Type ScheduledRetirementContributionCreateType `json:"type"`
}

func (o *ScheduledRetirementContributionCreate) GetTaxYear() *int {
	if o == nil {
		return nil
	}
	return o.TaxYear
}

func (o *ScheduledRetirementContributionCreate) GetTemporalTaxYear() *TemporalTaxYear {
	if o == nil {
		return nil
	}
	return o.TemporalTaxYear
}

func (o *ScheduledRetirementContributionCreate) GetType() ScheduledRetirementContributionCreateType {
	if o == nil {
		return ScheduledRetirementContributionCreateType("")
	}
	return o.Type
}
