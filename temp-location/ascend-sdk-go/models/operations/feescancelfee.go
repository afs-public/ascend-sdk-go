// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/afs-public/ascend-sdk-go/models/components"
)

type FeesCancelFeeRequest struct {
	// The account id.
	AccountID string `pathParam:"style=simple,explode=false,name=account_id"`
	// The fee id.
	FeeID                  string                            `pathParam:"style=simple,explode=false,name=fee_id"`
	CancelFeeRequestCreate components.CancelFeeRequestCreate `request:"mediaType=application/json"`
}

func (o *FeesCancelFeeRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *FeesCancelFeeRequest) GetFeeID() string {
	if o == nil {
		return ""
	}
	return o.FeeID
}

func (o *FeesCancelFeeRequest) GetCancelFeeRequestCreate() components.CancelFeeRequestCreate {
	if o == nil {
		return components.CancelFeeRequestCreate{}
	}
	return o.CancelFeeRequestCreate
}

type FeesCancelFeeResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	TransfersFee *components.TransfersFee
	// INVALID_ARGUMENT: The request has an invalid argument.
	Status *components.Status
}

func (o *FeesCancelFeeResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *FeesCancelFeeResponse) GetTransfersFee() *components.TransfersFee {
	if o == nil {
		return nil
	}
	return o.TransfersFee
}

func (o *FeesCancelFeeResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
