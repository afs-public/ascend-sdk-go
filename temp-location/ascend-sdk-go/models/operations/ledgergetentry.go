// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/afs-public/ascend-sdk-go/models/components"
)

type LedgerGetEntryRequest struct {
	// The account id.
	AccountID string `pathParam:"style=simple,explode=false,name=account_id"`
	// The entry id.
	EntryID string `pathParam:"style=simple,explode=false,name=entry_id"`
}

func (o *LedgerGetEntryRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *LedgerGetEntryRequest) GetEntryID() string {
	if o == nil {
		return ""
	}
	return o.EntryID
}

type LedgerGetEntryResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	Entry *components.Entry
	// INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details.
	Status *components.Status
}

func (o *LedgerGetEntryResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *LedgerGetEntryResponse) GetEntry() *components.Entry {
	if o == nil {
		return nil
	}
	return o.Entry
}

func (o *LedgerGetEntryResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
