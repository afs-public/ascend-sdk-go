// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// EntityIdentificationUpdateType - Tax id type for entities (e.g. ein, lei, etc.))
type EntityIdentificationUpdateType string

const (
	EntityIdentificationUpdateTypeIDEntityTypeUnspecified EntityIdentificationUpdateType = "ID_ENTITY_TYPE_UNSPECIFIED"
	EntityIdentificationUpdateTypeEin                     EntityIdentificationUpdateType = "EIN"
	EntityIdentificationUpdateTypeLei                     EntityIdentificationUpdateType = "LEI"
	EntityIdentificationUpdateTypeDuns                    EntityIdentificationUpdateType = "DUNS"
)

func (e EntityIdentificationUpdateType) ToPointer() *EntityIdentificationUpdateType {
	return &e
}

// EntityIdentificationUpdate - stores various Entity identification types
type EntityIdentificationUpdate struct {
	// Administrative area that issued the identification For example, this can be a state, a province, an oblast, or a prefecture.
	AdministrativeArea *string `json:"administrative_area,omitempty"`
	// One or more UUIDs from the documents api of the image(s) of the document that relates to the identification for the person investigation.
	DocumentReferenceIds []string `json:"document_reference_ids,omitempty"`
	// Country that issued identification Two character region code, complies with https://cldr.unicode.org/index
	RegionCode *string `json:"region_code,omitempty"`
	// Tax id type for entities (e.g. ein, lei, etc.))
	Type *EntityIdentificationUpdateType `json:"type,omitempty"`
	// Tax id value
	Value *string `json:"value,omitempty"`
}

func (o *EntityIdentificationUpdate) GetAdministrativeArea() *string {
	if o == nil {
		return nil
	}
	return o.AdministrativeArea
}

func (o *EntityIdentificationUpdate) GetDocumentReferenceIds() []string {
	if o == nil {
		return nil
	}
	return o.DocumentReferenceIds
}

func (o *EntityIdentificationUpdate) GetRegionCode() *string {
	if o == nil {
		return nil
	}
	return o.RegionCode
}

func (o *EntityIdentificationUpdate) GetType() *EntityIdentificationUpdateType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *EntityIdentificationUpdate) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}
