// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"time"

	"github.com/afs-public/ascend-sdk-go/internal/utils"
)

// BeneficiaryEnrollmentMetadata - Metadata for the BENEFICIARY_DESIGNATION enrollment type.
type BeneficiaryEnrollmentMetadata struct {
	// Contingent Beneficiary list is optional, with a maximum of five contingent beneficiaries.
	ContingentBeneficiaries []Beneficiary `json:"contingent_beneficiaries,omitempty"`
	// At least one primary beneficiary must be provided, with a maximum of five primary beneficiaries.
	PrimaryBeneficiaries []Beneficiary `json:"primary_beneficiaries,omitempty"`
}

func (o *BeneficiaryEnrollmentMetadata) GetContingentBeneficiaries() []Beneficiary {
	if o == nil {
		return nil
	}
	return o.ContingentBeneficiaries
}

func (o *BeneficiaryEnrollmentMetadata) GetPrimaryBeneficiaries() []Beneficiary {
	if o == nil {
		return nil
	}
	return o.PrimaryBeneficiaries
}

// ConsentMethod - The consent method for the enrollment. Defaults to ESIGNATURE.
type ConsentMethod string

const (
	ConsentMethodConsentMethodUnspecified  ConsentMethod = "CONSENT_METHOD_UNSPECIFIED"
	ConsentMethodEsignature                ConsentMethod = "ESIGNATURE"
	ConsentMethodWetSignature              ConsentMethod = "WET_SIGNATURE"
	ConsentMethodNegativeConsentConversion ConsentMethod = "NEGATIVE_CONSENT_CONVERSION"
	ConsentMethodInternalConversion        ConsentMethod = "INTERNAL_CONVERSION"
)

func (e ConsentMethod) ToPointer() *ConsentMethod {
	return &e
}

// EnrollmentCorporationEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentCorporationEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentCorporationEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentCorporationEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentCorporationEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentCorporationEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentCorporationEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentCorporationEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentCorporationEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentCorporationEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// InitialDepositAmount - The initial deposit amount in USD
type InitialDepositAmount struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *InitialDepositAmount) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// DepositedFunds - The initial amount of money placed into the account by the customer upon or after the account's establishment.
type DepositedFunds struct {
	// The initial deposit amount in USD
	InitialDepositAmount *InitialDepositAmount `json:"initial_deposit_amount,omitempty"`
	// The source of the initial deposit
	InitialDepositSource *string `json:"initial_deposit_source,omitempty"`
}

func (o *DepositedFunds) GetInitialDepositAmount() *InitialDepositAmount {
	if o == nil {
		return nil
	}
	return o.InitialDepositAmount
}

func (o *DepositedFunds) GetInitialDepositSource() *string {
	if o == nil {
		return nil
	}
	return o.InitialDepositSource
}

// EnrollmentCorporationEnrollmentMetadataDeterminedAccountRiskRating - The client determined account risk rating of the entity customer
type EnrollmentCorporationEnrollmentMetadataDeterminedAccountRiskRating string

const (
	EnrollmentCorporationEnrollmentMetadataDeterminedAccountRiskRatingDeterminedAccountRiskRatingUnspecified EnrollmentCorporationEnrollmentMetadataDeterminedAccountRiskRating = "DETERMINED_ACCOUNT_RISK_RATING_UNSPECIFIED"
	EnrollmentCorporationEnrollmentMetadataDeterminedAccountRiskRatingLow                                    EnrollmentCorporationEnrollmentMetadataDeterminedAccountRiskRating = "LOW"
	EnrollmentCorporationEnrollmentMetadataDeterminedAccountRiskRatingMedium                                 EnrollmentCorporationEnrollmentMetadataDeterminedAccountRiskRating = "MEDIUM"
	EnrollmentCorporationEnrollmentMetadataDeterminedAccountRiskRatingHigh                                   EnrollmentCorporationEnrollmentMetadataDeterminedAccountRiskRating = "HIGH"
)

func (e EnrollmentCorporationEnrollmentMetadataDeterminedAccountRiskRating) ToPointer() *EnrollmentCorporationEnrollmentMetadataDeterminedAccountRiskRating {
	return &e
}

// OtherAccounts - A customer-disclosed list of other Apex-held accounts owned by the Entity applicant at the time of this account's application; expressed as zero, one, or many account numbers
type OtherAccounts struct {
	// Other account names held at Apex
	AccountNames []string `json:"account_names,omitempty"`
	// Other account numbers held at Apex
	AccountNumbers []string `json:"account_numbers,omitempty"`
	// The owner has other accounts at Apex
	OwnerHasOtherAccountsAtApex *bool `json:"owner_has_other_accounts_at_apex,omitempty"`
}

func (o *OtherAccounts) GetAccountNames() []string {
	if o == nil {
		return nil
	}
	return o.AccountNames
}

func (o *OtherAccounts) GetAccountNumbers() []string {
	if o == nil {
		return nil
	}
	return o.AccountNumbers
}

func (o *OtherAccounts) GetOwnerHasOtherAccountsAtApex() *bool {
	if o == nil {
		return nil
	}
	return o.OwnerHasOtherAccountsAtApex
}

// FinancialProfile - Disclosure of the account owner's financial relationships and source of brokerage funds; facilitates the creation of the overall customer risk profile
type FinancialProfile struct {
	// Bank names with whom the entity maintains a relationship with (e.g., accounts held with the bank)
	BankingRelationships []string `json:"banking_relationships,omitempty"`
	// A customer-disclosed list of other Apex-held accounts owned by the Entity applicant at the time of this account's application; expressed as zero, one, or many account numbers
	OtherAccounts *OtherAccounts `json:"other_accounts,omitempty"`
	// The primary source of funds that will be deposited to this account
	PrimarySourceOfDepositedFunds *string `json:"primary_source_of_deposited_funds,omitempty"`
}

func (o *FinancialProfile) GetBankingRelationships() []string {
	if o == nil {
		return nil
	}
	return o.BankingRelationships
}

func (o *FinancialProfile) GetOtherAccounts() *OtherAccounts {
	if o == nil {
		return nil
	}
	return o.OtherAccounts
}

func (o *FinancialProfile) GetPrimarySourceOfDepositedFunds() *string {
	if o == nil {
		return nil
	}
	return o.PrimarySourceOfDepositedFunds
}

// ForeignBondTradingDetails - The foreign bond trading countries details
type ForeignBondTradingDetails struct {
	// Does the account anticipate trading in foreign bonds
	ForeignBondTrading *bool `json:"foreign_bond_trading,omitempty"`
	// The foreign bond trading countries details. If yes, than please provide details
	ForeignBondTradingDetail []ForeignBondTradingDetail `json:"foreign_bond_trading_detail,omitempty"`
}

func (o *ForeignBondTradingDetails) GetForeignBondTrading() *bool {
	if o == nil {
		return nil
	}
	return o.ForeignBondTrading
}

func (o *ForeignBondTradingDetails) GetForeignBondTradingDetail() []ForeignBondTradingDetail {
	if o == nil {
		return nil
	}
	return o.ForeignBondTradingDetail
}

// LowPricedSecuritiesPercentage - The percentage, by volume, of the account's trades which will involve low priced securities
type LowPricedSecuritiesPercentage struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *LowPricedSecuritiesPercentage) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// LowPricedSecurities - The account anticipates trading in securities trading for less than $5 per share and are typically traded over-the-counter (OTC) or through pink sheets
type LowPricedSecurities struct {
	// The account anticipates trading in securities trading for less than $5 per share and are typically traded over-the-counter (OTC) or through pink sheets
	LowPricedSecurities *bool `json:"low_priced_securities,omitempty"`
	// The percentage, by volume, of the account's trades which will involve low priced securities
	LowPricedSecuritiesPercentage *LowPricedSecuritiesPercentage `json:"low_priced_securities_percentage,omitempty"`
}

func (o *LowPricedSecurities) GetLowPricedSecurities() *bool {
	if o == nil {
		return nil
	}
	return o.LowPricedSecurities
}

func (o *LowPricedSecurities) GetLowPricedSecuritiesPercentage() *LowPricedSecuritiesPercentage {
	if o == nil {
		return nil
	}
	return o.LowPricedSecuritiesPercentage
}

// EnrollmentCorporationEnrollmentMetadataPrimaryAccountActivityType - The primary account activity type
type EnrollmentCorporationEnrollmentMetadataPrimaryAccountActivityType string

const (
	EnrollmentCorporationEnrollmentMetadataPrimaryAccountActivityTypePrimaryAccountActivityTypeUnspecified EnrollmentCorporationEnrollmentMetadataPrimaryAccountActivityType = "PRIMARY_ACCOUNT_ACTIVITY_TYPE_UNSPECIFIED"
	EnrollmentCorporationEnrollmentMetadataPrimaryAccountActivityTypeActiveTrading                         EnrollmentCorporationEnrollmentMetadataPrimaryAccountActivityType = "ACTIVE_TRADING"
	EnrollmentCorporationEnrollmentMetadataPrimaryAccountActivityTypeShortTermInvesting                    EnrollmentCorporationEnrollmentMetadataPrimaryAccountActivityType = "SHORT_TERM_INVESTING"
	EnrollmentCorporationEnrollmentMetadataPrimaryAccountActivityTypeLongTermInvesting                     EnrollmentCorporationEnrollmentMetadataPrimaryAccountActivityType = "LONG_TERM_INVESTING"
)

func (e EnrollmentCorporationEnrollmentMetadataPrimaryAccountActivityType) ToPointer() *EnrollmentCorporationEnrollmentMetadataPrimaryAccountActivityType {
	return &e
}

// EnrollmentCorporationEnrollmentMetadataWithdrawalFrequency - The frequency by which cash is anticipated to be withdrawn from the account
type EnrollmentCorporationEnrollmentMetadataWithdrawalFrequency string

const (
	EnrollmentCorporationEnrollmentMetadataWithdrawalFrequencyWithdrawalFrequencyUnspecified EnrollmentCorporationEnrollmentMetadataWithdrawalFrequency = "WITHDRAWAL_FREQUENCY_UNSPECIFIED"
	EnrollmentCorporationEnrollmentMetadataWithdrawalFrequencyFrequent                       EnrollmentCorporationEnrollmentMetadataWithdrawalFrequency = "FREQUENT"
	EnrollmentCorporationEnrollmentMetadataWithdrawalFrequencyOccasional                     EnrollmentCorporationEnrollmentMetadataWithdrawalFrequency = "OCCASIONAL"
	EnrollmentCorporationEnrollmentMetadataWithdrawalFrequencyRare                           EnrollmentCorporationEnrollmentMetadataWithdrawalFrequency = "RARE"
)

func (e EnrollmentCorporationEnrollmentMetadataWithdrawalFrequency) ToPointer() *EnrollmentCorporationEnrollmentMetadataWithdrawalFrequency {
	return &e
}

// PlannedActivity - Details the customer's intended trading and banking-related activities at the time of account application; informs risk checks and forms a baseline for anomalous activity detection
type PlannedActivity struct {
	// The foreign bond trading countries details
	ForeignBondTradingDetails *ForeignBondTradingDetails `json:"foreign_bond_trading_details,omitempty"`
	// The account anticipates trading in securities trading for less than $5 per share and are typically traded over-the-counter (OTC) or through pink sheets
	LowPricedSecurities *LowPricedSecurities `json:"low_priced_securities,omitempty"`
	// The primary account activity type
	PrimaryAccountActivityType *EnrollmentCorporationEnrollmentMetadataPrimaryAccountActivityType `json:"primary_account_activity_type,omitempty"`
	// The frequency by which cash is anticipated to be withdrawn from the account
	WithdrawalFrequency *EnrollmentCorporationEnrollmentMetadataWithdrawalFrequency `json:"withdrawal_frequency,omitempty"`
}

func (o *PlannedActivity) GetForeignBondTradingDetails() *ForeignBondTradingDetails {
	if o == nil {
		return nil
	}
	return o.ForeignBondTradingDetails
}

func (o *PlannedActivity) GetLowPricedSecurities() *LowPricedSecurities {
	if o == nil {
		return nil
	}
	return o.LowPricedSecurities
}

func (o *PlannedActivity) GetPrimaryAccountActivityType() *EnrollmentCorporationEnrollmentMetadataPrimaryAccountActivityType {
	if o == nil {
		return nil
	}
	return o.PrimaryAccountActivityType
}

func (o *PlannedActivity) GetWithdrawalFrequency() *EnrollmentCorporationEnrollmentMetadataWithdrawalFrequency {
	if o == nil {
		return nil
	}
	return o.WithdrawalFrequency
}

// RelatedPepDetails - Information about the related politically exposed persons
type RelatedPepDetails struct {
	// Indication as to whether or not an account has direct or indirect related politically exposed persons
	DirectOrIndirectRelatedPeps *bool `json:"direct_or_indirect_related_peps,omitempty"`
	// Related Peps
	RelatedPeps []RelatedPep `json:"related_peps,omitempty"`
}

func (o *RelatedPepDetails) GetDirectOrIndirectRelatedPeps() *bool {
	if o == nil {
		return nil
	}
	return o.DirectOrIndirectRelatedPeps
}

func (o *RelatedPepDetails) GetRelatedPeps() []RelatedPep {
	if o == nil {
		return nil
	}
	return o.RelatedPeps
}

// EddAccountEnrollmentMetadata - Enrollment metadata for entity accounts
type EddAccountEnrollmentMetadata struct {
	// The initial amount of money placed into the account by the customer upon or after the account's establishment.
	DepositedFunds *DepositedFunds `json:"deposited_funds,omitempty"`
	// The client determined account risk rating of the entity customer
	DeterminedAccountRiskRating *EnrollmentCorporationEnrollmentMetadataDeterminedAccountRiskRating `json:"determined_account_risk_rating,omitempty"`
	// Disclosure of the account owner's financial relationships and source of brokerage funds; facilitates the creation of the overall customer risk profile
	FinancialProfile *FinancialProfile `json:"financial_profile,omitempty"`
	// Details the customer's intended trading and banking-related activities at the time of account application; informs risk checks and forms a baseline for anomalous activity detection
	PlannedActivity *PlannedActivity `json:"planned_activity,omitempty"`
	// Information about the related politically exposed persons
	RelatedPepDetails *RelatedPepDetails `json:"related_pep_details,omitempty"`
	// The scope of the business for the entity customer
	ScopeOfBusiness *string `json:"scope_of_business,omitempty"`
}

func (o *EddAccountEnrollmentMetadata) GetDepositedFunds() *DepositedFunds {
	if o == nil {
		return nil
	}
	return o.DepositedFunds
}

func (o *EddAccountEnrollmentMetadata) GetDeterminedAccountRiskRating() *EnrollmentCorporationEnrollmentMetadataDeterminedAccountRiskRating {
	if o == nil {
		return nil
	}
	return o.DeterminedAccountRiskRating
}

func (o *EddAccountEnrollmentMetadata) GetFinancialProfile() *FinancialProfile {
	if o == nil {
		return nil
	}
	return o.FinancialProfile
}

func (o *EddAccountEnrollmentMetadata) GetPlannedActivity() *PlannedActivity {
	if o == nil {
		return nil
	}
	return o.PlannedActivity
}

func (o *EddAccountEnrollmentMetadata) GetRelatedPepDetails() *RelatedPepDetails {
	if o == nil {
		return nil
	}
	return o.RelatedPepDetails
}

func (o *EddAccountEnrollmentMetadata) GetScopeOfBusiness() *string {
	if o == nil {
		return nil
	}
	return o.ScopeOfBusiness
}

// EnrollmentCorporationEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentCorporationEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentCorporationEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentCorporationEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentCorporationEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentCorporationEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentCorporationEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentCorporationEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentCorporationEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentCorporationEnrollmentMetadataFdicCashSweep {
	return &e
}

// CorporationEnrollmentMetadata - Metadata for the REGISTRATION_CORPORATION type
type CorporationEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentCorporationEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Enrollment metadata for entity accounts
	EddAccountEnrollmentMetadata *EddAccountEnrollmentMetadata `json:"edd_account_enrollment_metadata,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentCorporationEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
}

func (o *CorporationEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentCorporationEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *CorporationEnrollmentMetadata) GetEddAccountEnrollmentMetadata() *EddAccountEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.EddAccountEnrollmentMetadata
}

func (o *CorporationEnrollmentMetadata) GetFdicCashSweep() *EnrollmentCorporationEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

// EnrollmentDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentDividendReinvestmentPlan string

const (
	EnrollmentDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentDividendReinvestmentPlan) ToPointer() *EnrollmentDividendReinvestmentPlan {
	return &e
}

// EnrollmentFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentFdicCashSweep string

const (
	EnrollmentFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentFdicCashSweepFdicCashSweepEnroll                EnrollmentFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentFdicCashSweepFdicCashSweepDecline               EnrollmentFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentFdicCashSweep) ToPointer() *EnrollmentFdicCashSweep {
	return &e
}

// CustodialEnrollmentMetadata - Metadata for the REGISTRATION_CUSTODIAL type
type CustodialEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
}

func (o *CustodialEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *CustodialEnrollmentMetadata) GetFdicCashSweep() *EnrollmentFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

// EnrollmentEstateEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentEstateEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentEstateEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentEstateEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentEstateEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentEstateEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentEstateEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentEstateEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentEstateEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentEstateEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EstateEnrollmentMetadata - Metadata for the REGISTRATION_ESTATE enrollment type
type EstateEnrollmentMetadata struct {
	// The document id for the certificate of appointment
	CertificateOfAppointmentDocumentID *string `json:"certificate_of_appointment_document_id,omitempty"`
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentEstateEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
}

func (o *EstateEnrollmentMetadata) GetCertificateOfAppointmentDocumentID() *string {
	if o == nil {
		return nil
	}
	return o.CertificateOfAppointmentDocumentID
}

func (o *EstateEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentEstateEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

// EnrollmentForeignIndividualAccountEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentForeignIndividualAccountEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentForeignIndividualAccountEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentForeignIndividualAccountEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentForeignIndividualAccountEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentForeignIndividualAccountEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentForeignIndividualAccountEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentForeignIndividualAccountEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentForeignIndividualAccountEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentForeignIndividualAccountEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentForeignIndividualAccountEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentForeignIndividualAccountEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentForeignIndividualAccountEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentForeignIndividualAccountEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentForeignIndividualAccountEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentForeignIndividualAccountEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentForeignIndividualAccountEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentForeignIndividualAccountEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentForeignIndividualAccountEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentForeignIndividualAccountEnrollmentMetadataFdicCashSweep {
	return &e
}

// EnrollmentInitialDepositAmount - The initial deposit amount in USD
type EnrollmentInitialDepositAmount struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *EnrollmentInitialDepositAmount) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// EnrollmentDepositedFunds - The initial amount of money placed into the account by the entity upon or after the account's establishment.
type EnrollmentDepositedFunds struct {
	// The initial deposit amount in USD
	InitialDepositAmount *EnrollmentInitialDepositAmount `json:"initial_deposit_amount,omitempty"`
	// The source of the initial deposit
	InitialDepositSource *string `json:"initial_deposit_source,omitempty"`
}

func (o *EnrollmentDepositedFunds) GetInitialDepositAmount() *EnrollmentInitialDepositAmount {
	if o == nil {
		return nil
	}
	return o.InitialDepositAmount
}

func (o *EnrollmentDepositedFunds) GetInitialDepositSource() *string {
	if o == nil {
		return nil
	}
	return o.InitialDepositSource
}

// EnrollmentOtherAccounts - A customer-disclosed list of other Apex-held accounts owned by the Entity applicant at the time of this account's application; expressed as zero, one, or many account numbers
type EnrollmentOtherAccounts struct {
	// Other account names held at Apex
	AccountNames []string `json:"account_names,omitempty"`
	// Other account numbers held at Apex
	AccountNumbers []string `json:"account_numbers,omitempty"`
	// The owner has other accounts at Apex
	OwnerHasOtherAccountsAtApex *bool `json:"owner_has_other_accounts_at_apex,omitempty"`
}

func (o *EnrollmentOtherAccounts) GetAccountNames() []string {
	if o == nil {
		return nil
	}
	return o.AccountNames
}

func (o *EnrollmentOtherAccounts) GetAccountNumbers() []string {
	if o == nil {
		return nil
	}
	return o.AccountNumbers
}

func (o *EnrollmentOtherAccounts) GetOwnerHasOtherAccountsAtApex() *bool {
	if o == nil {
		return nil
	}
	return o.OwnerHasOtherAccountsAtApex
}

// EnrollmentFinancialProfile - Disclosure of the entity account owner's financial relationships and source of brokerage funds; facilitates the creation of the overall customer risk profile
type EnrollmentFinancialProfile struct {
	// Bank names with whom the entity maintains a relationship with (e.g., accounts held with the bank)
	BankingRelationships []string `json:"banking_relationships,omitempty"`
	// A customer-disclosed list of other Apex-held accounts owned by the Entity applicant at the time of this account's application; expressed as zero, one, or many account numbers
	OtherAccounts *EnrollmentOtherAccounts `json:"other_accounts,omitempty"`
	// The primary source of funds that will be deposited to this account
	PrimarySourceOfDepositedFunds *string `json:"primary_source_of_deposited_funds,omitempty"`
}

func (o *EnrollmentFinancialProfile) GetBankingRelationships() []string {
	if o == nil {
		return nil
	}
	return o.BankingRelationships
}

func (o *EnrollmentFinancialProfile) GetOtherAccounts() *EnrollmentOtherAccounts {
	if o == nil {
		return nil
	}
	return o.OtherAccounts
}

func (o *EnrollmentFinancialProfile) GetPrimarySourceOfDepositedFunds() *string {
	if o == nil {
		return nil
	}
	return o.PrimarySourceOfDepositedFunds
}

// EnrollmentForeignBondTradingDetails - The foreign bond trading countries details
type EnrollmentForeignBondTradingDetails struct {
	// Does the account anticipate trading in foreign bonds
	ForeignBondTrading *bool `json:"foreign_bond_trading,omitempty"`
	// The foreign bond trading countries details. If yes, than please provide details
	ForeignBondTradingDetail []ForeignBondTradingDetail `json:"foreign_bond_trading_detail,omitempty"`
}

func (o *EnrollmentForeignBondTradingDetails) GetForeignBondTrading() *bool {
	if o == nil {
		return nil
	}
	return o.ForeignBondTrading
}

func (o *EnrollmentForeignBondTradingDetails) GetForeignBondTradingDetail() []ForeignBondTradingDetail {
	if o == nil {
		return nil
	}
	return o.ForeignBondTradingDetail
}

// EnrollmentLowPricedSecuritiesPercentage - The percentage, by volume, of the account's trades which will involve low priced securities
type EnrollmentLowPricedSecuritiesPercentage struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *EnrollmentLowPricedSecuritiesPercentage) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// EnrollmentLowPricedSecurities - The account anticipates trading in securities trading for less than $5 per share and are typically traded over-the-counter (OTC) or through pink sheets
type EnrollmentLowPricedSecurities struct {
	// The account anticipates trading in securities trading for less than $5 per share and are typically traded over-the-counter (OTC) or through pink sheets
	LowPricedSecurities *bool `json:"low_priced_securities,omitempty"`
	// The percentage, by volume, of the account's trades which will involve low priced securities
	LowPricedSecuritiesPercentage *EnrollmentLowPricedSecuritiesPercentage `json:"low_priced_securities_percentage,omitempty"`
}

func (o *EnrollmentLowPricedSecurities) GetLowPricedSecurities() *bool {
	if o == nil {
		return nil
	}
	return o.LowPricedSecurities
}

func (o *EnrollmentLowPricedSecurities) GetLowPricedSecuritiesPercentage() *EnrollmentLowPricedSecuritiesPercentage {
	if o == nil {
		return nil
	}
	return o.LowPricedSecuritiesPercentage
}

// EnrollmentPrimaryAccountActivityType - The primary account activity type
type EnrollmentPrimaryAccountActivityType string

const (
	EnrollmentPrimaryAccountActivityTypePrimaryAccountActivityTypeUnspecified EnrollmentPrimaryAccountActivityType = "PRIMARY_ACCOUNT_ACTIVITY_TYPE_UNSPECIFIED"
	EnrollmentPrimaryAccountActivityTypeActiveTrading                         EnrollmentPrimaryAccountActivityType = "ACTIVE_TRADING"
	EnrollmentPrimaryAccountActivityTypeShortTermInvesting                    EnrollmentPrimaryAccountActivityType = "SHORT_TERM_INVESTING"
	EnrollmentPrimaryAccountActivityTypeLongTermInvesting                     EnrollmentPrimaryAccountActivityType = "LONG_TERM_INVESTING"
)

func (e EnrollmentPrimaryAccountActivityType) ToPointer() *EnrollmentPrimaryAccountActivityType {
	return &e
}

// EnrollmentWithdrawalFrequency - The frequency by which cash is anticipated to be withdrawn from the account
type EnrollmentWithdrawalFrequency string

const (
	EnrollmentWithdrawalFrequencyWithdrawalFrequencyUnspecified EnrollmentWithdrawalFrequency = "WITHDRAWAL_FREQUENCY_UNSPECIFIED"
	EnrollmentWithdrawalFrequencyFrequent                       EnrollmentWithdrawalFrequency = "FREQUENT"
	EnrollmentWithdrawalFrequencyOccasional                     EnrollmentWithdrawalFrequency = "OCCASIONAL"
	EnrollmentWithdrawalFrequencyRare                           EnrollmentWithdrawalFrequency = "RARE"
)

func (e EnrollmentWithdrawalFrequency) ToPointer() *EnrollmentWithdrawalFrequency {
	return &e
}

// EnrollmentPlannedActivity - Details the customer's intended trading and banking-related activities at the time of account application; informs risk checks and forms a baseline for anomalous activity detection
type EnrollmentPlannedActivity struct {
	// The foreign bond trading countries details
	ForeignBondTradingDetails *EnrollmentForeignBondTradingDetails `json:"foreign_bond_trading_details,omitempty"`
	// The account anticipates trading in securities trading for less than $5 per share and are typically traded over-the-counter (OTC) or through pink sheets
	LowPricedSecurities *EnrollmentLowPricedSecurities `json:"low_priced_securities,omitempty"`
	// The primary account activity type
	PrimaryAccountActivityType *EnrollmentPrimaryAccountActivityType `json:"primary_account_activity_type,omitempty"`
	// The frequency by which cash is anticipated to be withdrawn from the account
	WithdrawalFrequency *EnrollmentWithdrawalFrequency `json:"withdrawal_frequency,omitempty"`
}

func (o *EnrollmentPlannedActivity) GetForeignBondTradingDetails() *EnrollmentForeignBondTradingDetails {
	if o == nil {
		return nil
	}
	return o.ForeignBondTradingDetails
}

func (o *EnrollmentPlannedActivity) GetLowPricedSecurities() *EnrollmentLowPricedSecurities {
	if o == nil {
		return nil
	}
	return o.LowPricedSecurities
}

func (o *EnrollmentPlannedActivity) GetPrimaryAccountActivityType() *EnrollmentPrimaryAccountActivityType {
	if o == nil {
		return nil
	}
	return o.PrimaryAccountActivityType
}

func (o *EnrollmentPlannedActivity) GetWithdrawalFrequency() *EnrollmentWithdrawalFrequency {
	if o == nil {
		return nil
	}
	return o.WithdrawalFrequency
}

// EnrollmentRelatedPepDetails - Information about the related politically exposed persons
type EnrollmentRelatedPepDetails struct {
	// Indication as to whether or not an account has direct or indirect related politically exposed persons
	DirectOrIndirectRelatedPeps *bool `json:"direct_or_indirect_related_peps,omitempty"`
	// Related Peps
	RelatedPeps []RelatedPep `json:"related_peps,omitempty"`
}

func (o *EnrollmentRelatedPepDetails) GetDirectOrIndirectRelatedPeps() *bool {
	if o == nil {
		return nil
	}
	return o.DirectOrIndirectRelatedPeps
}

func (o *EnrollmentRelatedPepDetails) GetRelatedPeps() []RelatedPep {
	if o == nil {
		return nil
	}
	return o.RelatedPeps
}

// ForeignNaturalPersonAccountEnrollmentMetadata - Enrollment metadata for Accounts that have a foreign Legal Natural Person owner.
type ForeignNaturalPersonAccountEnrollmentMetadata struct {
	// The initial amount of money placed into the account by the entity upon or after the account's establishment.
	DepositedFunds *EnrollmentDepositedFunds `json:"deposited_funds,omitempty"`
	// Disclosure of the entity account owner's financial relationships and source of brokerage funds; facilitates the creation of the overall customer risk profile
	FinancialProfile *EnrollmentFinancialProfile `json:"financial_profile,omitempty"`
	// Details the customer's intended trading and banking-related activities at the time of account application; informs risk checks and forms a baseline for anomalous activity detection
	PlannedActivity *EnrollmentPlannedActivity `json:"planned_activity,omitempty"`
	// Information about the related politically exposed persons
	RelatedPepDetails *EnrollmentRelatedPepDetails `json:"related_pep_details,omitempty"`
}

func (o *ForeignNaturalPersonAccountEnrollmentMetadata) GetDepositedFunds() *EnrollmentDepositedFunds {
	if o == nil {
		return nil
	}
	return o.DepositedFunds
}

func (o *ForeignNaturalPersonAccountEnrollmentMetadata) GetFinancialProfile() *EnrollmentFinancialProfile {
	if o == nil {
		return nil
	}
	return o.FinancialProfile
}

func (o *ForeignNaturalPersonAccountEnrollmentMetadata) GetPlannedActivity() *EnrollmentPlannedActivity {
	if o == nil {
		return nil
	}
	return o.PlannedActivity
}

func (o *ForeignNaturalPersonAccountEnrollmentMetadata) GetRelatedPepDetails() *EnrollmentRelatedPepDetails {
	if o == nil {
		return nil
	}
	return o.RelatedPepDetails
}

// ForeignIndividualAccountEnrollmentMetadata - Metadata for the REGISTRATION_INDIVIDUAL_FOREIGN type
type ForeignIndividualAccountEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentForeignIndividualAccountEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentForeignIndividualAccountEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
	// Enrollment metadata for Accounts that have a foreign Legal Natural Person owner.
	ForeignNaturalPersonAccountEnrollmentMetadata *ForeignNaturalPersonAccountEnrollmentMetadata `json:"foreign_natural_person_account_enrollment_metadata,omitempty"`
}

func (o *ForeignIndividualAccountEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentForeignIndividualAccountEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *ForeignIndividualAccountEnrollmentMetadata) GetFdicCashSweep() *EnrollmentForeignIndividualAccountEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

func (o *ForeignIndividualAccountEnrollmentMetadata) GetForeignNaturalPersonAccountEnrollmentMetadata() *ForeignNaturalPersonAccountEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.ForeignNaturalPersonAccountEnrollmentMetadata
}

// EnrollmentForeignJointAccountEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentForeignJointAccountEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentForeignJointAccountEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentForeignJointAccountEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentForeignJointAccountEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentForeignJointAccountEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentForeignJointAccountEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentForeignJointAccountEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentForeignJointAccountEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentForeignJointAccountEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentForeignJointAccountEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentForeignJointAccountEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentForeignJointAccountEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentForeignJointAccountEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentForeignJointAccountEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentForeignJointAccountEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentForeignJointAccountEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentForeignJointAccountEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentForeignJointAccountEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentForeignJointAccountEnrollmentMetadataFdicCashSweep {
	return &e
}

// EnrollmentForeignJointAccountEnrollmentMetadataInitialDepositAmount - The initial deposit amount in USD
type EnrollmentForeignJointAccountEnrollmentMetadataInitialDepositAmount struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataInitialDepositAmount) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// EnrollmentForeignJointAccountEnrollmentMetadataDepositedFunds - The initial amount of money placed into the account by the entity upon or after the account's establishment.
type EnrollmentForeignJointAccountEnrollmentMetadataDepositedFunds struct {
	// The initial deposit amount in USD
	InitialDepositAmount *EnrollmentForeignJointAccountEnrollmentMetadataInitialDepositAmount `json:"initial_deposit_amount,omitempty"`
	// The source of the initial deposit
	InitialDepositSource *string `json:"initial_deposit_source,omitempty"`
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataDepositedFunds) GetInitialDepositAmount() *EnrollmentForeignJointAccountEnrollmentMetadataInitialDepositAmount {
	if o == nil {
		return nil
	}
	return o.InitialDepositAmount
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataDepositedFunds) GetInitialDepositSource() *string {
	if o == nil {
		return nil
	}
	return o.InitialDepositSource
}

// EnrollmentForeignJointAccountEnrollmentMetadataOtherAccounts - A customer-disclosed list of other Apex-held accounts owned by the Entity applicant at the time of this account's application; expressed as zero, one, or many account numbers
type EnrollmentForeignJointAccountEnrollmentMetadataOtherAccounts struct {
	// Other account names held at Apex
	AccountNames []string `json:"account_names,omitempty"`
	// Other account numbers held at Apex
	AccountNumbers []string `json:"account_numbers,omitempty"`
	// The owner has other accounts at Apex
	OwnerHasOtherAccountsAtApex *bool `json:"owner_has_other_accounts_at_apex,omitempty"`
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataOtherAccounts) GetAccountNames() []string {
	if o == nil {
		return nil
	}
	return o.AccountNames
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataOtherAccounts) GetAccountNumbers() []string {
	if o == nil {
		return nil
	}
	return o.AccountNumbers
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataOtherAccounts) GetOwnerHasOtherAccountsAtApex() *bool {
	if o == nil {
		return nil
	}
	return o.OwnerHasOtherAccountsAtApex
}

// EnrollmentForeignJointAccountEnrollmentMetadataFinancialProfile - Disclosure of the entity account owner's financial relationships and source of brokerage funds; facilitates the creation of the overall customer risk profile
type EnrollmentForeignJointAccountEnrollmentMetadataFinancialProfile struct {
	// Bank names with whom the entity maintains a relationship with (e.g., accounts held with the bank)
	BankingRelationships []string `json:"banking_relationships,omitempty"`
	// A customer-disclosed list of other Apex-held accounts owned by the Entity applicant at the time of this account's application; expressed as zero, one, or many account numbers
	OtherAccounts *EnrollmentForeignJointAccountEnrollmentMetadataOtherAccounts `json:"other_accounts,omitempty"`
	// The primary source of funds that will be deposited to this account
	PrimarySourceOfDepositedFunds *string `json:"primary_source_of_deposited_funds,omitempty"`
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataFinancialProfile) GetBankingRelationships() []string {
	if o == nil {
		return nil
	}
	return o.BankingRelationships
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataFinancialProfile) GetOtherAccounts() *EnrollmentForeignJointAccountEnrollmentMetadataOtherAccounts {
	if o == nil {
		return nil
	}
	return o.OtherAccounts
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataFinancialProfile) GetPrimarySourceOfDepositedFunds() *string {
	if o == nil {
		return nil
	}
	return o.PrimarySourceOfDepositedFunds
}

// EnrollmentForeignJointAccountEnrollmentMetadataForeignBondTradingDetails - The foreign bond trading countries details
type EnrollmentForeignJointAccountEnrollmentMetadataForeignBondTradingDetails struct {
	// Does the account anticipate trading in foreign bonds
	ForeignBondTrading *bool `json:"foreign_bond_trading,omitempty"`
	// The foreign bond trading countries details. If yes, than please provide details
	ForeignBondTradingDetail []ForeignBondTradingDetail `json:"foreign_bond_trading_detail,omitempty"`
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataForeignBondTradingDetails) GetForeignBondTrading() *bool {
	if o == nil {
		return nil
	}
	return o.ForeignBondTrading
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataForeignBondTradingDetails) GetForeignBondTradingDetail() []ForeignBondTradingDetail {
	if o == nil {
		return nil
	}
	return o.ForeignBondTradingDetail
}

// EnrollmentForeignJointAccountEnrollmentMetadataLowPricedSecuritiesPercentage - The percentage, by volume, of the account's trades which will involve low priced securities
type EnrollmentForeignJointAccountEnrollmentMetadataLowPricedSecuritiesPercentage struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataLowPricedSecuritiesPercentage) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// EnrollmentForeignJointAccountEnrollmentMetadataLowPricedSecurities - The account anticipates trading in securities trading for less than $5 per share and are typically traded over-the-counter (OTC) or through pink sheets
type EnrollmentForeignJointAccountEnrollmentMetadataLowPricedSecurities struct {
	// The account anticipates trading in securities trading for less than $5 per share and are typically traded over-the-counter (OTC) or through pink sheets
	LowPricedSecurities *bool `json:"low_priced_securities,omitempty"`
	// The percentage, by volume, of the account's trades which will involve low priced securities
	LowPricedSecuritiesPercentage *EnrollmentForeignJointAccountEnrollmentMetadataLowPricedSecuritiesPercentage `json:"low_priced_securities_percentage,omitempty"`
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataLowPricedSecurities) GetLowPricedSecurities() *bool {
	if o == nil {
		return nil
	}
	return o.LowPricedSecurities
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataLowPricedSecurities) GetLowPricedSecuritiesPercentage() *EnrollmentForeignJointAccountEnrollmentMetadataLowPricedSecuritiesPercentage {
	if o == nil {
		return nil
	}
	return o.LowPricedSecuritiesPercentage
}

// EnrollmentForeignJointAccountEnrollmentMetadataPrimaryAccountActivityType - The primary account activity type
type EnrollmentForeignJointAccountEnrollmentMetadataPrimaryAccountActivityType string

const (
	EnrollmentForeignJointAccountEnrollmentMetadataPrimaryAccountActivityTypePrimaryAccountActivityTypeUnspecified EnrollmentForeignJointAccountEnrollmentMetadataPrimaryAccountActivityType = "PRIMARY_ACCOUNT_ACTIVITY_TYPE_UNSPECIFIED"
	EnrollmentForeignJointAccountEnrollmentMetadataPrimaryAccountActivityTypeActiveTrading                         EnrollmentForeignJointAccountEnrollmentMetadataPrimaryAccountActivityType = "ACTIVE_TRADING"
	EnrollmentForeignJointAccountEnrollmentMetadataPrimaryAccountActivityTypeShortTermInvesting                    EnrollmentForeignJointAccountEnrollmentMetadataPrimaryAccountActivityType = "SHORT_TERM_INVESTING"
	EnrollmentForeignJointAccountEnrollmentMetadataPrimaryAccountActivityTypeLongTermInvesting                     EnrollmentForeignJointAccountEnrollmentMetadataPrimaryAccountActivityType = "LONG_TERM_INVESTING"
)

func (e EnrollmentForeignJointAccountEnrollmentMetadataPrimaryAccountActivityType) ToPointer() *EnrollmentForeignJointAccountEnrollmentMetadataPrimaryAccountActivityType {
	return &e
}

// EnrollmentForeignJointAccountEnrollmentMetadataWithdrawalFrequency - The frequency by which cash is anticipated to be withdrawn from the account
type EnrollmentForeignJointAccountEnrollmentMetadataWithdrawalFrequency string

const (
	EnrollmentForeignJointAccountEnrollmentMetadataWithdrawalFrequencyWithdrawalFrequencyUnspecified EnrollmentForeignJointAccountEnrollmentMetadataWithdrawalFrequency = "WITHDRAWAL_FREQUENCY_UNSPECIFIED"
	EnrollmentForeignJointAccountEnrollmentMetadataWithdrawalFrequencyFrequent                       EnrollmentForeignJointAccountEnrollmentMetadataWithdrawalFrequency = "FREQUENT"
	EnrollmentForeignJointAccountEnrollmentMetadataWithdrawalFrequencyOccasional                     EnrollmentForeignJointAccountEnrollmentMetadataWithdrawalFrequency = "OCCASIONAL"
	EnrollmentForeignJointAccountEnrollmentMetadataWithdrawalFrequencyRare                           EnrollmentForeignJointAccountEnrollmentMetadataWithdrawalFrequency = "RARE"
)

func (e EnrollmentForeignJointAccountEnrollmentMetadataWithdrawalFrequency) ToPointer() *EnrollmentForeignJointAccountEnrollmentMetadataWithdrawalFrequency {
	return &e
}

// EnrollmentForeignJointAccountEnrollmentMetadataPlannedActivity - Details the customer's intended trading and banking-related activities at the time of account application; informs risk checks and forms a baseline for anomalous activity detection
type EnrollmentForeignJointAccountEnrollmentMetadataPlannedActivity struct {
	// The foreign bond trading countries details
	ForeignBondTradingDetails *EnrollmentForeignJointAccountEnrollmentMetadataForeignBondTradingDetails `json:"foreign_bond_trading_details,omitempty"`
	// The account anticipates trading in securities trading for less than $5 per share and are typically traded over-the-counter (OTC) or through pink sheets
	LowPricedSecurities *EnrollmentForeignJointAccountEnrollmentMetadataLowPricedSecurities `json:"low_priced_securities,omitempty"`
	// The primary account activity type
	PrimaryAccountActivityType *EnrollmentForeignJointAccountEnrollmentMetadataPrimaryAccountActivityType `json:"primary_account_activity_type,omitempty"`
	// The frequency by which cash is anticipated to be withdrawn from the account
	WithdrawalFrequency *EnrollmentForeignJointAccountEnrollmentMetadataWithdrawalFrequency `json:"withdrawal_frequency,omitempty"`
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataPlannedActivity) GetForeignBondTradingDetails() *EnrollmentForeignJointAccountEnrollmentMetadataForeignBondTradingDetails {
	if o == nil {
		return nil
	}
	return o.ForeignBondTradingDetails
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataPlannedActivity) GetLowPricedSecurities() *EnrollmentForeignJointAccountEnrollmentMetadataLowPricedSecurities {
	if o == nil {
		return nil
	}
	return o.LowPricedSecurities
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataPlannedActivity) GetPrimaryAccountActivityType() *EnrollmentForeignJointAccountEnrollmentMetadataPrimaryAccountActivityType {
	if o == nil {
		return nil
	}
	return o.PrimaryAccountActivityType
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataPlannedActivity) GetWithdrawalFrequency() *EnrollmentForeignJointAccountEnrollmentMetadataWithdrawalFrequency {
	if o == nil {
		return nil
	}
	return o.WithdrawalFrequency
}

// EnrollmentForeignJointAccountEnrollmentMetadataRelatedPepDetails - Information about the related politically exposed persons
type EnrollmentForeignJointAccountEnrollmentMetadataRelatedPepDetails struct {
	// Indication as to whether or not an account has direct or indirect related politically exposed persons
	DirectOrIndirectRelatedPeps *bool `json:"direct_or_indirect_related_peps,omitempty"`
	// Related Peps
	RelatedPeps []RelatedPep `json:"related_peps,omitempty"`
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataRelatedPepDetails) GetDirectOrIndirectRelatedPeps() *bool {
	if o == nil {
		return nil
	}
	return o.DirectOrIndirectRelatedPeps
}

func (o *EnrollmentForeignJointAccountEnrollmentMetadataRelatedPepDetails) GetRelatedPeps() []RelatedPep {
	if o == nil {
		return nil
	}
	return o.RelatedPeps
}

// EnrollmentForeignNaturalPersonAccountEnrollmentMetadata - Enrollment metadata for Accounts that have a foreign Legal Natural Person owner.
type EnrollmentForeignNaturalPersonAccountEnrollmentMetadata struct {
	// The initial amount of money placed into the account by the entity upon or after the account's establishment.
	DepositedFunds *EnrollmentForeignJointAccountEnrollmentMetadataDepositedFunds `json:"deposited_funds,omitempty"`
	// Disclosure of the entity account owner's financial relationships and source of brokerage funds; facilitates the creation of the overall customer risk profile
	FinancialProfile *EnrollmentForeignJointAccountEnrollmentMetadataFinancialProfile `json:"financial_profile,omitempty"`
	// Details the customer's intended trading and banking-related activities at the time of account application; informs risk checks and forms a baseline for anomalous activity detection
	PlannedActivity *EnrollmentForeignJointAccountEnrollmentMetadataPlannedActivity `json:"planned_activity,omitempty"`
	// Information about the related politically exposed persons
	RelatedPepDetails *EnrollmentForeignJointAccountEnrollmentMetadataRelatedPepDetails `json:"related_pep_details,omitempty"`
}

func (o *EnrollmentForeignNaturalPersonAccountEnrollmentMetadata) GetDepositedFunds() *EnrollmentForeignJointAccountEnrollmentMetadataDepositedFunds {
	if o == nil {
		return nil
	}
	return o.DepositedFunds
}

func (o *EnrollmentForeignNaturalPersonAccountEnrollmentMetadata) GetFinancialProfile() *EnrollmentForeignJointAccountEnrollmentMetadataFinancialProfile {
	if o == nil {
		return nil
	}
	return o.FinancialProfile
}

func (o *EnrollmentForeignNaturalPersonAccountEnrollmentMetadata) GetPlannedActivity() *EnrollmentForeignJointAccountEnrollmentMetadataPlannedActivity {
	if o == nil {
		return nil
	}
	return o.PlannedActivity
}

func (o *EnrollmentForeignNaturalPersonAccountEnrollmentMetadata) GetRelatedPepDetails() *EnrollmentForeignJointAccountEnrollmentMetadataRelatedPepDetails {
	if o == nil {
		return nil
	}
	return o.RelatedPepDetails
}

// ForeignJointAccountEnrollmentMetadata - Metadata for the REGISTRATION_JOINT_FOREIGN_WROS type
type ForeignJointAccountEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentForeignJointAccountEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentForeignJointAccountEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
	// Enrollment metadata for Accounts that have a foreign Legal Natural Person owner.
	ForeignNaturalPersonAccountEnrollmentMetadata *EnrollmentForeignNaturalPersonAccountEnrollmentMetadata `json:"foreign_natural_person_account_enrollment_metadata,omitempty"`
}

func (o *ForeignJointAccountEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentForeignJointAccountEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *ForeignJointAccountEnrollmentMetadata) GetFdicCashSweep() *EnrollmentForeignJointAccountEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

func (o *ForeignJointAccountEnrollmentMetadata) GetForeignNaturalPersonAccountEnrollmentMetadata() *EnrollmentForeignNaturalPersonAccountEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.ForeignNaturalPersonAccountEnrollmentMetadata
}

// FpslEnrollmentMetadata - Metadata for the FULLY_PAID_STOCK_LENDING enrollment type
type FpslEnrollmentMetadata struct {
	// Customer Percentage for FPSL Enrollment.
	CustomerPercentage *float64 `json:"customer_percentage,omitempty"`
	// Firm Percentage for FPSL Enrollment.
	FirmPercentage *float64 `json:"firm_percentage,omitempty"`
	// FPSL MSLA minimum rate determines which MSLA split agreement to display
	FpslMslaMinimumRate *float64 `json:"fpsl_msla_minimum_rate,omitempty"`
	// Introducing Broker Percentage for FPSL Enrollment.
	IntroducingBrokerPercentage *float64 `json:"introducing_broker_percentage,omitempty"`
}

func (o *FpslEnrollmentMetadata) GetCustomerPercentage() *float64 {
	if o == nil {
		return nil
	}
	return o.CustomerPercentage
}

func (o *FpslEnrollmentMetadata) GetFirmPercentage() *float64 {
	if o == nil {
		return nil
	}
	return o.FirmPercentage
}

func (o *FpslEnrollmentMetadata) GetFpslMslaMinimumRate() *float64 {
	if o == nil {
		return nil
	}
	return o.FpslMslaMinimumRate
}

func (o *FpslEnrollmentMetadata) GetIntroducingBrokerPercentage() *float64 {
	if o == nil {
		return nil
	}
	return o.IntroducingBrokerPercentage
}

// EnrollmentIndividualEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentIndividualEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentIndividualEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentIndividualEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentIndividualEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentIndividualEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentIndividualEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentIndividualEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentIndividualEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentIndividualEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentIndividualEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentIndividualEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentIndividualEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentIndividualEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentIndividualEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentIndividualEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentIndividualEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentIndividualEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentIndividualEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentIndividualEnrollmentMetadataFdicCashSweep {
	return &e
}

// IndividualEnrollmentMetadata - Metadata for the INDIVIDUAL enrollment type
type IndividualEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentIndividualEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentIndividualEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
}

func (o *IndividualEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentIndividualEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *IndividualEnrollmentMetadata) GetFdicCashSweep() *EnrollmentIndividualEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

// EnrollmentIraBeneficiaryEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentIraBeneficiaryEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentIraBeneficiaryEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentIraBeneficiaryEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentIraBeneficiaryEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentIraBeneficiaryEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentIraBeneficiaryEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentIraBeneficiaryEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentIraBeneficiaryEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentIraBeneficiaryEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentIraBeneficiaryEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentIraBeneficiaryEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentIraBeneficiaryEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentIraBeneficiaryEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentIraBeneficiaryEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentIraBeneficiaryEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentIraBeneficiaryEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentIraBeneficiaryEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentIraBeneficiaryEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentIraBeneficiaryEnrollmentMetadataFdicCashSweep {
	return &e
}

// InheritedFromOwnerBirthDate - The birth date of the owner from whom the account is inherited
type InheritedFromOwnerBirthDate struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day *int `json:"day,omitempty"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month *int `json:"month,omitempty"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year *int `json:"year,omitempty"`
}

func (o *InheritedFromOwnerBirthDate) GetDay() *int {
	if o == nil {
		return nil
	}
	return o.Day
}

func (o *InheritedFromOwnerBirthDate) GetMonth() *int {
	if o == nil {
		return nil
	}
	return o.Month
}

func (o *InheritedFromOwnerBirthDate) GetYear() *int {
	if o == nil {
		return nil
	}
	return o.Year
}

// InheritedFromOwnerDeathDate - The death date of the owner from whom the account is inherited
type InheritedFromOwnerDeathDate struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day *int `json:"day,omitempty"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month *int `json:"month,omitempty"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year *int `json:"year,omitempty"`
}

func (o *InheritedFromOwnerDeathDate) GetDay() *int {
	if o == nil {
		return nil
	}
	return o.Day
}

func (o *InheritedFromOwnerDeathDate) GetMonth() *int {
	if o == nil {
		return nil
	}
	return o.Month
}

func (o *InheritedFromOwnerDeathDate) GetYear() *int {
	if o == nil {
		return nil
	}
	return o.Year
}

// IraBeneficiaryEnrollmentMetadata - Metadata for the REGISTRATION_IRA_BENEFICIARY_ROTH and REGISTRATION_IRA_BENEFICIARY_TRADITIONAL enrollment type
type IraBeneficiaryEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentIraBeneficiaryEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentIraBeneficiaryEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
	// The birth date of the owner from whom the account is inherited
	InheritedFromOwnerBirthDate *InheritedFromOwnerBirthDate `json:"inherited_from_owner_birth_date,omitempty"`
	// The death date of the owner from whom the account is inherited
	InheritedFromOwnerDeathDate *InheritedFromOwnerDeathDate `json:"inherited_from_owner_death_date,omitempty"`
	// The name of the owner from whom the account is inherited
	InheritedFromOwnerName *string `json:"inherited_from_owner_name,omitempty"`
	// Indicates if the customer is the spouse of the decedent
	InheritorIsDecedentsSpouse *bool `json:"inheritor_is_decedents_spouse,omitempty"`
}

func (o *IraBeneficiaryEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentIraBeneficiaryEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *IraBeneficiaryEnrollmentMetadata) GetFdicCashSweep() *EnrollmentIraBeneficiaryEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

func (o *IraBeneficiaryEnrollmentMetadata) GetInheritedFromOwnerBirthDate() *InheritedFromOwnerBirthDate {
	if o == nil {
		return nil
	}
	return o.InheritedFromOwnerBirthDate
}

func (o *IraBeneficiaryEnrollmentMetadata) GetInheritedFromOwnerDeathDate() *InheritedFromOwnerDeathDate {
	if o == nil {
		return nil
	}
	return o.InheritedFromOwnerDeathDate
}

func (o *IraBeneficiaryEnrollmentMetadata) GetInheritedFromOwnerName() *string {
	if o == nil {
		return nil
	}
	return o.InheritedFromOwnerName
}

func (o *IraBeneficiaryEnrollmentMetadata) GetInheritorIsDecedentsSpouse() *bool {
	if o == nil {
		return nil
	}
	return o.InheritorIsDecedentsSpouse
}

// EnrollmentIraRolloverEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentIraRolloverEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentIraRolloverEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentIraRolloverEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentIraRolloverEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentIraRolloverEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentIraRolloverEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentIraRolloverEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentIraRolloverEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentIraRolloverEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentIraRolloverEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentIraRolloverEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentIraRolloverEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentIraRolloverEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentIraRolloverEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentIraRolloverEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentIraRolloverEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentIraRolloverEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentIraRolloverEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentIraRolloverEnrollmentMetadataFdicCashSweep {
	return &e
}

// IraRolloverEnrollmentMetadata - Metadata for the ROLLOVER_IRA_REGISTRATION enrollment type
type IraRolloverEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentIraRolloverEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentIraRolloverEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
}

func (o *IraRolloverEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentIraRolloverEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *IraRolloverEnrollmentMetadata) GetFdicCashSweep() *EnrollmentIraRolloverEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

// EnrollmentIraRothEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentIraRothEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentIraRothEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentIraRothEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentIraRothEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentIraRothEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentIraRothEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentIraRothEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentIraRothEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentIraRothEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentIraRothEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentIraRothEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentIraRothEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentIraRothEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentIraRothEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentIraRothEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentIraRothEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentIraRothEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentIraRothEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentIraRothEnrollmentMetadataFdicCashSweep {
	return &e
}

// IraRothEnrollmentMetadata - Metadata for the ROTH_IRA_REGISTRATION enrollment type
type IraRothEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentIraRothEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentIraRothEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
}

func (o *IraRothEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentIraRothEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *IraRothEnrollmentMetadata) GetFdicCashSweep() *EnrollmentIraRothEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

// EnrollmentIraSepEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentIraSepEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentIraSepEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentIraSepEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentIraSepEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentIraSepEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentIraSepEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentIraSepEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentIraSepEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentIraSepEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentIraSepEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentIraSepEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentIraSepEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentIraSepEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentIraSepEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentIraSepEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentIraSepEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentIraSepEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentIraSepEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentIraSepEnrollmentMetadataFdicCashSweep {
	return &e
}

// IraSepEnrollmentMetadata - Metadata for the SEP_IRA_REGISTRATION enrollment type
type IraSepEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentIraSepEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentIraSepEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
}

func (o *IraSepEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentIraSepEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *IraSepEnrollmentMetadata) GetFdicCashSweep() *EnrollmentIraSepEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

// EnrollmentIraSimpleEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentIraSimpleEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentIraSimpleEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentIraSimpleEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentIraSimpleEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentIraSimpleEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentIraSimpleEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentIraSimpleEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentIraSimpleEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentIraSimpleEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentIraSimpleEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentIraSimpleEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentIraSimpleEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentIraSimpleEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentIraSimpleEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentIraSimpleEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentIraSimpleEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentIraSimpleEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentIraSimpleEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentIraSimpleEnrollmentMetadataFdicCashSweep {
	return &e
}

// IraSimpleEnrollmentMetadata - Metadata for the SIMPLE_IRA_REGISTRATION enrollment type
type IraSimpleEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentIraSimpleEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentIraSimpleEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
}

func (o *IraSimpleEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentIraSimpleEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *IraSimpleEnrollmentMetadata) GetFdicCashSweep() *EnrollmentIraSimpleEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

// EnrollmentIraTraditionalEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentIraTraditionalEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentIraTraditionalEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentIraTraditionalEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentIraTraditionalEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentIraTraditionalEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentIraTraditionalEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentIraTraditionalEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentIraTraditionalEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentIraTraditionalEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentIraTraditionalEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentIraTraditionalEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentIraTraditionalEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentIraTraditionalEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentIraTraditionalEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentIraTraditionalEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentIraTraditionalEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentIraTraditionalEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentIraTraditionalEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentIraTraditionalEnrollmentMetadataFdicCashSweep {
	return &e
}

// IraTraditionalEnrollmentMetadata - Metadata for the TRADITIONAL_IRA_REGISTRATION enrollment type
type IraTraditionalEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentIraTraditionalEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentIraTraditionalEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
}

func (o *IraTraditionalEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentIraTraditionalEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *IraTraditionalEnrollmentMetadata) GetFdicCashSweep() *EnrollmentIraTraditionalEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

// EnrollmentJointCommunityPropertyEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentJointCommunityPropertyEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentJointCommunityPropertyEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentJointCommunityPropertyEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentJointCommunityPropertyEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentJointCommunityPropertyEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentJointCommunityPropertyEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentJointCommunityPropertyEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentJointCommunityPropertyEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentJointCommunityPropertyEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentJointCommunityPropertyEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentJointCommunityPropertyEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentJointCommunityPropertyEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentJointCommunityPropertyEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentJointCommunityPropertyEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentJointCommunityPropertyEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentJointCommunityPropertyEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentJointCommunityPropertyEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentJointCommunityPropertyEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentJointCommunityPropertyEnrollmentMetadataFdicCashSweep {
	return &e
}

// EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple - The legal residency state of a married couple
type EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple string

const (
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleLegalResidencyStateOfMarriedCoupleUnspecified EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "LEGAL_RESIDENCY_STATE_OF_MARRIED_COUPLE_UNSPECIFIED"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleAk                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "AK"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleAz                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "AZ"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleAr                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "AR"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleCa                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "CA"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleDe                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "DE"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleFl                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "FL"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleHi                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "HI"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleID                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "ID"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleIl                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "IL"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleIn                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "IN"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleKy                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "KY"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleLa                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "LA"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleMd                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "MD"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleMa                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "MA"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleMi                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "MI"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleMs                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "MS"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleMo                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "MO"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleNv                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "NV"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleNj                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "NJ"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleNm                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "NM"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleNy                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "NY"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleNc                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "NC"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleOh                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "OH"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleOk                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "OK"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleOr                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "OR"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouplePa                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "PA"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleRi                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "RI"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleTn                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "TN"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleTx                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "TX"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleVt                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "VT"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleVa                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "VA"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleWa                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "WA"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleWi                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "WI"
	EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCoupleWy                                            EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple = "WY"
)

func (e EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple) ToPointer() *EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple {
	return &e
}

// JointCommunityPropertyEnrollmentMetadata - Metadata for the JOINT_COMMUNITY_PROPERTY_REGISTRATION enrollment type
type JointCommunityPropertyEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentJointCommunityPropertyEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentJointCommunityPropertyEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
	// The legal residency state of a married couple
	LegalResidencyStateOfMarriedCouple *EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple `json:"legal_residency_state_of_married_couple,omitempty"`
}

func (o *JointCommunityPropertyEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentJointCommunityPropertyEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *JointCommunityPropertyEnrollmentMetadata) GetFdicCashSweep() *EnrollmentJointCommunityPropertyEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

func (o *JointCommunityPropertyEnrollmentMetadata) GetLegalResidencyStateOfMarriedCouple() *EnrollmentJointCommunityPropertyEnrollmentMetadataLegalResidencyStateOfMarriedCouple {
	if o == nil {
		return nil
	}
	return o.LegalResidencyStateOfMarriedCouple
}

// EnrollmentJointTenantsByEntiretyEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentJointTenantsByEntiretyEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentJointTenantsByEntiretyEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentJointTenantsByEntiretyEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentJointTenantsByEntiretyEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentJointTenantsByEntiretyEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentJointTenantsByEntiretyEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentJointTenantsByEntiretyEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentJointTenantsByEntiretyEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentJointTenantsByEntiretyEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentJointTenantsByEntiretyEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentJointTenantsByEntiretyEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentJointTenantsByEntiretyEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentJointTenantsByEntiretyEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentJointTenantsByEntiretyEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentJointTenantsByEntiretyEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentJointTenantsByEntiretyEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentJointTenantsByEntiretyEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentJointTenantsByEntiretyEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentJointTenantsByEntiretyEnrollmentMetadataFdicCashSweep {
	return &e
}

// EnrollmentLegalResidencyStateOfMarriedCouple - The legal residency state of a married couple
type EnrollmentLegalResidencyStateOfMarriedCouple string

const (
	EnrollmentLegalResidencyStateOfMarriedCoupleLegalResidencyStateOfMarriedCoupleUnspecified EnrollmentLegalResidencyStateOfMarriedCouple = "LEGAL_RESIDENCY_STATE_OF_MARRIED_COUPLE_UNSPECIFIED"
	EnrollmentLegalResidencyStateOfMarriedCoupleAk                                            EnrollmentLegalResidencyStateOfMarriedCouple = "AK"
	EnrollmentLegalResidencyStateOfMarriedCoupleAz                                            EnrollmentLegalResidencyStateOfMarriedCouple = "AZ"
	EnrollmentLegalResidencyStateOfMarriedCoupleAr                                            EnrollmentLegalResidencyStateOfMarriedCouple = "AR"
	EnrollmentLegalResidencyStateOfMarriedCoupleCa                                            EnrollmentLegalResidencyStateOfMarriedCouple = "CA"
	EnrollmentLegalResidencyStateOfMarriedCoupleDe                                            EnrollmentLegalResidencyStateOfMarriedCouple = "DE"
	EnrollmentLegalResidencyStateOfMarriedCoupleFl                                            EnrollmentLegalResidencyStateOfMarriedCouple = "FL"
	EnrollmentLegalResidencyStateOfMarriedCoupleHi                                            EnrollmentLegalResidencyStateOfMarriedCouple = "HI"
	EnrollmentLegalResidencyStateOfMarriedCoupleID                                            EnrollmentLegalResidencyStateOfMarriedCouple = "ID"
	EnrollmentLegalResidencyStateOfMarriedCoupleIl                                            EnrollmentLegalResidencyStateOfMarriedCouple = "IL"
	EnrollmentLegalResidencyStateOfMarriedCoupleIn                                            EnrollmentLegalResidencyStateOfMarriedCouple = "IN"
	EnrollmentLegalResidencyStateOfMarriedCoupleKy                                            EnrollmentLegalResidencyStateOfMarriedCouple = "KY"
	EnrollmentLegalResidencyStateOfMarriedCoupleLa                                            EnrollmentLegalResidencyStateOfMarriedCouple = "LA"
	EnrollmentLegalResidencyStateOfMarriedCoupleMd                                            EnrollmentLegalResidencyStateOfMarriedCouple = "MD"
	EnrollmentLegalResidencyStateOfMarriedCoupleMa                                            EnrollmentLegalResidencyStateOfMarriedCouple = "MA"
	EnrollmentLegalResidencyStateOfMarriedCoupleMi                                            EnrollmentLegalResidencyStateOfMarriedCouple = "MI"
	EnrollmentLegalResidencyStateOfMarriedCoupleMs                                            EnrollmentLegalResidencyStateOfMarriedCouple = "MS"
	EnrollmentLegalResidencyStateOfMarriedCoupleMo                                            EnrollmentLegalResidencyStateOfMarriedCouple = "MO"
	EnrollmentLegalResidencyStateOfMarriedCoupleNv                                            EnrollmentLegalResidencyStateOfMarriedCouple = "NV"
	EnrollmentLegalResidencyStateOfMarriedCoupleNj                                            EnrollmentLegalResidencyStateOfMarriedCouple = "NJ"
	EnrollmentLegalResidencyStateOfMarriedCoupleNm                                            EnrollmentLegalResidencyStateOfMarriedCouple = "NM"
	EnrollmentLegalResidencyStateOfMarriedCoupleNy                                            EnrollmentLegalResidencyStateOfMarriedCouple = "NY"
	EnrollmentLegalResidencyStateOfMarriedCoupleNc                                            EnrollmentLegalResidencyStateOfMarriedCouple = "NC"
	EnrollmentLegalResidencyStateOfMarriedCoupleOh                                            EnrollmentLegalResidencyStateOfMarriedCouple = "OH"
	EnrollmentLegalResidencyStateOfMarriedCoupleOk                                            EnrollmentLegalResidencyStateOfMarriedCouple = "OK"
	EnrollmentLegalResidencyStateOfMarriedCoupleOr                                            EnrollmentLegalResidencyStateOfMarriedCouple = "OR"
	EnrollmentLegalResidencyStateOfMarriedCouplePa                                            EnrollmentLegalResidencyStateOfMarriedCouple = "PA"
	EnrollmentLegalResidencyStateOfMarriedCoupleRi                                            EnrollmentLegalResidencyStateOfMarriedCouple = "RI"
	EnrollmentLegalResidencyStateOfMarriedCoupleTn                                            EnrollmentLegalResidencyStateOfMarriedCouple = "TN"
	EnrollmentLegalResidencyStateOfMarriedCoupleTx                                            EnrollmentLegalResidencyStateOfMarriedCouple = "TX"
	EnrollmentLegalResidencyStateOfMarriedCoupleVt                                            EnrollmentLegalResidencyStateOfMarriedCouple = "VT"
	EnrollmentLegalResidencyStateOfMarriedCoupleVa                                            EnrollmentLegalResidencyStateOfMarriedCouple = "VA"
	EnrollmentLegalResidencyStateOfMarriedCoupleWa                                            EnrollmentLegalResidencyStateOfMarriedCouple = "WA"
	EnrollmentLegalResidencyStateOfMarriedCoupleWi                                            EnrollmentLegalResidencyStateOfMarriedCouple = "WI"
	EnrollmentLegalResidencyStateOfMarriedCoupleWy                                            EnrollmentLegalResidencyStateOfMarriedCouple = "WY"
)

func (e EnrollmentLegalResidencyStateOfMarriedCouple) ToPointer() *EnrollmentLegalResidencyStateOfMarriedCouple {
	return &e
}

// JointTenantsByEntiretyEnrollmentMetadata - Metadata for the JOINT_TENANTS_BY_ENTIRETY_REGISTRATION enrollment type
type JointTenantsByEntiretyEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentJointTenantsByEntiretyEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentJointTenantsByEntiretyEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
	// The legal residency state of a married couple
	LegalResidencyStateOfMarriedCouple *EnrollmentLegalResidencyStateOfMarriedCouple `json:"legal_residency_state_of_married_couple,omitempty"`
}

func (o *JointTenantsByEntiretyEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentJointTenantsByEntiretyEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *JointTenantsByEntiretyEnrollmentMetadata) GetFdicCashSweep() *EnrollmentJointTenantsByEntiretyEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

func (o *JointTenantsByEntiretyEnrollmentMetadata) GetLegalResidencyStateOfMarriedCouple() *EnrollmentLegalResidencyStateOfMarriedCouple {
	if o == nil {
		return nil
	}
	return o.LegalResidencyStateOfMarriedCouple
}

// EnrollmentJointTenantsInCommonEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentJointTenantsInCommonEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentJointTenantsInCommonEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentJointTenantsInCommonEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentJointTenantsInCommonEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentJointTenantsInCommonEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentJointTenantsInCommonEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentJointTenantsInCommonEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentJointTenantsInCommonEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentJointTenantsInCommonEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentJointTenantsInCommonEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentJointTenantsInCommonEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentJointTenantsInCommonEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentJointTenantsInCommonEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentJointTenantsInCommonEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentJointTenantsInCommonEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentJointTenantsInCommonEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentJointTenantsInCommonEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentJointTenantsInCommonEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentJointTenantsInCommonEnrollmentMetadataFdicCashSweep {
	return &e
}

// JointTenantsInCommonEnrollmentMetadata - Metadata for the JOINT_TENANTS_IN_COMMON_REGISTRATION enrollment type
type JointTenantsInCommonEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentJointTenantsInCommonEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentJointTenantsInCommonEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
}

func (o *JointTenantsInCommonEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentJointTenantsInCommonEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *JointTenantsInCommonEnrollmentMetadata) GetFdicCashSweep() *EnrollmentJointTenantsInCommonEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

// EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataFdicCashSweep {
	return &e
}

// JointWithRightsOfSurvivorshipEnrollmentMetadata - Metadata for the JOINT_WITH_RIGHTS_OF_SURVIVORSHIP_REGISTRATION enrollment type
type JointWithRightsOfSurvivorshipEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
}

func (o *JointWithRightsOfSurvivorshipEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *JointWithRightsOfSurvivorshipEnrollmentMetadata) GetFdicCashSweep() *EnrollmentJointWithRightsOfSurvivorshipEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

// EnrollmentLlcEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentLlcEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentLlcEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentLlcEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentLlcEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentLlcEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentLlcEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentLlcEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentLlcEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentLlcEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentLlcEnrollmentMetadataInitialDepositAmount - The initial deposit amount in USD
type EnrollmentLlcEnrollmentMetadataInitialDepositAmount struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *EnrollmentLlcEnrollmentMetadataInitialDepositAmount) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// EnrollmentLlcEnrollmentMetadataDepositedFunds - The initial amount of money placed into the account by the customer upon or after the account's establishment.
type EnrollmentLlcEnrollmentMetadataDepositedFunds struct {
	// The initial deposit amount in USD
	InitialDepositAmount *EnrollmentLlcEnrollmentMetadataInitialDepositAmount `json:"initial_deposit_amount,omitempty"`
	// The source of the initial deposit
	InitialDepositSource *string `json:"initial_deposit_source,omitempty"`
}

func (o *EnrollmentLlcEnrollmentMetadataDepositedFunds) GetInitialDepositAmount() *EnrollmentLlcEnrollmentMetadataInitialDepositAmount {
	if o == nil {
		return nil
	}
	return o.InitialDepositAmount
}

func (o *EnrollmentLlcEnrollmentMetadataDepositedFunds) GetInitialDepositSource() *string {
	if o == nil {
		return nil
	}
	return o.InitialDepositSource
}

// EnrollmentDeterminedAccountRiskRating - The client determined account risk rating of the entity customer
type EnrollmentDeterminedAccountRiskRating string

const (
	EnrollmentDeterminedAccountRiskRatingDeterminedAccountRiskRatingUnspecified EnrollmentDeterminedAccountRiskRating = "DETERMINED_ACCOUNT_RISK_RATING_UNSPECIFIED"
	EnrollmentDeterminedAccountRiskRatingLow                                    EnrollmentDeterminedAccountRiskRating = "LOW"
	EnrollmentDeterminedAccountRiskRatingMedium                                 EnrollmentDeterminedAccountRiskRating = "MEDIUM"
	EnrollmentDeterminedAccountRiskRatingHigh                                   EnrollmentDeterminedAccountRiskRating = "HIGH"
)

func (e EnrollmentDeterminedAccountRiskRating) ToPointer() *EnrollmentDeterminedAccountRiskRating {
	return &e
}

// EnrollmentLlcEnrollmentMetadataOtherAccounts - A customer-disclosed list of other Apex-held accounts owned by the Entity applicant at the time of this account's application; expressed as zero, one, or many account numbers
type EnrollmentLlcEnrollmentMetadataOtherAccounts struct {
	// Other account names held at Apex
	AccountNames []string `json:"account_names,omitempty"`
	// Other account numbers held at Apex
	AccountNumbers []string `json:"account_numbers,omitempty"`
	// The owner has other accounts at Apex
	OwnerHasOtherAccountsAtApex *bool `json:"owner_has_other_accounts_at_apex,omitempty"`
}

func (o *EnrollmentLlcEnrollmentMetadataOtherAccounts) GetAccountNames() []string {
	if o == nil {
		return nil
	}
	return o.AccountNames
}

func (o *EnrollmentLlcEnrollmentMetadataOtherAccounts) GetAccountNumbers() []string {
	if o == nil {
		return nil
	}
	return o.AccountNumbers
}

func (o *EnrollmentLlcEnrollmentMetadataOtherAccounts) GetOwnerHasOtherAccountsAtApex() *bool {
	if o == nil {
		return nil
	}
	return o.OwnerHasOtherAccountsAtApex
}

// EnrollmentLlcEnrollmentMetadataFinancialProfile - Disclosure of the account owner's financial relationships and source of brokerage funds; facilitates the creation of the overall customer risk profile
type EnrollmentLlcEnrollmentMetadataFinancialProfile struct {
	// Bank names with whom the entity maintains a relationship with (e.g., accounts held with the bank)
	BankingRelationships []string `json:"banking_relationships,omitempty"`
	// A customer-disclosed list of other Apex-held accounts owned by the Entity applicant at the time of this account's application; expressed as zero, one, or many account numbers
	OtherAccounts *EnrollmentLlcEnrollmentMetadataOtherAccounts `json:"other_accounts,omitempty"`
	// The primary source of funds that will be deposited to this account
	PrimarySourceOfDepositedFunds *string `json:"primary_source_of_deposited_funds,omitempty"`
}

func (o *EnrollmentLlcEnrollmentMetadataFinancialProfile) GetBankingRelationships() []string {
	if o == nil {
		return nil
	}
	return o.BankingRelationships
}

func (o *EnrollmentLlcEnrollmentMetadataFinancialProfile) GetOtherAccounts() *EnrollmentLlcEnrollmentMetadataOtherAccounts {
	if o == nil {
		return nil
	}
	return o.OtherAccounts
}

func (o *EnrollmentLlcEnrollmentMetadataFinancialProfile) GetPrimarySourceOfDepositedFunds() *string {
	if o == nil {
		return nil
	}
	return o.PrimarySourceOfDepositedFunds
}

// EnrollmentLlcEnrollmentMetadataForeignBondTradingDetails - The foreign bond trading countries details
type EnrollmentLlcEnrollmentMetadataForeignBondTradingDetails struct {
	// Does the account anticipate trading in foreign bonds
	ForeignBondTrading *bool `json:"foreign_bond_trading,omitempty"`
	// The foreign bond trading countries details. If yes, than please provide details
	ForeignBondTradingDetail []ForeignBondTradingDetail `json:"foreign_bond_trading_detail,omitempty"`
}

func (o *EnrollmentLlcEnrollmentMetadataForeignBondTradingDetails) GetForeignBondTrading() *bool {
	if o == nil {
		return nil
	}
	return o.ForeignBondTrading
}

func (o *EnrollmentLlcEnrollmentMetadataForeignBondTradingDetails) GetForeignBondTradingDetail() []ForeignBondTradingDetail {
	if o == nil {
		return nil
	}
	return o.ForeignBondTradingDetail
}

// EnrollmentLlcEnrollmentMetadataLowPricedSecuritiesPercentage - The percentage, by volume, of the account's trades which will involve low priced securities
type EnrollmentLlcEnrollmentMetadataLowPricedSecuritiesPercentage struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *EnrollmentLlcEnrollmentMetadataLowPricedSecuritiesPercentage) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// EnrollmentLlcEnrollmentMetadataLowPricedSecurities - The account anticipates trading in securities trading for less than $5 per share and are typically traded over-the-counter (OTC) or through pink sheets
type EnrollmentLlcEnrollmentMetadataLowPricedSecurities struct {
	// The account anticipates trading in securities trading for less than $5 per share and are typically traded over-the-counter (OTC) or through pink sheets
	LowPricedSecurities *bool `json:"low_priced_securities,omitempty"`
	// The percentage, by volume, of the account's trades which will involve low priced securities
	LowPricedSecuritiesPercentage *EnrollmentLlcEnrollmentMetadataLowPricedSecuritiesPercentage `json:"low_priced_securities_percentage,omitempty"`
}

func (o *EnrollmentLlcEnrollmentMetadataLowPricedSecurities) GetLowPricedSecurities() *bool {
	if o == nil {
		return nil
	}
	return o.LowPricedSecurities
}

func (o *EnrollmentLlcEnrollmentMetadataLowPricedSecurities) GetLowPricedSecuritiesPercentage() *EnrollmentLlcEnrollmentMetadataLowPricedSecuritiesPercentage {
	if o == nil {
		return nil
	}
	return o.LowPricedSecuritiesPercentage
}

// EnrollmentLlcEnrollmentMetadataPrimaryAccountActivityType - The primary account activity type
type EnrollmentLlcEnrollmentMetadataPrimaryAccountActivityType string

const (
	EnrollmentLlcEnrollmentMetadataPrimaryAccountActivityTypePrimaryAccountActivityTypeUnspecified EnrollmentLlcEnrollmentMetadataPrimaryAccountActivityType = "PRIMARY_ACCOUNT_ACTIVITY_TYPE_UNSPECIFIED"
	EnrollmentLlcEnrollmentMetadataPrimaryAccountActivityTypeActiveTrading                         EnrollmentLlcEnrollmentMetadataPrimaryAccountActivityType = "ACTIVE_TRADING"
	EnrollmentLlcEnrollmentMetadataPrimaryAccountActivityTypeShortTermInvesting                    EnrollmentLlcEnrollmentMetadataPrimaryAccountActivityType = "SHORT_TERM_INVESTING"
	EnrollmentLlcEnrollmentMetadataPrimaryAccountActivityTypeLongTermInvesting                     EnrollmentLlcEnrollmentMetadataPrimaryAccountActivityType = "LONG_TERM_INVESTING"
)

func (e EnrollmentLlcEnrollmentMetadataPrimaryAccountActivityType) ToPointer() *EnrollmentLlcEnrollmentMetadataPrimaryAccountActivityType {
	return &e
}

// EnrollmentLlcEnrollmentMetadataWithdrawalFrequency - The frequency by which cash is anticipated to be withdrawn from the account
type EnrollmentLlcEnrollmentMetadataWithdrawalFrequency string

const (
	EnrollmentLlcEnrollmentMetadataWithdrawalFrequencyWithdrawalFrequencyUnspecified EnrollmentLlcEnrollmentMetadataWithdrawalFrequency = "WITHDRAWAL_FREQUENCY_UNSPECIFIED"
	EnrollmentLlcEnrollmentMetadataWithdrawalFrequencyFrequent                       EnrollmentLlcEnrollmentMetadataWithdrawalFrequency = "FREQUENT"
	EnrollmentLlcEnrollmentMetadataWithdrawalFrequencyOccasional                     EnrollmentLlcEnrollmentMetadataWithdrawalFrequency = "OCCASIONAL"
	EnrollmentLlcEnrollmentMetadataWithdrawalFrequencyRare                           EnrollmentLlcEnrollmentMetadataWithdrawalFrequency = "RARE"
)

func (e EnrollmentLlcEnrollmentMetadataWithdrawalFrequency) ToPointer() *EnrollmentLlcEnrollmentMetadataWithdrawalFrequency {
	return &e
}

// EnrollmentLlcEnrollmentMetadataPlannedActivity - Details the customer's intended trading and banking-related activities at the time of account application; informs risk checks and forms a baseline for anomalous activity detection
type EnrollmentLlcEnrollmentMetadataPlannedActivity struct {
	// The foreign bond trading countries details
	ForeignBondTradingDetails *EnrollmentLlcEnrollmentMetadataForeignBondTradingDetails `json:"foreign_bond_trading_details,omitempty"`
	// The account anticipates trading in securities trading for less than $5 per share and are typically traded over-the-counter (OTC) or through pink sheets
	LowPricedSecurities *EnrollmentLlcEnrollmentMetadataLowPricedSecurities `json:"low_priced_securities,omitempty"`
	// The primary account activity type
	PrimaryAccountActivityType *EnrollmentLlcEnrollmentMetadataPrimaryAccountActivityType `json:"primary_account_activity_type,omitempty"`
	// The frequency by which cash is anticipated to be withdrawn from the account
	WithdrawalFrequency *EnrollmentLlcEnrollmentMetadataWithdrawalFrequency `json:"withdrawal_frequency,omitempty"`
}

func (o *EnrollmentLlcEnrollmentMetadataPlannedActivity) GetForeignBondTradingDetails() *EnrollmentLlcEnrollmentMetadataForeignBondTradingDetails {
	if o == nil {
		return nil
	}
	return o.ForeignBondTradingDetails
}

func (o *EnrollmentLlcEnrollmentMetadataPlannedActivity) GetLowPricedSecurities() *EnrollmentLlcEnrollmentMetadataLowPricedSecurities {
	if o == nil {
		return nil
	}
	return o.LowPricedSecurities
}

func (o *EnrollmentLlcEnrollmentMetadataPlannedActivity) GetPrimaryAccountActivityType() *EnrollmentLlcEnrollmentMetadataPrimaryAccountActivityType {
	if o == nil {
		return nil
	}
	return o.PrimaryAccountActivityType
}

func (o *EnrollmentLlcEnrollmentMetadataPlannedActivity) GetWithdrawalFrequency() *EnrollmentLlcEnrollmentMetadataWithdrawalFrequency {
	if o == nil {
		return nil
	}
	return o.WithdrawalFrequency
}

// EnrollmentLlcEnrollmentMetadataRelatedPepDetails - Information about the related politically exposed persons
type EnrollmentLlcEnrollmentMetadataRelatedPepDetails struct {
	// Indication as to whether or not an account has direct or indirect related politically exposed persons
	DirectOrIndirectRelatedPeps *bool `json:"direct_or_indirect_related_peps,omitempty"`
	// Related Peps
	RelatedPeps []RelatedPep `json:"related_peps,omitempty"`
}

func (o *EnrollmentLlcEnrollmentMetadataRelatedPepDetails) GetDirectOrIndirectRelatedPeps() *bool {
	if o == nil {
		return nil
	}
	return o.DirectOrIndirectRelatedPeps
}

func (o *EnrollmentLlcEnrollmentMetadataRelatedPepDetails) GetRelatedPeps() []RelatedPep {
	if o == nil {
		return nil
	}
	return o.RelatedPeps
}

// EnrollmentEddAccountEnrollmentMetadata - Enrollment metadata for entity accounts
type EnrollmentEddAccountEnrollmentMetadata struct {
	// The initial amount of money placed into the account by the customer upon or after the account's establishment.
	DepositedFunds *EnrollmentLlcEnrollmentMetadataDepositedFunds `json:"deposited_funds,omitempty"`
	// The client determined account risk rating of the entity customer
	DeterminedAccountRiskRating *EnrollmentDeterminedAccountRiskRating `json:"determined_account_risk_rating,omitempty"`
	// Disclosure of the account owner's financial relationships and source of brokerage funds; facilitates the creation of the overall customer risk profile
	FinancialProfile *EnrollmentLlcEnrollmentMetadataFinancialProfile `json:"financial_profile,omitempty"`
	// Details the customer's intended trading and banking-related activities at the time of account application; informs risk checks and forms a baseline for anomalous activity detection
	PlannedActivity *EnrollmentLlcEnrollmentMetadataPlannedActivity `json:"planned_activity,omitempty"`
	// Information about the related politically exposed persons
	RelatedPepDetails *EnrollmentLlcEnrollmentMetadataRelatedPepDetails `json:"related_pep_details,omitempty"`
	// The scope of the business for the entity customer
	ScopeOfBusiness *string `json:"scope_of_business,omitempty"`
}

func (o *EnrollmentEddAccountEnrollmentMetadata) GetDepositedFunds() *EnrollmentLlcEnrollmentMetadataDepositedFunds {
	if o == nil {
		return nil
	}
	return o.DepositedFunds
}

func (o *EnrollmentEddAccountEnrollmentMetadata) GetDeterminedAccountRiskRating() *EnrollmentDeterminedAccountRiskRating {
	if o == nil {
		return nil
	}
	return o.DeterminedAccountRiskRating
}

func (o *EnrollmentEddAccountEnrollmentMetadata) GetFinancialProfile() *EnrollmentLlcEnrollmentMetadataFinancialProfile {
	if o == nil {
		return nil
	}
	return o.FinancialProfile
}

func (o *EnrollmentEddAccountEnrollmentMetadata) GetPlannedActivity() *EnrollmentLlcEnrollmentMetadataPlannedActivity {
	if o == nil {
		return nil
	}
	return o.PlannedActivity
}

func (o *EnrollmentEddAccountEnrollmentMetadata) GetRelatedPepDetails() *EnrollmentLlcEnrollmentMetadataRelatedPepDetails {
	if o == nil {
		return nil
	}
	return o.RelatedPepDetails
}

func (o *EnrollmentEddAccountEnrollmentMetadata) GetScopeOfBusiness() *string {
	if o == nil {
		return nil
	}
	return o.ScopeOfBusiness
}

// EnrollmentLlcEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentLlcEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentLlcEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentLlcEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentLlcEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentLlcEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentLlcEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentLlcEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentLlcEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentLlcEnrollmentMetadataFdicCashSweep {
	return &e
}

// LlcEnrollmentMetadata - Metadata for the REGISTRATION_LLC type
type LlcEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentLlcEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Enrollment metadata for entity accounts
	EddAccountEnrollmentMetadata *EnrollmentEddAccountEnrollmentMetadata `json:"edd_account_enrollment_metadata,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentLlcEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
}

func (o *LlcEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentLlcEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *LlcEnrollmentMetadata) GetEddAccountEnrollmentMetadata() *EnrollmentEddAccountEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.EddAccountEnrollmentMetadata
}

func (o *LlcEnrollmentMetadata) GetFdicCashSweep() *EnrollmentLlcEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

// EnrollmentOperatingPurpose - The purpose of the operating account.
type EnrollmentOperatingPurpose string

const (
	EnrollmentOperatingPurposeOperatingPurposeUnspecified EnrollmentOperatingPurpose = "OPERATING_PURPOSE_UNSPECIFIED"
	EnrollmentOperatingPurposeCustody                     EnrollmentOperatingPurpose = "CUSTODY"
	EnrollmentOperatingPurposeSecFee                      EnrollmentOperatingPurpose = "SEC_FEE"
	EnrollmentOperatingPurposeTafFee                      EnrollmentOperatingPurpose = "TAF_FEE"
	EnrollmentOperatingPurposeTefraWithholding            EnrollmentOperatingPurpose = "TEFRA_WITHHOLDING"
	EnrollmentOperatingPurposeSuspense                    EnrollmentOperatingPurpose = "SUSPENSE"
	EnrollmentOperatingPurposeAllocation                  EnrollmentOperatingPurpose = "ALLOCATION"
	EnrollmentOperatingPurposeError                       EnrollmentOperatingPurpose = "ERROR"
	EnrollmentOperatingPurposeDeposit                     EnrollmentOperatingPurpose = "DEPOSIT"
	EnrollmentOperatingPurposeWriteOff                    EnrollmentOperatingPurpose = "WRITE_OFF"
	EnrollmentOperatingPurposeUnsecuredReserve            EnrollmentOperatingPurpose = "UNSECURED_RESERVE"
	EnrollmentOperatingPurposePayable                     EnrollmentOperatingPurpose = "PAYABLE"
	EnrollmentOperatingPurposeCommission                  EnrollmentOperatingPurpose = "COMMISSION"
	EnrollmentOperatingPurposeEscheatment                 EnrollmentOperatingPurpose = "ESCHEATMENT"
	EnrollmentOperatingPurposeInterestRevenue             EnrollmentOperatingPurpose = "INTEREST_REVENUE"
	EnrollmentOperatingPurposeStreetDepository            EnrollmentOperatingPurpose = "STREET_DEPOSITORY"
	EnrollmentOperatingPurposeInventory                   EnrollmentOperatingPurpose = "INVENTORY"
	EnrollmentOperatingPurposeTaxWithholding              EnrollmentOperatingPurpose = "TAX_WITHHOLDING"
	EnrollmentOperatingPurposeFee                         EnrollmentOperatingPurpose = "FEE"
	EnrollmentOperatingPurposePrincipalTrading            EnrollmentOperatingPurpose = "PRINCIPAL_TRADING"
)

func (e EnrollmentOperatingPurpose) ToPointer() *EnrollmentOperatingPurpose {
	return &e
}

// EnrollmentTaxAuthority - Tax Authority for Enrollment
type EnrollmentTaxAuthority string

const (
	EnrollmentTaxAuthorityTaxAuthorityUnspecified EnrollmentTaxAuthority = "TAX_AUTHORITY_UNSPECIFIED"
	EnrollmentTaxAuthorityAl                      EnrollmentTaxAuthority = "AL"
	EnrollmentTaxAuthorityAk                      EnrollmentTaxAuthority = "AK"
	EnrollmentTaxAuthorityAz                      EnrollmentTaxAuthority = "AZ"
	EnrollmentTaxAuthorityAr                      EnrollmentTaxAuthority = "AR"
	EnrollmentTaxAuthorityCa                      EnrollmentTaxAuthority = "CA"
	EnrollmentTaxAuthorityCo                      EnrollmentTaxAuthority = "CO"
	EnrollmentTaxAuthorityCt                      EnrollmentTaxAuthority = "CT"
	EnrollmentTaxAuthorityDe                      EnrollmentTaxAuthority = "DE"
	EnrollmentTaxAuthorityFl                      EnrollmentTaxAuthority = "FL"
	EnrollmentTaxAuthorityGa                      EnrollmentTaxAuthority = "GA"
	EnrollmentTaxAuthorityHi                      EnrollmentTaxAuthority = "HI"
	EnrollmentTaxAuthorityID                      EnrollmentTaxAuthority = "ID"
	EnrollmentTaxAuthorityIl                      EnrollmentTaxAuthority = "IL"
	EnrollmentTaxAuthorityIn                      EnrollmentTaxAuthority = "IN"
	EnrollmentTaxAuthorityIa                      EnrollmentTaxAuthority = "IA"
	EnrollmentTaxAuthorityKs                      EnrollmentTaxAuthority = "KS"
	EnrollmentTaxAuthorityKy                      EnrollmentTaxAuthority = "KY"
	EnrollmentTaxAuthorityLa                      EnrollmentTaxAuthority = "LA"
	EnrollmentTaxAuthorityMe                      EnrollmentTaxAuthority = "ME"
	EnrollmentTaxAuthorityMd                      EnrollmentTaxAuthority = "MD"
	EnrollmentTaxAuthorityMa                      EnrollmentTaxAuthority = "MA"
	EnrollmentTaxAuthorityMi                      EnrollmentTaxAuthority = "MI"
	EnrollmentTaxAuthorityMn                      EnrollmentTaxAuthority = "MN"
	EnrollmentTaxAuthorityMs                      EnrollmentTaxAuthority = "MS"
	EnrollmentTaxAuthorityMo                      EnrollmentTaxAuthority = "MO"
	EnrollmentTaxAuthorityMt                      EnrollmentTaxAuthority = "MT"
	EnrollmentTaxAuthorityNe                      EnrollmentTaxAuthority = "NE"
	EnrollmentTaxAuthorityNv                      EnrollmentTaxAuthority = "NV"
	EnrollmentTaxAuthorityNh                      EnrollmentTaxAuthority = "NH"
	EnrollmentTaxAuthorityNj                      EnrollmentTaxAuthority = "NJ"
	EnrollmentTaxAuthorityNm                      EnrollmentTaxAuthority = "NM"
	EnrollmentTaxAuthorityNy                      EnrollmentTaxAuthority = "NY"
	EnrollmentTaxAuthorityNc                      EnrollmentTaxAuthority = "NC"
	EnrollmentTaxAuthorityNd                      EnrollmentTaxAuthority = "ND"
	EnrollmentTaxAuthorityOh                      EnrollmentTaxAuthority = "OH"
	EnrollmentTaxAuthorityOk                      EnrollmentTaxAuthority = "OK"
	EnrollmentTaxAuthorityOr                      EnrollmentTaxAuthority = "OR"
	EnrollmentTaxAuthorityPa                      EnrollmentTaxAuthority = "PA"
	EnrollmentTaxAuthorityRi                      EnrollmentTaxAuthority = "RI"
	EnrollmentTaxAuthoritySc                      EnrollmentTaxAuthority = "SC"
	EnrollmentTaxAuthoritySd                      EnrollmentTaxAuthority = "SD"
	EnrollmentTaxAuthorityTn                      EnrollmentTaxAuthority = "TN"
	EnrollmentTaxAuthorityTx                      EnrollmentTaxAuthority = "TX"
	EnrollmentTaxAuthorityUt                      EnrollmentTaxAuthority = "UT"
	EnrollmentTaxAuthorityVt                      EnrollmentTaxAuthority = "VT"
	EnrollmentTaxAuthorityVa                      EnrollmentTaxAuthority = "VA"
	EnrollmentTaxAuthorityWa                      EnrollmentTaxAuthority = "WA"
	EnrollmentTaxAuthorityWv                      EnrollmentTaxAuthority = "WV"
	EnrollmentTaxAuthorityWi                      EnrollmentTaxAuthority = "WI"
	EnrollmentTaxAuthorityWy                      EnrollmentTaxAuthority = "WY"
	EnrollmentTaxAuthorityIrs                     EnrollmentTaxAuthority = "IRS"
)

func (e EnrollmentTaxAuthority) ToPointer() *EnrollmentTaxAuthority {
	return &e
}

// EnrollmentWithholdingType - A designation used by the custodian to determine how much federal income tax should be withheld from the proceeds of a sale
type EnrollmentWithholdingType string

const (
	EnrollmentWithholdingTypeWithholdingTypeUnspecified EnrollmentWithholdingType = "WITHHOLDING_TYPE_UNSPECIFIED"
	EnrollmentWithholdingTypeBackup                     EnrollmentWithholdingType = "BACKUP"
	EnrollmentWithholdingTypeBackupProceeds             EnrollmentWithholdingType = "BACKUP_PROCEEDS"
	EnrollmentWithholdingTypeBackupDividendsAndInterest EnrollmentWithholdingType = "BACKUP_DIVIDENDS_AND_INTEREST"
	EnrollmentWithholdingTypeIra                        EnrollmentWithholdingType = "IRA"
)

func (e EnrollmentWithholdingType) ToPointer() *EnrollmentWithholdingType {
	return &e
}

// TaxWithholdingMetadata - Optional tax withholding metadata for TAX_WITHHOLDING operating purpose
type TaxWithholdingMetadata struct {
	// Tax Authority for Enrollment
	TaxAuthority *EnrollmentTaxAuthority `json:"tax_authority,omitempty"`
	// A designation used by the custodian to determine how much federal income tax should be withheld from the proceeds of a sale
	WithholdingType *EnrollmentWithholdingType `json:"withholding_type,omitempty"`
}

func (o *TaxWithholdingMetadata) GetTaxAuthority() *EnrollmentTaxAuthority {
	if o == nil {
		return nil
	}
	return o.TaxAuthority
}

func (o *TaxWithholdingMetadata) GetWithholdingType() *EnrollmentWithholdingType {
	if o == nil {
		return nil
	}
	return o.WithholdingType
}

// OperatingEnrollmentMetadata - Metadata for the REGISTRATION_OPERATING enrollment type.
type OperatingEnrollmentMetadata struct {
	// The purpose of the operating account.
	OperatingPurpose *EnrollmentOperatingPurpose `json:"operating_purpose,omitempty"`
	// Optional subtitle for the operating purpose
	Subtitle *string `json:"subtitle,omitempty"`
	// Optional tax withholding metadata for TAX_WITHHOLDING operating purpose
	TaxWithholdingMetadata *TaxWithholdingMetadata `json:"tax_withholding_metadata,omitempty"`
}

func (o *OperatingEnrollmentMetadata) GetOperatingPurpose() *EnrollmentOperatingPurpose {
	if o == nil {
		return nil
	}
	return o.OperatingPurpose
}

func (o *OperatingEnrollmentMetadata) GetSubtitle() *string {
	if o == nil {
		return nil
	}
	return o.Subtitle
}

func (o *OperatingEnrollmentMetadata) GetTaxWithholdingMetadata() *TaxWithholdingMetadata {
	if o == nil {
		return nil
	}
	return o.TaxWithholdingMetadata
}

// InvestmentVehicleExperience - This captures a user's experience with investment vehicles. It includes details such as the user's average annual trade count for various investment vehicles
type InvestmentVehicleExperience struct {
	// The number of average annual trades of commodities
	CommoditiesAverageAnnualTradeCount *int `json:"commodities_average_annual_trade_count,omitempty"`
	// The number of average annual trades of corporate bonds
	CorporateBondsAverageAnnualTradeCount *int `json:"corporate_bonds_average_annual_trade_count,omitempty"`
	// The number of average annual trades of funds
	FundsAverageAnnualTradeCount *int `json:"funds_average_annual_trade_count,omitempty"`
	// The number of average annual trades of government bonds
	GovernmentBondsAverageAnnualTradeCount *int `json:"government_bonds_average_annual_trade_count,omitempty"`
	// The number of average annual trades in margin accounts
	MarginAverageAnnualTradeCount *int `json:"margin_average_annual_trade_count,omitempty"`
	// The number of average annual trades of municipal bonds
	MunicipalBondsAverageAnnualTradeCount *int `json:"municipal_bonds_average_annual_trade_count,omitempty"`
	// The number of average annual trades of options
	OptionsAverageAnnualTradeCount *int `json:"options_average_annual_trade_count,omitempty"`
	// The number of average annual trades of stocks
	StocksAverageAnnualTradeCount *int `json:"stocks_average_annual_trade_count,omitempty"`
	// The number of average annual trades in tax sheltered accounts
	TaxSheltersAverageAnnualTradeCount *int `json:"tax_shelters_average_annual_trade_count,omitempty"`
}

func (o *InvestmentVehicleExperience) GetCommoditiesAverageAnnualTradeCount() *int {
	if o == nil {
		return nil
	}
	return o.CommoditiesAverageAnnualTradeCount
}

func (o *InvestmentVehicleExperience) GetCorporateBondsAverageAnnualTradeCount() *int {
	if o == nil {
		return nil
	}
	return o.CorporateBondsAverageAnnualTradeCount
}

func (o *InvestmentVehicleExperience) GetFundsAverageAnnualTradeCount() *int {
	if o == nil {
		return nil
	}
	return o.FundsAverageAnnualTradeCount
}

func (o *InvestmentVehicleExperience) GetGovernmentBondsAverageAnnualTradeCount() *int {
	if o == nil {
		return nil
	}
	return o.GovernmentBondsAverageAnnualTradeCount
}

func (o *InvestmentVehicleExperience) GetMarginAverageAnnualTradeCount() *int {
	if o == nil {
		return nil
	}
	return o.MarginAverageAnnualTradeCount
}

func (o *InvestmentVehicleExperience) GetMunicipalBondsAverageAnnualTradeCount() *int {
	if o == nil {
		return nil
	}
	return o.MunicipalBondsAverageAnnualTradeCount
}

func (o *InvestmentVehicleExperience) GetOptionsAverageAnnualTradeCount() *int {
	if o == nil {
		return nil
	}
	return o.OptionsAverageAnnualTradeCount
}

func (o *InvestmentVehicleExperience) GetStocksAverageAnnualTradeCount() *int {
	if o == nil {
		return nil
	}
	return o.StocksAverageAnnualTradeCount
}

func (o *InvestmentVehicleExperience) GetTaxSheltersAverageAnnualTradeCount() *int {
	if o == nil {
		return nil
	}
	return o.TaxSheltersAverageAnnualTradeCount
}

// EnrollmentOptionsLevel - Requested options level
type EnrollmentOptionsLevel string

const (
	EnrollmentOptionsLevelOptionsLevelUnspecified      EnrollmentOptionsLevel = "OPTIONS_LEVEL_UNSPECIFIED"
	EnrollmentOptionsLevelLevel1BasicDirectionalTrades EnrollmentOptionsLevel = "LEVEL_1_BASIC_DIRECTIONAL_TRADES"
)

func (e EnrollmentOptionsLevel) ToPointer() *EnrollmentOptionsLevel {
	return &e
}

// OrdersOptionsTradingEnrollmentMetadata - Metadata for the ORDERS_OPTIONS_TRADING enrollment type
type OrdersOptionsTradingEnrollmentMetadata struct {
	// This captures a user's experience with investment vehicles. It includes details such as the user's average annual trade count for various investment vehicles
	InvestmentVehicleExperience *InvestmentVehicleExperience `json:"investment_vehicle_experience,omitempty"`
	// Requested options level
	OptionsLevel *EnrollmentOptionsLevel `json:"options_level,omitempty"`
	// Total years of options trading experience
	TotalYearsOptionsTradingExperience *int `json:"total_years_options_trading_experience,omitempty"`
}

func (o *OrdersOptionsTradingEnrollmentMetadata) GetInvestmentVehicleExperience() *InvestmentVehicleExperience {
	if o == nil {
		return nil
	}
	return o.InvestmentVehicleExperience
}

func (o *OrdersOptionsTradingEnrollmentMetadata) GetOptionsLevel() *EnrollmentOptionsLevel {
	if o == nil {
		return nil
	}
	return o.OptionsLevel
}

func (o *OrdersOptionsTradingEnrollmentMetadata) GetTotalYearsOptionsTradingExperience() *int {
	if o == nil {
		return nil
	}
	return o.TotalYearsOptionsTradingExperience
}

// EnrollmentState - Indicates where in the enrollment is in the process; May be `PENDING_AGREEMENT`, `ACTIVE`, `INACTIVE`, `PROCESSING`, or `EXPIRED`
type EnrollmentState string

const (
	EnrollmentStateEnrollmentStateUnspecified EnrollmentState = "ENROLLMENT_STATE_UNSPECIFIED"
	EnrollmentStateActive                     EnrollmentState = "ACTIVE"
	EnrollmentStateInactive                   EnrollmentState = "INACTIVE"
	EnrollmentStatePendingAgreement           EnrollmentState = "PENDING_AGREEMENT"
	EnrollmentStateProcessing                 EnrollmentState = "PROCESSING"
	EnrollmentStateExpired                    EnrollmentState = "EXPIRED"
)

func (e EnrollmentState) ToPointer() *EnrollmentState {
	return &e
}

// EnrollmentTrustEnrollmentMetadataDividendReinvestmentPlan - Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
type EnrollmentTrustEnrollmentMetadataDividendReinvestmentPlan string

const (
	EnrollmentTrustEnrollmentMetadataDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified EnrollmentTrustEnrollmentMetadataDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	EnrollmentTrustEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentEnroll                EnrollmentTrustEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	EnrollmentTrustEnrollmentMetadataDividendReinvestmentPlanDividendReinvestmentDecline               EnrollmentTrustEnrollmentMetadataDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e EnrollmentTrustEnrollmentMetadataDividendReinvestmentPlan) ToPointer() *EnrollmentTrustEnrollmentMetadataDividendReinvestmentPlan {
	return &e
}

// EnrollmentTrustEnrollmentMetadataFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
type EnrollmentTrustEnrollmentMetadataFdicCashSweep string

const (
	EnrollmentTrustEnrollmentMetadataFdicCashSweepAutoEnrollFdicCashSweepUnspecified EnrollmentTrustEnrollmentMetadataFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	EnrollmentTrustEnrollmentMetadataFdicCashSweepFdicCashSweepEnroll                EnrollmentTrustEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	EnrollmentTrustEnrollmentMetadataFdicCashSweepFdicCashSweepDecline               EnrollmentTrustEnrollmentMetadataFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e EnrollmentTrustEnrollmentMetadataFdicCashSweep) ToPointer() *EnrollmentTrustEnrollmentMetadataFdicCashSweep {
	return &e
}

// EnrollmentOpenedOnBehalfOf - Trust account is opened on behalf of
type EnrollmentOpenedOnBehalfOf string

const (
	EnrollmentOpenedOnBehalfOfOpenedOnBehalfOfUnspecified EnrollmentOpenedOnBehalfOf = "OPENED_ON_BEHALF_OF_UNSPECIFIED"
	EnrollmentOpenedOnBehalfOfPersonalTrust               EnrollmentOpenedOnBehalfOf = "PERSONAL_TRUST"
	EnrollmentOpenedOnBehalfOfBusinessTrust               EnrollmentOpenedOnBehalfOf = "BUSINESS_TRUST"
	EnrollmentOpenedOnBehalfOfThirdPartyAdministrator     EnrollmentOpenedOnBehalfOf = "THIRD_PARTY_ADMINISTRATOR"
)

func (e EnrollmentOpenedOnBehalfOf) ToPointer() *EnrollmentOpenedOnBehalfOf {
	return &e
}

// TrustEnrollmentMetadata - Metadata for the REGISTRATION_TRUST type
type TrustEnrollmentMetadata struct {
	// Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
	DividendReinvestmentPlan *EnrollmentTrustEnrollmentMetadataDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to FDIC_CASH_SWEEP_ENROLL
	FdicCashSweep *EnrollmentTrustEnrollmentMetadataFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
	// Trust account is opened on behalf of
	OpenedOnBehalfOf *EnrollmentOpenedOnBehalfOf `json:"opened_on_behalf_of,omitempty"`
}

func (o *TrustEnrollmentMetadata) GetDividendReinvestmentPlan() *EnrollmentTrustEnrollmentMetadataDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *TrustEnrollmentMetadata) GetFdicCashSweep() *EnrollmentTrustEnrollmentMetadataFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

func (o *TrustEnrollmentMetadata) GetOpenedOnBehalfOf() *EnrollmentOpenedOnBehalfOf {
	if o == nil {
		return nil
	}
	return o.OpenedOnBehalfOf
}

// EnrollmentType1 - Describes the name of the enrollment; Expressed as an enum
type EnrollmentType1 string

const (
	EnrollmentType1EnrollmentTypeUnspecified             EnrollmentType1 = "ENROLLMENT_TYPE_UNSPECIFIED"
	EnrollmentType1RegistrationIndividual                EnrollmentType1 = "REGISTRATION_INDIVIDUAL"
	EnrollmentType1LendingFullyPaidStockLoan             EnrollmentType1 = "LENDING_FULLY_PAID_STOCK_LOAN"
	EnrollmentType1BeneficiaryDesignation                EnrollmentType1 = "BENEFICIARY_DESIGNATION"
	EnrollmentType1RegistrationJointWros                 EnrollmentType1 = "REGISTRATION_JOINT_WROS"
	EnrollmentType1RegistrationJointTic                  EnrollmentType1 = "REGISTRATION_JOINT_TIC"
	EnrollmentType1RegistrationJointTbe                  EnrollmentType1 = "REGISTRATION_JOINT_TBE"
	EnrollmentType1RegistrationJointCp                   EnrollmentType1 = "REGISTRATION_JOINT_CP"
	EnrollmentType1RegistrationEstate                    EnrollmentType1 = "REGISTRATION_ESTATE"
	EnrollmentType1RegistrationIraTraditional            EnrollmentType1 = "REGISTRATION_IRA_TRADITIONAL"
	EnrollmentType1RegistrationIraSimple                 EnrollmentType1 = "REGISTRATION_IRA_SIMPLE"
	EnrollmentType1RegistrationIraSep                    EnrollmentType1 = "REGISTRATION_IRA_SEP"
	EnrollmentType1RegistrationIraRoth                   EnrollmentType1 = "REGISTRATION_IRA_ROTH"
	EnrollmentType1RegistrationIraRollover               EnrollmentType1 = "REGISTRATION_IRA_ROLLOVER"
	EnrollmentType1RegistrationTrust                     EnrollmentType1 = "REGISTRATION_TRUST"
	EnrollmentType1RegistrationCorporation               EnrollmentType1 = "REGISTRATION_CORPORATION"
	EnrollmentType1RegistrationLlc                       EnrollmentType1 = "REGISTRATION_LLC"
	EnrollmentType1CashFdicCashSweep                     EnrollmentType1 = "CASH_FDIC_CASH_SWEEP"
	EnrollmentType1RetirementBeneficiaryDesignation      EnrollmentType1 = "RETIREMENT_BENEFICIARY_DESIGNATION"
	EnrollmentType1DividendReinvestmentPlan              EnrollmentType1 = "DIVIDEND_REINVESTMENT_PLAN"
	EnrollmentType1RegistrationIraBeneficiaryTraditional EnrollmentType1 = "REGISTRATION_IRA_BENEFICIARY_TRADITIONAL"
	EnrollmentType1RegistrationIraBeneficiaryRoth        EnrollmentType1 = "REGISTRATION_IRA_BENEFICIARY_ROTH"
	EnrollmentType1RegistrationIndividualForeign         EnrollmentType1 = "REGISTRATION_INDIVIDUAL_FOREIGN"
	EnrollmentType1RegistrationCustodial                 EnrollmentType1 = "REGISTRATION_CUSTODIAL"
	EnrollmentType1VirtualAccountNumber                  EnrollmentType1 = "VIRTUAL_ACCOUNT_NUMBER"
)

func (e EnrollmentType1) ToPointer() *EnrollmentType1 {
	return &e
}

// VirtualAccountNumberEnrollmentMetadata - Metadata for the VIRTUAL_ACCOUNT_NUMBER type
type VirtualAccountNumberEnrollmentMetadata struct {
	// The routing number for the account. This value is system-generated
	RoutingNumber *string `json:"routing_number,omitempty"`
	// The virtual account number for the account. This value is system-generated
	VirtualAccountNumber *string `json:"virtual_account_number,omitempty"`
}

func (o *VirtualAccountNumberEnrollmentMetadata) GetRoutingNumber() *string {
	if o == nil {
		return nil
	}
	return o.RoutingNumber
}

func (o *VirtualAccountNumberEnrollmentMetadata) GetVirtualAccountNumber() *string {
	if o == nil {
		return nil
	}
	return o.VirtualAccountNumber
}

// An Enrollment represents programs the account may enroll in.
type Enrollment struct {
	// Metadata for the BENEFICIARY_DESIGNATION enrollment type.
	BeneficiaryEnrollmentMetadata *BeneficiaryEnrollmentMetadata `json:"beneficiary_enrollment_metadata,omitempty"`
	// The consent method for the enrollment. Defaults to ESIGNATURE.
	ConsentMethod *ConsentMethod `json:"consent_method,omitempty"`
	// Metadata for the REGISTRATION_CORPORATION type
	CorporationEnrollmentMetadata *CorporationEnrollmentMetadata `json:"corporation_enrollment_metadata,omitempty"`
	// Metadata for the REGISTRATION_CUSTODIAL type
	CustodialEnrollmentMetadata *CustodialEnrollmentMetadata `json:"custodial_enrollment_metadata,omitempty"`
	// A system-generated unique identifier referencing a single instance of an enrollment; Used to access the record after creation
	EnrollmentID *string `json:"enrollment_id,omitempty"`
	// The time all enrollment requirements were satisfied and the enrollment transitioned to `ACTIVE`
	EnrollmentTime *time.Time `json:"enrollment_time,omitempty"`
	// Metadata for the REGISTRATION_ESTATE enrollment type
	EstateEnrollmentMetadata *EstateEnrollmentMetadata `json:"estate_enrollment_metadata,omitempty"`
	// Metadata for the REGISTRATION_INDIVIDUAL_FOREIGN type
	ForeignIndividualAccountEnrollmentMetadata *ForeignIndividualAccountEnrollmentMetadata `json:"foreign_individual_account_enrollment_metadata,omitempty"`
	// Metadata for the REGISTRATION_JOINT_FOREIGN_WROS type
	ForeignJointAccountEnrollmentMetadata *ForeignJointAccountEnrollmentMetadata `json:"foreign_joint_account_enrollment_metadata,omitempty"`
	// Metadata for the FULLY_PAID_STOCK_LENDING enrollment type
	FpslEnrollmentMetadata *FpslEnrollmentMetadata `json:"fpsl_enrollment_metadata,omitempty"`
	// Metadata for the INDIVIDUAL enrollment type
	IndividualEnrollmentMetadata *IndividualEnrollmentMetadata `json:"individual_enrollment_metadata,omitempty"`
	// Metadata for the REGISTRATION_IRA_BENEFICIARY_ROTH and REGISTRATION_IRA_BENEFICIARY_TRADITIONAL enrollment type
	IraBeneficiaryEnrollmentMetadata *IraBeneficiaryEnrollmentMetadata `json:"ira_beneficiary_enrollment_metadata,omitempty"`
	// Metadata for the ROLLOVER_IRA_REGISTRATION enrollment type
	IraRolloverEnrollmentMetadata *IraRolloverEnrollmentMetadata `json:"ira_rollover_enrollment_metadata,omitempty"`
	// Metadata for the ROTH_IRA_REGISTRATION enrollment type
	IraRothEnrollmentMetadata *IraRothEnrollmentMetadata `json:"ira_roth_enrollment_metadata,omitempty"`
	// Metadata for the SEP_IRA_REGISTRATION enrollment type
	IraSepEnrollmentMetadata *IraSepEnrollmentMetadata `json:"ira_sep_enrollment_metadata,omitempty"`
	// Metadata for the SIMPLE_IRA_REGISTRATION enrollment type
	IraSimpleEnrollmentMetadata *IraSimpleEnrollmentMetadata `json:"ira_simple_enrollment_metadata,omitempty"`
	// Metadata for the TRADITIONAL_IRA_REGISTRATION enrollment type
	IraTraditionalEnrollmentMetadata *IraTraditionalEnrollmentMetadata `json:"ira_traditional_enrollment_metadata,omitempty"`
	// Metadata for the JOINT_COMMUNITY_PROPERTY_REGISTRATION enrollment type
	JointCommunityPropertyEnrollmentMetadata *JointCommunityPropertyEnrollmentMetadata `json:"joint_community_property_enrollment_metadata,omitempty"`
	// Metadata for the JOINT_TENANTS_BY_ENTIRETY_REGISTRATION enrollment type
	JointTenantsByEntiretyEnrollmentMetadata *JointTenantsByEntiretyEnrollmentMetadata `json:"joint_tenants_by_entirety_enrollment_metadata,omitempty"`
	// Metadata for the JOINT_TENANTS_IN_COMMON_REGISTRATION enrollment type
	JointTenantsInCommonEnrollmentMetadata *JointTenantsInCommonEnrollmentMetadata `json:"joint_tenants_in_common_enrollment_metadata,omitempty"`
	// Metadata for the JOINT_WITH_RIGHTS_OF_SURVIVORSHIP_REGISTRATION enrollment type
	JointWithRightsOfSurvivorshipEnrollmentMetadata *JointWithRightsOfSurvivorshipEnrollmentMetadata `json:"joint_with_rights_of_survivorship_enrollment_metadata,omitempty"`
	// Metadata for the REGISTRATION_LLC type
	LlcEnrollmentMetadata *LlcEnrollmentMetadata `json:"llc_enrollment_metadata,omitempty"`
	// The name field Format: accounts/{account}/enrollments/{enrollment}
	Name *string `json:"name,omitempty"`
	// Metadata for the REGISTRATION_OPERATING enrollment type.
	OperatingEnrollmentMetadata *OperatingEnrollmentMetadata `json:"operating_enrollment_metadata,omitempty"`
	// Metadata for the ORDERS_OPTIONS_TRADING enrollment type
	OrdersOptionsTradingEnrollmentMetadata *OrdersOptionsTradingEnrollmentMetadata `json:"orders_options_trading_enrollment_metadata,omitempty"`
	// The ULID is associated with the approver of a given enrollment. The approver you create will contain the CRD Number issued to the person by FINRA. As an RIA, you should use the ULID associated with Apex's approver.
	PrincipalApproverID *string `json:"principal_approver_id,omitempty"`
	// Indicates where in the enrollment is in the process; May be `PENDING_AGREEMENT`, `ACTIVE`, `INACTIVE`, `PROCESSING`, or `EXPIRED`
	State *EnrollmentState `json:"state,omitempty"`
	// Metadata for the REGISTRATION_TRUST type
	TrustEnrollmentMetadata *TrustEnrollmentMetadata `json:"trust_enrollment_metadata,omitempty"`
	// Describes the name of the enrollment; Expressed as an enum
	Type *EnrollmentType1 `json:"type,omitempty"`
	// The time an unenrollment request was processed and the enrollment transitioned to `INACTIVE`
	UnenrollmentTime *time.Time `json:"unenrollment_time,omitempty"`
	// Metadata for the VIRTUAL_ACCOUNT_NUMBER type
	VirtualAccountNumberEnrollmentMetadata *VirtualAccountNumberEnrollmentMetadata `json:"virtual_account_number_enrollment_metadata,omitempty"`
}

func (e Enrollment) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *Enrollment) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Enrollment) GetBeneficiaryEnrollmentMetadata() *BeneficiaryEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.BeneficiaryEnrollmentMetadata
}

func (o *Enrollment) GetConsentMethod() *ConsentMethod {
	if o == nil {
		return nil
	}
	return o.ConsentMethod
}

func (o *Enrollment) GetCorporationEnrollmentMetadata() *CorporationEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.CorporationEnrollmentMetadata
}

func (o *Enrollment) GetCustodialEnrollmentMetadata() *CustodialEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.CustodialEnrollmentMetadata
}

func (o *Enrollment) GetEnrollmentID() *string {
	if o == nil {
		return nil
	}
	return o.EnrollmentID
}

func (o *Enrollment) GetEnrollmentTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.EnrollmentTime
}

func (o *Enrollment) GetEstateEnrollmentMetadata() *EstateEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.EstateEnrollmentMetadata
}

func (o *Enrollment) GetForeignIndividualAccountEnrollmentMetadata() *ForeignIndividualAccountEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.ForeignIndividualAccountEnrollmentMetadata
}

func (o *Enrollment) GetForeignJointAccountEnrollmentMetadata() *ForeignJointAccountEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.ForeignJointAccountEnrollmentMetadata
}

func (o *Enrollment) GetFpslEnrollmentMetadata() *FpslEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.FpslEnrollmentMetadata
}

func (o *Enrollment) GetIndividualEnrollmentMetadata() *IndividualEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.IndividualEnrollmentMetadata
}

func (o *Enrollment) GetIraBeneficiaryEnrollmentMetadata() *IraBeneficiaryEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.IraBeneficiaryEnrollmentMetadata
}

func (o *Enrollment) GetIraRolloverEnrollmentMetadata() *IraRolloverEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.IraRolloverEnrollmentMetadata
}

func (o *Enrollment) GetIraRothEnrollmentMetadata() *IraRothEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.IraRothEnrollmentMetadata
}

func (o *Enrollment) GetIraSepEnrollmentMetadata() *IraSepEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.IraSepEnrollmentMetadata
}

func (o *Enrollment) GetIraSimpleEnrollmentMetadata() *IraSimpleEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.IraSimpleEnrollmentMetadata
}

func (o *Enrollment) GetIraTraditionalEnrollmentMetadata() *IraTraditionalEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.IraTraditionalEnrollmentMetadata
}

func (o *Enrollment) GetJointCommunityPropertyEnrollmentMetadata() *JointCommunityPropertyEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.JointCommunityPropertyEnrollmentMetadata
}

func (o *Enrollment) GetJointTenantsByEntiretyEnrollmentMetadata() *JointTenantsByEntiretyEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.JointTenantsByEntiretyEnrollmentMetadata
}

func (o *Enrollment) GetJointTenantsInCommonEnrollmentMetadata() *JointTenantsInCommonEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.JointTenantsInCommonEnrollmentMetadata
}

func (o *Enrollment) GetJointWithRightsOfSurvivorshipEnrollmentMetadata() *JointWithRightsOfSurvivorshipEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.JointWithRightsOfSurvivorshipEnrollmentMetadata
}

func (o *Enrollment) GetLlcEnrollmentMetadata() *LlcEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.LlcEnrollmentMetadata
}

func (o *Enrollment) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Enrollment) GetOperatingEnrollmentMetadata() *OperatingEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.OperatingEnrollmentMetadata
}

func (o *Enrollment) GetOrdersOptionsTradingEnrollmentMetadata() *OrdersOptionsTradingEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.OrdersOptionsTradingEnrollmentMetadata
}

func (o *Enrollment) GetPrincipalApproverID() *string {
	if o == nil {
		return nil
	}
	return o.PrincipalApproverID
}

func (o *Enrollment) GetState() *EnrollmentState {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *Enrollment) GetTrustEnrollmentMetadata() *TrustEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.TrustEnrollmentMetadata
}

func (o *Enrollment) GetType() *EnrollmentType1 {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *Enrollment) GetUnenrollmentTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.UnenrollmentTime
}

func (o *Enrollment) GetVirtualAccountNumberEnrollmentMetadata() *VirtualAccountNumberEnrollmentMetadata {
	if o == nil {
		return nil
	}
	return o.VirtualAccountNumberEnrollmentMetadata
}
