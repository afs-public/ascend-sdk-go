// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// CostBasisLotDisposalMethod - A method of determining the cost basis of an asset that has been sold or disposed of, by identifying which specific lot of the asset was sold and using the cost of that lot to calculate the cost basis; this method is commonly used for tax purposes to determine the amount of reportable capital gains or losses By default, this is set to `COST_BASIS_LOT_DISPOSAL_MIN_TAX_TERM`
type CostBasisLotDisposalMethod string

const (
	CostBasisLotDisposalMethodCostBasisLotDisposalMethodUnspecified CostBasisLotDisposalMethod = "COST_BASIS_LOT_DISPOSAL_METHOD_UNSPECIFIED"
	CostBasisLotDisposalMethodCostBasisLotDisposalFifo              CostBasisLotDisposalMethod = "COST_BASIS_LOT_DISPOSAL_FIFO"
	CostBasisLotDisposalMethodCostBasisLotDisposalLifo              CostBasisLotDisposalMethod = "COST_BASIS_LOT_DISPOSAL_LIFO"
	CostBasisLotDisposalMethodCostBasisLotDisposalHighCost          CostBasisLotDisposalMethod = "COST_BASIS_LOT_DISPOSAL_HIGH_COST"
	CostBasisLotDisposalMethodCostBasisLotDisposalHighCostLongTerm  CostBasisLotDisposalMethod = "COST_BASIS_LOT_DISPOSAL_HIGH_COST_LONG_TERM"
	CostBasisLotDisposalMethodCostBasisLotDisposalHighCostShortTerm CostBasisLotDisposalMethod = "COST_BASIS_LOT_DISPOSAL_HIGH_COST_SHORT_TERM"
	CostBasisLotDisposalMethodCostBasisLotDisposalLowCost           CostBasisLotDisposalMethod = "COST_BASIS_LOT_DISPOSAL_LOW_COST"
	CostBasisLotDisposalMethodCostBasisLotDisposalLowCostLongTerm   CostBasisLotDisposalMethod = "COST_BASIS_LOT_DISPOSAL_LOW_COST_LONG_TERM"
	CostBasisLotDisposalMethodCostBasisLotDisposalLowCostShortTerm  CostBasisLotDisposalMethod = "COST_BASIS_LOT_DISPOSAL_LOW_COST_SHORT_TERM"
	CostBasisLotDisposalMethodCostBasisLotDisposalMinTaxTerm        CostBasisLotDisposalMethod = "COST_BASIS_LOT_DISPOSAL_MIN_TAX_TERM"
)

func (e CostBasisLotDisposalMethod) ToPointer() *CostBasisLotDisposalMethod {
	return &e
}
func (e *CostBasisLotDisposalMethod) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COST_BASIS_LOT_DISPOSAL_METHOD_UNSPECIFIED":
		fallthrough
	case "COST_BASIS_LOT_DISPOSAL_FIFO":
		fallthrough
	case "COST_BASIS_LOT_DISPOSAL_LIFO":
		fallthrough
	case "COST_BASIS_LOT_DISPOSAL_HIGH_COST":
		fallthrough
	case "COST_BASIS_LOT_DISPOSAL_HIGH_COST_LONG_TERM":
		fallthrough
	case "COST_BASIS_LOT_DISPOSAL_HIGH_COST_SHORT_TERM":
		fallthrough
	case "COST_BASIS_LOT_DISPOSAL_LOW_COST":
		fallthrough
	case "COST_BASIS_LOT_DISPOSAL_LOW_COST_LONG_TERM":
		fallthrough
	case "COST_BASIS_LOT_DISPOSAL_LOW_COST_SHORT_TERM":
		fallthrough
	case "COST_BASIS_LOT_DISPOSAL_MIN_TAX_TERM":
		*e = CostBasisLotDisposalMethod(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CostBasisLotDisposalMethod: %v", v)
	}
}

// AccountTaxProfileCreate - The account tax profile.
type AccountTaxProfileCreate struct {
	// A method of determining the cost basis of an asset that has been sold or disposed of, by identifying which specific lot of the asset was sold and using the cost of that lot to calculate the cost basis; this method is commonly used for tax purposes to determine the amount of reportable capital gains or losses By default, this is set to `COST_BASIS_LOT_DISPOSAL_MIN_TAX_TERM`
	CostBasisLotDisposalMethod *CostBasisLotDisposalMethod `json:"cost_basis_lot_disposal_method,omitempty"`
	// Indicates if the account is eligible to mark-to-market their securities and commodities holdings; Named after the related section of the IRS tax code
	Section475Election *bool `json:"section_475_election,omitempty"`
}

func (o *AccountTaxProfileCreate) GetCostBasisLotDisposalMethod() *CostBasisLotDisposalMethod {
	if o == nil {
		return nil
	}
	return o.CostBasisLotDisposalMethod
}

func (o *AccountTaxProfileCreate) GetSection475Election() *bool {
	if o == nil {
		return nil
	}
	return o.Section475Election
}
