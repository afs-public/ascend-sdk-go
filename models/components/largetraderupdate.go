// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// LargeTraderUpdate - A large trader.
type LargeTraderUpdate struct {
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following:
	//
	//  * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date
	//
	//  Related types are [google.type.TimeOfDay][google.type.TimeOfDay] and `google.protobuf.Timestamp`.
	EffectiveDate *DateUpdate `json:"effective_date,omitempty"`
	// SEC-issued ID signifying the person/entity as a large trader; Required for CAIS regulatory reporting.
	LargeTraderID *string `json:"large_trader_id,omitempty"`
}

func (o *LargeTraderUpdate) GetEffectiveDate() *DateUpdate {
	if o == nil {
		return nil
	}
	return o.EffectiveDate
}

func (o *LargeTraderUpdate) GetLargeTraderID() *string {
	if o == nil {
		return nil
	}
	return o.LargeTraderID
}
