// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// TradingFeeAmount - The amount of the fee. This is a monetary value in the same currency as the order.
type TradingFeeAmount struct {
	// The decimal value, as a string; Refer to [Googleâ€™s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *TradingFeeAmount) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// TradingFeeType - The type of fee being specified. Only the type of "BROKER_FEE" is supported.
type TradingFeeType string

const (
	TradingFeeTypeFeeTypeUnspecified TradingFeeType = "FEE_TYPE_UNSPECIFIED"
	TradingFeeTypeBrokerFee          TradingFeeType = "BROKER_FEE"
	TradingFeeTypeContractFee        TradingFeeType = "CONTRACT_FEE"
)

func (e TradingFeeType) ToPointer() *TradingFeeType {
	return &e
}

// TradingFee - A fee that applies to an order
type TradingFee struct {
	// The amount of the fee. This is a monetary value in the same currency as the order.
	Amount *TradingFeeAmount `json:"amount,omitempty"`
	// The type of fee being specified. Only the type of "BROKER_FEE" is supported.
	Type *TradingFeeType `json:"type,omitempty"`
}

func (o *TradingFee) GetAmount() *TradingFeeAmount {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *TradingFee) GetType() *TradingFeeType {
	if o == nil {
		return nil
	}
	return o.Type
}
