// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// FederalTaxClassification - Federal tax classification.
type FederalTaxClassification string

const (
	FederalTaxClassificationFederalTaxClassificationUnspecified FederalTaxClassification = "FEDERAL_TAX_CLASSIFICATION_UNSPECIFIED"
	FederalTaxClassificationIndivSolepropOrSinglememberllc      FederalTaxClassification = "INDIV_SOLEPROP_OR_SINGLEMEMBERLLC"
	FederalTaxClassificationPartnership                         FederalTaxClassification = "PARTNERSHIP"
	FederalTaxClassificationCCorporation                        FederalTaxClassification = "C_CORPORATION"
	FederalTaxClassificationSCorporation                        FederalTaxClassification = "S_CORPORATION"
	FederalTaxClassificationTrustEstate                         FederalTaxClassification = "TRUST_ESTATE"
	FederalTaxClassificationLlcTaxedAsCCorp                     FederalTaxClassification = "LLC_TAXED_AS_C_CORP"
	FederalTaxClassificationLlcTaxedAsSCorp                     FederalTaxClassification = "LLC_TAXED_AS_S_CORP"
	FederalTaxClassificationLlcTaxedAsPartnership               FederalTaxClassification = "LLC_TAXED_AS_PARTNERSHIP"
	FederalTaxClassificationOther                               FederalTaxClassification = "OTHER"
)

func (e FederalTaxClassification) ToPointer() *FederalTaxClassification {
	return &e
}

// IrsFormType - IRS form type.
type IrsFormType string

const (
	IrsFormTypeIrsFormTypeUnspecified IrsFormType = "IRS_FORM_TYPE_UNSPECIFIED"
	IrsFormTypeW9                     IrsFormType = "W_9"
	IrsFormTypeW8Ben                  IrsFormType = "W_8BEN"
)

func (e IrsFormType) ToPointer() *IrsFormType {
	return &e
}

// UsTinStatus - United States Individual Taxpayer Identification Number (ITIN) status.
type UsTinStatus string

const (
	UsTinStatusUsTinStatusUnspecified UsTinStatus = "US_TIN_STATUS_UNSPECIFIED"
	UsTinStatusPassing                UsTinStatus = "PASSING"
	UsTinStatusFailing                UsTinStatus = "FAILING"
)

func (e UsTinStatus) ToPointer() *UsTinStatus {
	return &e
}

// TaxProfileCreate - Tax Profile pertaining to the Legal Entity or Natural Person.
type TaxProfileCreate struct {
	// Federal tax classification.
	FederalTaxClassification FederalTaxClassification `json:"federal_tax_classification"`
	// IRS form type.
	IrsFormType IrsFormType `json:"irs_form_type"`
	// Legal tax region must be "US" if provided W-9, otherwise must be a non-US country.
	LegalTaxRegionCode string `json:"legal_tax_region_code"`
	// United States Individual Taxpayer Identification Number (ITIN) status.
	UsTinStatus UsTinStatus `json:"us_tin_status"`
}

func (o *TaxProfileCreate) GetFederalTaxClassification() FederalTaxClassification {
	if o == nil {
		return FederalTaxClassification("")
	}
	return o.FederalTaxClassification
}

func (o *TaxProfileCreate) GetIrsFormType() IrsFormType {
	if o == nil {
		return IrsFormType("")
	}
	return o.IrsFormType
}

func (o *TaxProfileCreate) GetLegalTaxRegionCode() string {
	if o == nil {
		return ""
	}
	return o.LegalTaxRegionCode
}

func (o *TaxProfileCreate) GetUsTinStatus() UsTinStatus {
	if o == nil {
		return UsTinStatus("")
	}
	return o.UsTinStatus
}
