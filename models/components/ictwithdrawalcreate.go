// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// IctWithdrawalCreateProgram - The name of the program that the ICT withdrawal is associated with.
type IctWithdrawalCreateProgram string

const (
	IctWithdrawalCreateProgramIctProgramUnspecified IctWithdrawalCreateProgram = "ICT_PROGRAM_UNSPECIFIED"
	IctWithdrawalCreateProgramBrokerPartner         IctWithdrawalCreateProgram = "BROKER_PARTNER"
	IctWithdrawalCreateProgramDepositOnly           IctWithdrawalCreateProgram = "DEPOSIT_ONLY"
	IctWithdrawalCreateProgramBankingPartner        IctWithdrawalCreateProgram = "BANKING_PARTNER"
	IctWithdrawalCreateProgramWithdrawalOnly        IctWithdrawalCreateProgram = "WITHDRAWAL_ONLY"
	IctWithdrawalCreateProgramDigitalPartner        IctWithdrawalCreateProgram = "DIGITAL_PARTNER"
)

func (e IctWithdrawalCreateProgram) ToPointer() *IctWithdrawalCreateProgram {
	return &e
}

// IctWithdrawalCreate - An Instant Cash Transfer. Funds are moved from a customer's brokerage account to a configured Firm account.
type IctWithdrawalCreate struct {
	// A representation of a decimal value, such as 2.5. Clients may convert values into language-native decimal formats, such as Java's [BigDecimal][] or Python's [decimal.Decimal][].
	//
	//  [BigDecimal]:
	//  https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html
	//  [decimal.Decimal]: https://docs.python.org/3/library/decimal.html
	Amount *DecimalCreate `json:"amount,omitempty"`
	// External identifier supplied by the API caller. Each request must have a unique pairing of client_transfer_id and account.
	ClientTransferID string `json:"client_transfer_id"`
	// Whether the entire account balance is being withdrawn. This field should either be set to true or left unset if the amount field is provided.
	FullDisbursement *bool `json:"full_disbursement,omitempty"`
	// The name of the program that the ICT withdrawal is associated with.
	Program IctWithdrawalCreateProgram `json:"program"`
	// A distribution from a retirement account.
	RetirementDistribution *RetirementDistributionCreate `json:"retirement_distribution,omitempty"`
	// The travel rules associated with an ICT withdrawal
	TravelRule IctWithdrawalTravelRuleCreate `json:"travel_rule"`
}

func (o *IctWithdrawalCreate) GetAmount() *DecimalCreate {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *IctWithdrawalCreate) GetClientTransferID() string {
	if o == nil {
		return ""
	}
	return o.ClientTransferID
}

func (o *IctWithdrawalCreate) GetFullDisbursement() *bool {
	if o == nil {
		return nil
	}
	return o.FullDisbursement
}

func (o *IctWithdrawalCreate) GetProgram() IctWithdrawalCreateProgram {
	if o == nil {
		return IctWithdrawalCreateProgram("")
	}
	return o.Program
}

func (o *IctWithdrawalCreate) GetRetirementDistribution() *RetirementDistributionCreate {
	if o == nil {
		return nil
	}
	return o.RetirementDistribution
}

func (o *IctWithdrawalCreate) GetTravelRule() IctWithdrawalTravelRuleCreate {
	if o == nil {
		return IctWithdrawalTravelRuleCreate{}
	}
	return o.TravelRule
}
