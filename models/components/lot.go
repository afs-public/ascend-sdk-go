// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// LotPrice - Price of the trade lot
type LotPrice struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *LotPrice) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// LotMoney - Object containing currency/ price information for the trade lot
type LotMoney struct {
	// Currency code of the price
	CurrencyCode *string `json:"currency_code,omitempty"`
	// Price of the trade lot
	Price *LotPrice `json:"price,omitempty"`
}

func (o *LotMoney) GetCurrencyCode() *string {
	if o == nil {
		return nil
	}
	return o.CurrencyCode
}

func (o *LotMoney) GetPrice() *LotPrice {
	if o == nil {
		return nil
	}
	return o.Price
}

// LotQuantity - Quantity of the trade lot
type LotQuantity struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *LotQuantity) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// LotTradeDate - Trade date of the trade lot
type LotTradeDate struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day *int `json:"day,omitempty"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month *int `json:"month,omitempty"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year *int `json:"year,omitempty"`
}

func (o *LotTradeDate) GetDay() *int {
	if o == nil {
		return nil
	}
	return o.Day
}

func (o *LotTradeDate) GetMonth() *int {
	if o == nil {
		return nil
	}
	return o.Month
}

func (o *LotTradeDate) GetYear() *int {
	if o == nil {
		return nil
	}
	return o.Year
}

type Lot struct {
	// Client supplied id
	ID *string `json:"id,omitempty"`
	// Object containing currency/ price information for the trade lot
	Money *LotMoney `json:"money,omitempty"`
	// Quantity of the trade lot
	Quantity *LotQuantity `json:"quantity,omitempty"`
	// Trade date of the trade lot
	TradeDate *LotTradeDate `json:"trade_date,omitempty"`
}

func (o *Lot) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Lot) GetMoney() *LotMoney {
	if o == nil {
		return nil
	}
	return o.Money
}

func (o *Lot) GetQuantity() *LotQuantity {
	if o == nil {
		return nil
	}
	return o.Quantity
}

func (o *Lot) GetTradeDate() *LotTradeDate {
	if o == nil {
		return nil
	}
	return o.TradeDate
}
