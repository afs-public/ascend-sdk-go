// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// CashJournalConstraintsContributionConstraints - Contribution constraints for the destination account
type CashJournalConstraintsContributionConstraints struct {
	// Deprecated! This value is determined based on the current date relative to the tax deadline. It will be inaccurate in cases where the previous year contribution deadline is not the tax deadline (e.g. `RECHARACTERIZATION`). Please refer to the `valid_types.previous_year_deadline` field instead.
	//
	// Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	OnlyAllowCurrentYear *bool `json:"only_allow_current_year,omitempty"`
	// Valid contribution types
	ValidTypes []ContributionConstraintsContributionTypeInfo `json:"valid_types,omitempty"`
}

func (o *CashJournalConstraintsContributionConstraints) GetOnlyAllowCurrentYear() *bool {
	if o == nil {
		return nil
	}
	return o.OnlyAllowCurrentYear
}

func (o *CashJournalConstraintsContributionConstraints) GetValidTypes() []ContributionConstraintsContributionTypeInfo {
	if o == nil {
		return nil
	}
	return o.ValidTypes
}

// CashJournalConstraintsDistributionConstraints - Distribution constraints for the source account
type CashJournalConstraintsDistributionConstraints struct {
	// Whether a full distribution withdrawal is allowed
	FullDistributionAllowed *bool `json:"full_distribution_allowed,omitempty"`
	// Valid distribution types
	ValidTypes []DistributionConstraintsDistributionTypeInfo `json:"valid_types,omitempty"`
}

func (o *CashJournalConstraintsDistributionConstraints) GetFullDistributionAllowed() *bool {
	if o == nil {
		return nil
	}
	return o.FullDistributionAllowed
}

func (o *CashJournalConstraintsDistributionConstraints) GetValidTypes() []DistributionConstraintsDistributionTypeInfo {
	if o == nil {
		return nil
	}
	return o.ValidTypes
}

// CashJournalConstraints - Retirement constraints for cash journal transfers
type CashJournalConstraints struct {
	// Contribution constraints for the destination account
	ContributionConstraints *CashJournalConstraintsContributionConstraints `json:"contribution_constraints,omitempty"`
	// Distribution constraints for the source account
	DistributionConstraints *CashJournalConstraintsDistributionConstraints `json:"distribution_constraints,omitempty"`
}

func (o *CashJournalConstraints) GetContributionConstraints() *CashJournalConstraintsContributionConstraints {
	if o == nil {
		return nil
	}
	return o.ContributionConstraints
}

func (o *CashJournalConstraints) GetDistributionConstraints() *CashJournalConstraintsDistributionConstraints {
	if o == nil {
		return nil
	}
	return o.DistributionConstraints
}
