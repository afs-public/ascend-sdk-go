// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// IdentityIdentificationType - **Field Dependencies:**
//
// An SSN or ITIN is required when `check_types` is `DATABASE`
//
// Required if `check_types` is `DATABASE`.
//
// Otherwise, must be empty.
type IdentityIdentificationType string

const (
	IdentityIdentificationTypeTypeUnspecified IdentityIdentificationType = "TYPE_UNSPECIFIED"
	IdentityIdentificationTypeSsn             IdentityIdentificationType = "SSN"
	IdentityIdentificationTypePassport        IdentityIdentificationType = "PASSPORT"
	IdentityIdentificationTypeDriversLicense  IdentityIdentificationType = "DRIVERS_LICENSE"
	IdentityIdentificationTypeItin            IdentityIdentificationType = "ITIN"
)

func (e IdentityIdentificationType) ToPointer() *IdentityIdentificationType {
	return &e
}

// IdentityIdentification - stores various identification types
type IdentityIdentification struct {
	// Administrative area that issued the identification
	AdministrativeArea *string `json:"administrative_area,omitempty"`
	// **Field Dependencies:**
	//
	// A US identification `region_code` is required when the `check_types` is `DATABASE`
	//
	// Required if `check_types` is `DATABASE`.
	//
	// Otherwise, must be empty.
	RegionCode *string `json:"region_code,omitempty"`
	// **Field Dependencies:**
	//
	// An SSN or ITIN is required when `check_types` is `DATABASE`
	//
	// Required if `check_types` is `DATABASE`.
	//
	// Otherwise, must be empty.
	Type *IdentityIdentificationType `json:"type,omitempty"`
	// **Field Dependencies:**
	//
	// An identification value is required when the `check_types` is `DATABASE`
	//
	// Required if `check_types` is `DATABASE`.
	//
	// Otherwise, must be empty.
	Value *string `json:"value,omitempty"`
}

func (o *IdentityIdentification) GetAdministrativeArea() *string {
	if o == nil {
		return nil
	}
	return o.AdministrativeArea
}

func (o *IdentityIdentification) GetRegionCode() *string {
	if o == nil {
		return nil
	}
	return o.RegionCode
}

func (o *IdentityIdentification) GetType() *IdentityIdentificationType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *IdentityIdentification) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}
