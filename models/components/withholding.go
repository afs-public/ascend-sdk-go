// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// WithholdingAmount - Monetary amount associated with the withholding
type WithholdingAmount struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *WithholdingAmount) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// WithholdingRate - The rate at which monies were withheld
type WithholdingRate struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *WithholdingRate) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

type WithholdingState string

const (
	WithholdingStateWithholdingStateUnspecified WithholdingState = "WITHHOLDING_STATE_UNSPECIFIED"
	WithholdingStateCa                          WithholdingState = "CA"
	WithholdingStateMe                          WithholdingState = "ME"
	WithholdingStateVt                          WithholdingState = "VT"
	WithholdingStateAl                          WithholdingState = "AL"
	WithholdingStateAk                          WithholdingState = "AK"
	WithholdingStateAz                          WithholdingState = "AZ"
	WithholdingStateAr                          WithholdingState = "AR"
	WithholdingStateCo                          WithholdingState = "CO"
	WithholdingStateCt                          WithholdingState = "CT"
	WithholdingStateDe                          WithholdingState = "DE"
	WithholdingStateFl                          WithholdingState = "FL"
	WithholdingStateGa                          WithholdingState = "GA"
	WithholdingStateHi                          WithholdingState = "HI"
	WithholdingStateID                          WithholdingState = "ID"
	WithholdingStateIl                          WithholdingState = "IL"
	WithholdingStateIn                          WithholdingState = "IN"
	WithholdingStateIa                          WithholdingState = "IA"
	WithholdingStateKs                          WithholdingState = "KS"
	WithholdingStateKy                          WithholdingState = "KY"
	WithholdingStateLa                          WithholdingState = "LA"
	WithholdingStateMd                          WithholdingState = "MD"
	WithholdingStateMa                          WithholdingState = "MA"
	WithholdingStateMi                          WithholdingState = "MI"
	WithholdingStateMn                          WithholdingState = "MN"
	WithholdingStateMs                          WithholdingState = "MS"
	WithholdingStateMo                          WithholdingState = "MO"
	WithholdingStateMt                          WithholdingState = "MT"
	WithholdingStateNe                          WithholdingState = "NE"
	WithholdingStateNv                          WithholdingState = "NV"
	WithholdingStateNh                          WithholdingState = "NH"
	WithholdingStateNj                          WithholdingState = "NJ"
	WithholdingStateNm                          WithholdingState = "NM"
	WithholdingStateNy                          WithholdingState = "NY"
	WithholdingStateNc                          WithholdingState = "NC"
	WithholdingStateNd                          WithholdingState = "ND"
	WithholdingStateOh                          WithholdingState = "OH"
	WithholdingStateOk                          WithholdingState = "OK"
	WithholdingStateOr                          WithholdingState = "OR"
	WithholdingStatePa                          WithholdingState = "PA"
	WithholdingStateRi                          WithholdingState = "RI"
	WithholdingStateSc                          WithholdingState = "SC"
	WithholdingStateSd                          WithholdingState = "SD"
	WithholdingStateTn                          WithholdingState = "TN"
	WithholdingStateTx                          WithholdingState = "TX"
	WithholdingStateUt                          WithholdingState = "UT"
	WithholdingStateVa                          WithholdingState = "VA"
	WithholdingStateWa                          WithholdingState = "WA"
	WithholdingStateWv                          WithholdingState = "WV"
	WithholdingStateWi                          WithholdingState = "WI"
	WithholdingStateWy                          WithholdingState = "WY"
)

func (e WithholdingState) ToPointer() *WithholdingState {
	return &e
}
func (e *WithholdingState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WITHHOLDING_STATE_UNSPECIFIED":
		fallthrough
	case "CA":
		fallthrough
	case "ME":
		fallthrough
	case "VT":
		fallthrough
	case "AL":
		fallthrough
	case "AK":
		fallthrough
	case "AZ":
		fallthrough
	case "AR":
		fallthrough
	case "CO":
		fallthrough
	case "CT":
		fallthrough
	case "DE":
		fallthrough
	case "FL":
		fallthrough
	case "GA":
		fallthrough
	case "HI":
		fallthrough
	case "ID":
		fallthrough
	case "IL":
		fallthrough
	case "IN":
		fallthrough
	case "IA":
		fallthrough
	case "KS":
		fallthrough
	case "KY":
		fallthrough
	case "LA":
		fallthrough
	case "MD":
		fallthrough
	case "MA":
		fallthrough
	case "MI":
		fallthrough
	case "MN":
		fallthrough
	case "MS":
		fallthrough
	case "MO":
		fallthrough
	case "MT":
		fallthrough
	case "NE":
		fallthrough
	case "NV":
		fallthrough
	case "NH":
		fallthrough
	case "NJ":
		fallthrough
	case "NM":
		fallthrough
	case "NY":
		fallthrough
	case "NC":
		fallthrough
	case "ND":
		fallthrough
	case "OH":
		fallthrough
	case "OK":
		fallthrough
	case "OR":
		fallthrough
	case "PA":
		fallthrough
	case "RI":
		fallthrough
	case "SC":
		fallthrough
	case "SD":
		fallthrough
	case "TN":
		fallthrough
	case "TX":
		fallthrough
	case "UT":
		fallthrough
	case "VA":
		fallthrough
	case "WA":
		fallthrough
	case "WV":
		fallthrough
	case "WI":
		fallthrough
	case "WY":
		*e = WithholdingState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WithholdingState: %v", v)
	}
}

// WithholdingType1 - Describes the type of the withholding (Federal, State, etc.)
type WithholdingType1 string

const (
	WithholdingType1WithholdingTypeUnspecified WithholdingType1 = "WITHHOLDING_TYPE_UNSPECIFIED"
	WithholdingType1Federal                    WithholdingType1 = "FEDERAL"
	WithholdingType1State                      WithholdingType1 = "STATE"
	WithholdingType1ForeignSecurity            WithholdingType1 = "FOREIGN_SECURITY"
	WithholdingType1FederalIra                 WithholdingType1 = "FEDERAL_IRA"
	WithholdingType1StateIra                   WithholdingType1 = "STATE_IRA"
	WithholdingType1NonResidentAlien           WithholdingType1 = "NON_RESIDENT_ALIEN"
)

func (e WithholdingType1) ToPointer() *WithholdingType1 {
	return &e
}
func (e *WithholdingType1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WITHHOLDING_TYPE_UNSPECIFIED":
		fallthrough
	case "FEDERAL":
		fallthrough
	case "STATE":
		fallthrough
	case "FOREIGN_SECURITY":
		fallthrough
	case "FEDERAL_IRA":
		fallthrough
	case "STATE_IRA":
		fallthrough
	case "NON_RESIDENT_ALIEN":
		*e = WithholdingType1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WithholdingType1: %v", v)
	}
}

type Withholding struct {
	// Monetary amount associated with the withholding
	Amount *WithholdingAmount `json:"amount,omitempty"`
	// The rate at which monies were withheld
	Rate  *WithholdingRate  `json:"rate,omitempty"`
	State *WithholdingState `json:"state,omitempty"`
	// The tax year associated with the withholding
	TaxYear *int `json:"tax_year,omitempty"`
	// Describes the type of the withholding (Federal, State, etc.)
	Type *WithholdingType1 `json:"type,omitempty"`
}

func (o *Withholding) GetAmount() *WithholdingAmount {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *Withholding) GetRate() *WithholdingRate {
	if o == nil {
		return nil
	}
	return o.Rate
}

func (o *Withholding) GetState() *WithholdingState {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *Withholding) GetTaxYear() *int {
	if o == nil {
		return nil
	}
	return o.TaxYear
}

func (o *Withholding) GetType() *WithholdingType1 {
	if o == nil {
		return nil
	}
	return o.Type
}
