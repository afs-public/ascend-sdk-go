// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// AllocationPercentage - The percentage used to determine the proportion of the deliverable asset(s) or cash assigned to each option contract in a settlement or corporate action scenario.
type AllocationPercentage struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *AllocationPercentage) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// CashAmount - The cash amount of the deliverable
type CashAmount struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *CashAmount) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// CashType - The cash type of the deliverable
type CashType string

const (
	CashTypeCashTypeUnspecified CashType = "CASH_TYPE_UNSPECIFIED"
	CashTypeCashDifferential    CashType = "CASH_DIFFERENTIAL"
	CashTypeCashFixed           CashType = "CASH_FIXED"
)

func (e CashType) ToPointer() *CashType {
	return &e
}

// OptionDeliverableQuantity - The quantity of the deliverable
type OptionDeliverableQuantity struct {
	// The decimal value, as a string; Refer to [Google’s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
	Value *string `json:"value,omitempty"`
}

func (o *OptionDeliverableQuantity) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

// SettlementConvention - Specifies the timeline for settling a transaction
type SettlementConvention string

const (
	SettlementConventionSettlementConventionUnspecified SettlementConvention = "SETTLEMENT_CONVENTION_UNSPECIFIED"
	SettlementConventionTPlus0                          SettlementConvention = "T_PLUS_0"
	SettlementConventionTPlus1                          SettlementConvention = "T_PLUS_1"
)

func (e SettlementConvention) ToPointer() *SettlementConvention {
	return &e
}

// SettlementStatus - Indicates the current status of the settlement process for the deliverable asset(s) tied to an option, such as regular settlement or delayed.
type SettlementStatus string

const (
	SettlementStatusSettlementStatusUnspecified SettlementStatus = "SETTLEMENT_STATUS_UNSPECIFIED"
	SettlementStatusRegular                     SettlementStatus = "REGULAR"
	SettlementStatusDelayed                     SettlementStatus = "DELAYED"
)

func (e SettlementStatus) ToPointer() *SettlementStatus {
	return &e
}

// OptionDeliverable
type OptionDeliverable struct {
	// The percentage used to determine the proportion of the deliverable asset(s) or cash assigned to each option contract in a settlement or corporate action scenario.
	AllocationPercentage *AllocationPercentage `json:"allocation_percentage,omitempty"`
	// The Ascend asset id associated with this deliverable, populated when we are able to find an asset with a matching cusip in the US
	AssetID *string `json:"asset_id,omitempty"`
	// The cash amount of the deliverable
	CashAmount *CashAmount `json:"cash_amount,omitempty"`
	// The cash type of the deliverable
	CashType *CashType `json:"cash_type,omitempty"`
	// The cusip of the deliverable, if provided by OCC
	Cusip *string `json:"cusip,omitempty"`
	// When a deliverable is pending a NameChange or SymbolChange, the pending_cusip field may be populated with the new cusip
	PendingCusip *string `json:"pending_cusip,omitempty"`
	// The quantity of the deliverable
	Quantity *OptionDeliverableQuantity `json:"quantity,omitempty"`
	// Specifies the timeline for settling a transaction
	SettlementConvention *SettlementConvention `json:"settlement_convention,omitempty"`
	// Indicates the current status of the settlement process for the deliverable asset(s) tied to an option, such as regular settlement or delayed.
	SettlementStatus *SettlementStatus `json:"settlement_status,omitempty"`
}

func (o *OptionDeliverable) GetAllocationPercentage() *AllocationPercentage {
	if o == nil {
		return nil
	}
	return o.AllocationPercentage
}

func (o *OptionDeliverable) GetAssetID() *string {
	if o == nil {
		return nil
	}
	return o.AssetID
}

func (o *OptionDeliverable) GetCashAmount() *CashAmount {
	if o == nil {
		return nil
	}
	return o.CashAmount
}

func (o *OptionDeliverable) GetCashType() *CashType {
	if o == nil {
		return nil
	}
	return o.CashType
}

func (o *OptionDeliverable) GetCusip() *string {
	if o == nil {
		return nil
	}
	return o.Cusip
}

func (o *OptionDeliverable) GetPendingCusip() *string {
	if o == nil {
		return nil
	}
	return o.PendingCusip
}

func (o *OptionDeliverable) GetQuantity() *OptionDeliverableQuantity {
	if o == nil {
		return nil
	}
	return o.Quantity
}

func (o *OptionDeliverable) GetSettlementConvention() *SettlementConvention {
	if o == nil {
		return nil
	}
	return o.SettlementConvention
}

func (o *OptionDeliverable) GetSettlementStatus() *SettlementStatus {
	if o == nil {
		return nil
	}
	return o.SettlementStatus
}
