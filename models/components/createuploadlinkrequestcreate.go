// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// CreateUploadLinkRequestCreate - Document to be uploaded; These descriptions allow the document to be searched for after it is uploaded.
type CreateUploadLinkRequestCreate struct {
	// Account document to be uploaded;
	AccountDocumentUploadRequest *AccountDocumentUploadRequestCreate `json:"account_document_upload_request,omitempty"`
	// User-provided identifier that relates this document with the signed link that will be generated for it; Required for all documents; Must be unique for each document in the request
	ClientBatchSourceID string `json:"client_batch_source_id"`
	// Identity document to be uploaded;
	IDDocumentUploadRequest *IDDocumentUploadRequestCreate `json:"id_document_upload_request,omitempty"`
	// Media type for the document to be uploaded; Required for all documents; Must be one of: application/json, application/pdf, image/jpeg, image/png, text/csv, or text/plain
	MimeType string `json:"mime_type"`
}

func (o *CreateUploadLinkRequestCreate) GetAccountDocumentUploadRequest() *AccountDocumentUploadRequestCreate {
	if o == nil {
		return nil
	}
	return o.AccountDocumentUploadRequest
}

func (o *CreateUploadLinkRequestCreate) GetClientBatchSourceID() string {
	if o == nil {
		return ""
	}
	return o.ClientBatchSourceID
}

func (o *CreateUploadLinkRequestCreate) GetIDDocumentUploadRequest() *IDDocumentUploadRequestCreate {
	if o == nil {
		return nil
	}
	return o.IDDocumentUploadRequest
}

func (o *CreateUploadLinkRequestCreate) GetMimeType() string {
	if o == nil {
		return ""
	}
	return o.MimeType
}
