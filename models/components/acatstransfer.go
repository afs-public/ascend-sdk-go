// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"time"

	"github.com/afs-public/ascend-sdk-go/internal/utils"
)

// ExternalAccount - The external account information
type ExternalAccount struct {
	// The account identifier The account number for external communications
	AccountNumber *string `json:"account_number,omitempty"`
	// Account owner title
	AccountTitle *string `json:"account_title,omitempty"`
	// The NSCC brokerage / clearing house identifier
	ParticipantNumber *string `json:"participant_number,omitempty"`
}

func (o *ExternalAccount) GetAccountNumber() *string {
	if o == nil {
		return nil
	}
	return o.AccountNumber
}

func (o *ExternalAccount) GetAccountTitle() *string {
	if o == nil {
		return nil
	}
	return o.AccountTitle
}

func (o *ExternalAccount) GetParticipantNumber() *string {
	if o == nil {
		return nil
	}
	return o.ParticipantNumber
}

// Deliverer - The delivering party information
type Deliverer struct {
	// The internal apex account id
	ApexAccountID *string `json:"apex_account_id,omitempty"`
	// The external account information
	ExternalAccount *ExternalAccount `json:"external_account,omitempty"`
}

func (o *Deliverer) GetApexAccountID() *string {
	if o == nil {
		return nil
	}
	return o.ApexAccountID
}

func (o *Deliverer) GetExternalAccount() *ExternalAccount {
	if o == nil {
		return nil
	}
	return o.ExternalAccount
}

// Direction - The direction of the transfer
type Direction string

const (
	DirectionDirectionUnspecified Direction = "DIRECTION_UNSPECIFIED"
	DirectionOutgoing             Direction = "OUTGOING"
	DirectionIncoming             Direction = "INCOMING"
)

func (e Direction) ToPointer() *Direction {
	return &e
}

// NsccStatus - The NSCC transfer status
type NsccStatus string

const (
	NsccStatusNsccStatusUnspecified                   NsccStatus = "NSCC_STATUS_UNSPECIFIED"
	NsccStatusRequest                                 NsccStatus = "REQUEST"
	NsccStatusRequestAdjust                           NsccStatus = "REQUEST_ADJUST"
	NsccStatusRequestAdjustPast                       NsccStatus = "REQUEST_ADJUST_PAST"
	NsccStatusRequestPast                             NsccStatus = "REQUEST_PAST"
	NsccStatusRequestReject                           NsccStatus = "REQUEST_REJECT"
	NsccStatusReview                                  NsccStatus = "REVIEW"
	NsccStatusReviewAdjustDeliverer                   NsccStatus = "REVIEW_ADJUST_DELIVERER"
	NsccStatusReviewError                             NsccStatus = "REVIEW_ERROR"
	NsccStatusReviewAccelerate                        NsccStatus = "REVIEW_ACCELERATE"
	NsccStatusReviewAdjustReceiverAccelerate          NsccStatus = "REVIEW_ADJUST_RECEIVER_ACCELERATE"
	NsccStatusSettlePrep                              NsccStatus = "SETTLE_PREP"
	NsccStatusSettleClose                             NsccStatus = "SETTLE_CLOSE"
	NsccStatusClosePurge                              NsccStatus = "CLOSE_PURGE"
	NsccStatusPartialRequest                          NsccStatus = "PARTIAL_REQUEST"
	NsccStatusMemoPurgePartialTransferRequestReceiver NsccStatus = "MEMO_PURGE_PARTIAL_TRANSFER_REQUEST_RECEIVER"
	NsccStatusReject                                  NsccStatus = "REJECT"
	NsccStatusSystemPurge                             NsccStatus = "SYSTEM_PURGE"
)

func (e NsccStatus) ToPointer() *NsccStatus {
	return &e
}

// AcatsTransferExternalAccount - The external account information
type AcatsTransferExternalAccount struct {
	// The account identifier The account number for external communications
	AccountNumber *string `json:"account_number,omitempty"`
	// Account owner title
	AccountTitle *string `json:"account_title,omitempty"`
	// The NSCC brokerage / clearing house identifier
	ParticipantNumber *string `json:"participant_number,omitempty"`
}

func (o *AcatsTransferExternalAccount) GetAccountNumber() *string {
	if o == nil {
		return nil
	}
	return o.AccountNumber
}

func (o *AcatsTransferExternalAccount) GetAccountTitle() *string {
	if o == nil {
		return nil
	}
	return o.AccountTitle
}

func (o *AcatsTransferExternalAccount) GetParticipantNumber() *string {
	if o == nil {
		return nil
	}
	return o.ParticipantNumber
}

// Receiver - The receiving party information
type Receiver struct {
	// The internal apex account id
	ApexAccountID *string `json:"apex_account_id,omitempty"`
	// The external account information
	ExternalAccount *AcatsTransferExternalAccount `json:"external_account,omitempty"`
}

func (o *Receiver) GetApexAccountID() *string {
	if o == nil {
		return nil
	}
	return o.ApexAccountID
}

func (o *Receiver) GetExternalAccount() *AcatsTransferExternalAccount {
	if o == nil {
		return nil
	}
	return o.ExternalAccount
}

// RejectCode - The reject code
type RejectCode string

const (
	RejectCodeRejectCodeUnspecified                                RejectCode = "REJECT_CODE_UNSPECIFIED"
	RejectCodeRejectCodeSsnTaxIDMismatch                           RejectCode = "REJECT_CODE_SSN_TAX_ID_MISMATCH"
	RejectCodeRejectCodeAccountTitleMismatch                       RejectCode = "REJECT_CODE_ACCOUNT_TITLE_MISMATCH"
	RejectCodeRejectCodeDocumentationNeeded                        RejectCode = "REJECT_CODE_DOCUMENTATION_NEEDED"
	RejectCodeRejectCodeAccountFlat                                RejectCode = "REJECT_CODE_ACCOUNT_FLAT"
	RejectCodeRejectCodeInvalidAccountNumber                       RejectCode = "REJECT_CODE_INVALID_ACCOUNT_NUMBER"
	RejectCodeRejectCodeDuplicate                                  RejectCode = "REJECT_CODE_DUPLICATE"
	RejectCodeRejectCodeAccountInDistributionOrTransfer            RejectCode = "REJECT_CODE_ACCOUNT_IN_DISTRIBUTION_OR_TRANSFER"
	RejectCodeRejectCodeClientRescinded                            RejectCode = "REJECT_CODE_CLIENT_RESCINDED"
	RejectCodeRejectCodeMissingAuthorizationSignature              RejectCode = "REJECT_CODE_MISSING_AUTHORIZATION_SIGNATURE"
	RejectCodeRejectCodeAccountViolatesCreditPolicyOfReceivingFirm RejectCode = "REJECT_CODE_ACCOUNT_VIOLATES_CREDIT_POLICY_OF_RECEIVING_FIRM"
	RejectCodeRejectCodeUnrecognizedForResidualCreditBalance       RejectCode = "REJECT_CODE_UNRECOGNIZED_FOR_RESIDUAL_CREDIT_BALANCE"
	RejectCodeRejectCodePartialTransferDeliverer                   RejectCode = "REJECT_CODE_PARTIAL_TRANSFER_DELIVERER"
	RejectCodeRejectCodeFailReversal                               RejectCode = "REJECT_CODE_FAIL_REVERSAL"
	RejectCodeRejectCodeReclaim                                    RejectCode = "REJECT_CODE_RECLAIM"
	RejectCodeRejectCodeMutualFundCleanup                          RejectCode = "REJECT_CODE_MUTUAL_FUND_CLEANUP"
)

func (e RejectCode) ToPointer() *RejectCode {
	return &e
}

// AcatsTransferState - The transfer state
type AcatsTransferState string

const (
	AcatsTransferStateStateUnspecified      AcatsTransferState = "STATE_UNSPECIFIED"
	AcatsTransferStateReceived              AcatsTransferState = "RECEIVED"
	AcatsTransferStateSubmitted             AcatsTransferState = "SUBMITTED"
	AcatsTransferStateRejected              AcatsTransferState = "REJECTED"
	AcatsTransferStatePendingContraResponse AcatsTransferState = "PENDING_CONTRA_RESPONSE"
	AcatsTransferStateError                 AcatsTransferState = "ERROR"
	AcatsTransferStateAccepted              AcatsTransferState = "ACCEPTED"
	AcatsTransferStatePendingReview         AcatsTransferState = "PENDING_REVIEW"
	AcatsTransferStatePendingRejection      AcatsTransferState = "PENDING_REJECTION"
	AcatsTransferStatePendingSettlement     AcatsTransferState = "PENDING_SETTLEMENT"
	AcatsTransferStatePendingBookkeeping    AcatsTransferState = "PENDING_BOOKKEEPING"
	AcatsTransferStateCompleted             AcatsTransferState = "COMPLETED"
	AcatsTransferStatePurged                AcatsTransferState = "PURGED"
)

func (e AcatsTransferState) ToPointer() *AcatsTransferState {
	return &e
}

// TransferType - The type of transfer
type TransferType string

const (
	TransferTypeTransferTypeUnspecified                         TransferType = "TRANSFER_TYPE_UNSPECIFIED"
	TransferTypeFailReversalBrokerToBrokerOnly                  TransferType = "FAIL_REVERSAL_BROKER_TO_BROKER_ONLY"
	TransferTypeFullTransfer                                    TransferType = "FULL_TRANSFER"
	TransferTypeMutualFundCleanup                               TransferType = "MUTUAL_FUND_CLEANUP"
	TransferTypePartialTransferDeliverer                        TransferType = "PARTIAL_TRANSFER_DELIVERER"
	TransferTypePartialTransferReceiver                         TransferType = "PARTIAL_TRANSFER_RECEIVER"
	TransferTypePositionTransferFundFirmToMutualFundCompanyOnly TransferType = "POSITION_TRANSFER_FUND_FIRM_TO_MUTUAL_FUND_COMPANY_ONLY"
	TransferTypeReclaim                                         TransferType = "RECLAIM"
	TransferTypeResidualCredit                                  TransferType = "RESIDUAL_CREDIT"
)

func (e TransferType) ToPointer() *TransferType {
	return &e
}

// AcatsTransfer - An account transfer which contains the receiving and delivering party information, assets being transferred, NSCC status information, etc.
type AcatsTransfer struct {
	// The NSCC transfer identifier
	AcatControlNumber *string `json:"acat_control_number,omitempty"`
	// The assets being transferred (Cash, Equities, etc.)
	Assets []AcatsAsset `json:"assets,omitempty"`
	// User supplied comment
	Comment *string `json:"comment,omitempty"`
	// The transfer creation timestamp
	CreateTime *time.Time `json:"create_time,omitempty"`
	// The delivering party information
	Deliverer *Deliverer `json:"deliverer,omitempty"`
	// The direction of the transfer
	Direction *Direction `json:"direction,omitempty"`
	// The service generated name of the transfer. Format: correspondents/{correspondent_id}/accounts/{account_id}/transfers/{transfer_id}
	Name *string `json:"name,omitempty"`
	// The NSCC transfer status
	NsccStatus *NsccStatus `json:"nscc_status,omitempty"`
	// An associated NSCC transfer identifier, if applicable
	OriginalControlNumber *string `json:"original_control_number,omitempty"`
	// The receiving party information
	Receiver *Receiver `json:"receiver,omitempty"`
	// The reject code
	RejectCode *RejectCode `json:"reject_code,omitempty"`
	// The transfer state
	State *AcatsTransferState `json:"state,omitempty"`
	// The type of transfer
	TransferType *TransferType `json:"transfer_type,omitempty"`
}

func (a AcatsTransfer) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AcatsTransfer) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AcatsTransfer) GetAcatControlNumber() *string {
	if o == nil {
		return nil
	}
	return o.AcatControlNumber
}

func (o *AcatsTransfer) GetAssets() []AcatsAsset {
	if o == nil {
		return nil
	}
	return o.Assets
}

func (o *AcatsTransfer) GetComment() *string {
	if o == nil {
		return nil
	}
	return o.Comment
}

func (o *AcatsTransfer) GetCreateTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreateTime
}

func (o *AcatsTransfer) GetDeliverer() *Deliverer {
	if o == nil {
		return nil
	}
	return o.Deliverer
}

func (o *AcatsTransfer) GetDirection() *Direction {
	if o == nil {
		return nil
	}
	return o.Direction
}

func (o *AcatsTransfer) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *AcatsTransfer) GetNsccStatus() *NsccStatus {
	if o == nil {
		return nil
	}
	return o.NsccStatus
}

func (o *AcatsTransfer) GetOriginalControlNumber() *string {
	if o == nil {
		return nil
	}
	return o.OriginalControlNumber
}

func (o *AcatsTransfer) GetReceiver() *Receiver {
	if o == nil {
		return nil
	}
	return o.Receiver
}

func (o *AcatsTransfer) GetRejectCode() *RejectCode {
	if o == nil {
		return nil
	}
	return o.RejectCode
}

func (o *AcatsTransfer) GetState() *AcatsTransferState {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *AcatsTransfer) GetTransferType() *TransferType {
	if o == nil {
		return nil
	}
	return o.TransferType
}
