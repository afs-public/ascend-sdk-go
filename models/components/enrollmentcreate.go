// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// EnrollmentCreateConsentMethod - The consent method for the enrollment. Defaults to ESIGNATURE.
type EnrollmentCreateConsentMethod string

const (
	EnrollmentCreateConsentMethodConsentMethodUnspecified  EnrollmentCreateConsentMethod = "CONSENT_METHOD_UNSPECIFIED"
	EnrollmentCreateConsentMethodEsignature                EnrollmentCreateConsentMethod = "ESIGNATURE"
	EnrollmentCreateConsentMethodWetSignature              EnrollmentCreateConsentMethod = "WET_SIGNATURE"
	EnrollmentCreateConsentMethodNegativeConsentConversion EnrollmentCreateConsentMethod = "NEGATIVE_CONSENT_CONVERSION"
)

func (e EnrollmentCreateConsentMethod) ToPointer() *EnrollmentCreateConsentMethod {
	return &e
}
func (e *EnrollmentCreateConsentMethod) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONSENT_METHOD_UNSPECIFIED":
		fallthrough
	case "ESIGNATURE":
		fallthrough
	case "WET_SIGNATURE":
		fallthrough
	case "NEGATIVE_CONSENT_CONVERSION":
		*e = EnrollmentCreateConsentMethod(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnrollmentCreateConsentMethod: %v", v)
	}
}

// EnrollmentCreateType - Describes the name of the enrollment; Expressed as an enum
type EnrollmentCreateType string

const (
	EnrollmentCreateTypeEnrollmentTypeUnspecified             EnrollmentCreateType = "ENROLLMENT_TYPE_UNSPECIFIED"
	EnrollmentCreateTypeRegistrationIndividual                EnrollmentCreateType = "REGISTRATION_INDIVIDUAL"
	EnrollmentCreateTypeLendingLimitedPurposeMargin           EnrollmentCreateType = "LENDING_LIMITED_PURPOSE_MARGIN"
	EnrollmentCreateTypeLendingFullyPaidStockLoan             EnrollmentCreateType = "LENDING_FULLY_PAID_STOCK_LOAN"
	EnrollmentCreateTypeBeneficiaryDesignation                EnrollmentCreateType = "BENEFICIARY_DESIGNATION"
	EnrollmentCreateTypeRegistrationJointWros                 EnrollmentCreateType = "REGISTRATION_JOINT_WROS"
	EnrollmentCreateTypeRegistrationJointTic                  EnrollmentCreateType = "REGISTRATION_JOINT_TIC"
	EnrollmentCreateTypeRegistrationJointTbe                  EnrollmentCreateType = "REGISTRATION_JOINT_TBE"
	EnrollmentCreateTypeRegistrationJointCp                   EnrollmentCreateType = "REGISTRATION_JOINT_CP"
	EnrollmentCreateTypeRegistrationEstate                    EnrollmentCreateType = "REGISTRATION_ESTATE"
	EnrollmentCreateTypeRegistrationIraTraditional            EnrollmentCreateType = "REGISTRATION_IRA_TRADITIONAL"
	EnrollmentCreateTypeRegistrationIraSimple                 EnrollmentCreateType = "REGISTRATION_IRA_SIMPLE"
	EnrollmentCreateTypeRegistrationIraSep                    EnrollmentCreateType = "REGISTRATION_IRA_SEP"
	EnrollmentCreateTypeRegistrationIraRoth                   EnrollmentCreateType = "REGISTRATION_IRA_ROTH"
	EnrollmentCreateTypeRegistrationIraRollover               EnrollmentCreateType = "REGISTRATION_IRA_ROLLOVER"
	EnrollmentCreateTypeRegistrationTrust                     EnrollmentCreateType = "REGISTRATION_TRUST"
	EnrollmentCreateTypeRegistrationCorporation               EnrollmentCreateType = "REGISTRATION_CORPORATION"
	EnrollmentCreateTypeCashFdicCashSweep                     EnrollmentCreateType = "CASH_FDIC_CASH_SWEEP"
	EnrollmentCreateTypeMarginsPdtReset                       EnrollmentCreateType = "MARGINS_PDT_RESET"
	EnrollmentCreateTypeRetirementBeneficiaryDesignation      EnrollmentCreateType = "RETIREMENT_BENEFICIARY_DESIGNATION"
	EnrollmentCreateTypeDividendReinvestmentPlan              EnrollmentCreateType = "DIVIDEND_REINVESTMENT_PLAN"
	EnrollmentCreateTypeRegistrationIraBeneficiaryTraditional EnrollmentCreateType = "REGISTRATION_IRA_BENEFICIARY_TRADITIONAL"
	EnrollmentCreateTypeRegistrationIraBeneficiaryRoth        EnrollmentCreateType = "REGISTRATION_IRA_BENEFICIARY_ROTH"
	EnrollmentCreateTypeRegistrationCustodial                 EnrollmentCreateType = "REGISTRATION_CUSTODIAL"
	EnrollmentCreateTypeRegTMargin                            EnrollmentCreateType = "REG_T_MARGIN"
)

func (e EnrollmentCreateType) ToPointer() *EnrollmentCreateType {
	return &e
}
func (e *EnrollmentCreateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENROLLMENT_TYPE_UNSPECIFIED":
		fallthrough
	case "REGISTRATION_INDIVIDUAL":
		fallthrough
	case "LENDING_LIMITED_PURPOSE_MARGIN":
		fallthrough
	case "LENDING_FULLY_PAID_STOCK_LOAN":
		fallthrough
	case "BENEFICIARY_DESIGNATION":
		fallthrough
	case "REGISTRATION_JOINT_WROS":
		fallthrough
	case "REGISTRATION_JOINT_TIC":
		fallthrough
	case "REGISTRATION_JOINT_TBE":
		fallthrough
	case "REGISTRATION_JOINT_CP":
		fallthrough
	case "REGISTRATION_ESTATE":
		fallthrough
	case "REGISTRATION_IRA_TRADITIONAL":
		fallthrough
	case "REGISTRATION_IRA_SIMPLE":
		fallthrough
	case "REGISTRATION_IRA_SEP":
		fallthrough
	case "REGISTRATION_IRA_ROTH":
		fallthrough
	case "REGISTRATION_IRA_ROLLOVER":
		fallthrough
	case "REGISTRATION_TRUST":
		fallthrough
	case "REGISTRATION_CORPORATION":
		fallthrough
	case "CASH_FDIC_CASH_SWEEP":
		fallthrough
	case "MARGINS_PDT_RESET":
		fallthrough
	case "RETIREMENT_BENEFICIARY_DESIGNATION":
		fallthrough
	case "DIVIDEND_REINVESTMENT_PLAN":
		fallthrough
	case "REGISTRATION_IRA_BENEFICIARY_TRADITIONAL":
		fallthrough
	case "REGISTRATION_IRA_BENEFICIARY_ROTH":
		fallthrough
	case "REGISTRATION_CUSTODIAL":
		fallthrough
	case "REG_T_MARGIN":
		*e = EnrollmentCreateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnrollmentCreateType: %v", v)
	}
}

// EnrollmentCreate - An Enrollment represents programs the account may enroll in.
type EnrollmentCreate struct {
	// Enrollment metadata for the BENEFICIARY_DESIGNATION enrollment type.
	BeneficiaryEnrollmentMetadata *BeneficiaryEnrollmentMetadataCreate `json:"beneficiary_enrollment_metadata,omitempty"`
	// The consent method for the enrollment. Defaults to ESIGNATURE.
	ConsentMethod                 *EnrollmentCreateConsentMethod       `json:"consent_method,omitempty"`
	CorporationEnrollmentMetadata *CorporationEnrollmentMetadataCreate `json:"corporation_enrollment_metadata,omitempty"`
	// Enrollment metadata for the CUSTODIAL enrollment type
	CustodialEnrollmentMetadata *CustodialEnrollmentMetadataCreate `json:"custodial_enrollment_metadata,omitempty"`
	// Enrollment metadata for estate enrollments
	EstateEnrollmentMetadata                   *EstateEnrollmentMetadataCreate                   `json:"estate_enrollment_metadata,omitempty"`
	ForeignIndividualAccountEnrollmentMetadata *ForeignIndividualAccountEnrollmentMetadataCreate `json:"foreign_individual_account_enrollment_metadata,omitempty"`
	// Percentages for FPSL Enrollment, must equal 100
	FpslEnrollmentMetadata *FPSLEnrollmentMetaDataCreate `json:"fpsl_enrollment_metadata,omitempty"`
	// Enrollment metadata for Individual accounts enrollment type
	IndividualEnrollmentMetadata *IndividualEnrollmentMetadataCreate `json:"individual_enrollment_metadata,omitempty"`
	// Enrollment metadata for beneficiary IRA accounts enrollment type
	IraBeneficiaryEnrollmentMetadata *IRABeneficiaryEnrollmentMetadataCreate `json:"ira_beneficiary_enrollment_metadata,omitempty"`
	// Enrollment metadata for Rollover IRA accounts enrollment type
	IraRolloverEnrollmentMetadata *IRARolloverEnrollmentMetadataCreate `json:"ira_rollover_enrollment_metadata,omitempty"`
	// Enrollment metadata for ROTH IRA accounts enrollment type
	IraRothEnrollmentMetadata *IRARothEnrollmentMetadataCreate `json:"ira_roth_enrollment_metadata,omitempty"`
	// Enrollment metadata for IRA SEP_IRA accounts enrollment type
	IraSepEnrollmentMetadata *IRASEPEnrollmentMetadataCreate `json:"ira_sep_enrollment_metadata,omitempty"`
	// Enrollment metadata for Simple IRA accounts enrollment type
	IraSimpleEnrollmentMetadata *IRASimpleEnrollmentMetadataCreate `json:"ira_simple_enrollment_metadata,omitempty"`
	// Enrollment metadata for Traditional IRA accounts enrollment type
	IraTraditionalEnrollmentMetadata *IRATraditionalEnrollmentMetadataCreate `json:"ira_traditional_enrollment_metadata,omitempty"`
	// Enrollment metadata for the Joint Community Property Registration enrollment type
	JointCommunityPropertyEnrollmentMetadata *JointCommunityPropertyEnrollmentMetadataCreate `json:"joint_community_property_enrollment_metadata,omitempty"`
	// Enrollment metadata for the Joint Tenants by Entirety Registration enrollment type
	JointTenantsByEntiretyEnrollmentMetadata *JointTenantsByEntiretyEnrollmentMetadataCreate `json:"joint_tenants_by_entirety_enrollment_metadata,omitempty"`
	// Enrollment metadata for the Joint Tenants In Common enrollment type
	JointTenantsInCommonEnrollmentMetadata *JointTenantsInCommonEnrollmentMetadataCreate `json:"joint_tenants_in_common_enrollment_metadata,omitempty"`
	// Enrollment metadata for the With Right of Survivorship enrollment type
	JointWithRightsOfSurvivorshipEnrollmentMetadata *JointWithRightsOfSurvivorshipEnrollmentMetadataCreate `json:"joint_with_rights_of_survivorship_enrollment_metadata,omitempty"`
	LlcEnrollmentMetadata                           *LLCEnrollmentMetadataCreate                           `json:"llc_enrollment_metadata,omitempty"`
	// Enrollment metadata for the REGISTRATION_OPERATING enrollment type.
	OperatingEnrollmentMetadata *OperatingEnrollmentMetadataCreate `json:"operating_enrollment_metadata,omitempty"`
	// The ULID is associated with the approver of a given enrollment. The approver you create will contain the CRD Number issued to the person by FINRA. As an RIA, you should use the ULID associated with Apex's approver.
	PrincipalApproverID     string                         `json:"principal_approver_id"`
	TrustEnrollmentMetadata *TrustEnrollmentMetadataCreate `json:"trust_enrollment_metadata,omitempty"`
	// Describes the name of the enrollment; Expressed as an enum
	Type EnrollmentCreateType `json:"type"`
}

func (o *EnrollmentCreate) GetBeneficiaryEnrollmentMetadata() *BeneficiaryEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.BeneficiaryEnrollmentMetadata
}

func (o *EnrollmentCreate) GetConsentMethod() *EnrollmentCreateConsentMethod {
	if o == nil {
		return nil
	}
	return o.ConsentMethod
}

func (o *EnrollmentCreate) GetCorporationEnrollmentMetadata() *CorporationEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.CorporationEnrollmentMetadata
}

func (o *EnrollmentCreate) GetCustodialEnrollmentMetadata() *CustodialEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.CustodialEnrollmentMetadata
}

func (o *EnrollmentCreate) GetEstateEnrollmentMetadata() *EstateEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.EstateEnrollmentMetadata
}

func (o *EnrollmentCreate) GetForeignIndividualAccountEnrollmentMetadata() *ForeignIndividualAccountEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.ForeignIndividualAccountEnrollmentMetadata
}

func (o *EnrollmentCreate) GetFpslEnrollmentMetadata() *FPSLEnrollmentMetaDataCreate {
	if o == nil {
		return nil
	}
	return o.FpslEnrollmentMetadata
}

func (o *EnrollmentCreate) GetIndividualEnrollmentMetadata() *IndividualEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.IndividualEnrollmentMetadata
}

func (o *EnrollmentCreate) GetIraBeneficiaryEnrollmentMetadata() *IRABeneficiaryEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.IraBeneficiaryEnrollmentMetadata
}

func (o *EnrollmentCreate) GetIraRolloverEnrollmentMetadata() *IRARolloverEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.IraRolloverEnrollmentMetadata
}

func (o *EnrollmentCreate) GetIraRothEnrollmentMetadata() *IRARothEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.IraRothEnrollmentMetadata
}

func (o *EnrollmentCreate) GetIraSepEnrollmentMetadata() *IRASEPEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.IraSepEnrollmentMetadata
}

func (o *EnrollmentCreate) GetIraSimpleEnrollmentMetadata() *IRASimpleEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.IraSimpleEnrollmentMetadata
}

func (o *EnrollmentCreate) GetIraTraditionalEnrollmentMetadata() *IRATraditionalEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.IraTraditionalEnrollmentMetadata
}

func (o *EnrollmentCreate) GetJointCommunityPropertyEnrollmentMetadata() *JointCommunityPropertyEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.JointCommunityPropertyEnrollmentMetadata
}

func (o *EnrollmentCreate) GetJointTenantsByEntiretyEnrollmentMetadata() *JointTenantsByEntiretyEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.JointTenantsByEntiretyEnrollmentMetadata
}

func (o *EnrollmentCreate) GetJointTenantsInCommonEnrollmentMetadata() *JointTenantsInCommonEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.JointTenantsInCommonEnrollmentMetadata
}

func (o *EnrollmentCreate) GetJointWithRightsOfSurvivorshipEnrollmentMetadata() *JointWithRightsOfSurvivorshipEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.JointWithRightsOfSurvivorshipEnrollmentMetadata
}

func (o *EnrollmentCreate) GetLlcEnrollmentMetadata() *LLCEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.LlcEnrollmentMetadata
}

func (o *EnrollmentCreate) GetOperatingEnrollmentMetadata() *OperatingEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.OperatingEnrollmentMetadata
}

func (o *EnrollmentCreate) GetPrincipalApproverID() string {
	if o == nil {
		return ""
	}
	return o.PrincipalApproverID
}

func (o *EnrollmentCreate) GetTrustEnrollmentMetadata() *TrustEnrollmentMetadataCreate {
	if o == nil {
		return nil
	}
	return o.TrustEnrollmentMetadata
}

func (o *EnrollmentCreate) GetType() EnrollmentCreateType {
	if o == nil {
		return EnrollmentCreateType("")
	}
	return o.Type
}
