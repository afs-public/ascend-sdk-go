// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// PersonIdentificationType - Tax id type (e.g. ssn)
type PersonIdentificationType string

const (
	PersonIdentificationTypeIDTypeUnspecified PersonIdentificationType = "ID_TYPE_UNSPECIFIED"
	PersonIdentificationTypeSsn               PersonIdentificationType = "SSN"
	PersonIdentificationTypeItin              PersonIdentificationType = "ITIN"
)

func (e PersonIdentificationType) ToPointer() *PersonIdentificationType {
	return &e
}
func (e *PersonIdentificationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ID_TYPE_UNSPECIFIED":
		fallthrough
	case "SSN":
		fallthrough
	case "ITIN":
		*e = PersonIdentificationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PersonIdentificationType: %v", v)
	}
}

// PersonIdentification - stores various identification types
type PersonIdentification struct {
	// Administrative area that issued the identification For example, this can be a state, a province, an oblast, or a prefecture.
	AdministrativeArea *string `json:"administrative_area,omitempty"`
	// One or more UUIDs from the documents api of the image(s) of the document that relates to the identification for the person investigation.
	DocumentReferenceIds []string `json:"document_reference_ids,omitempty"`
	// Country that issued identification Two character region code, complies with https://cldr.unicode.org/index
	RegionCode *string `json:"region_code,omitempty"`
	// Tax id type (e.g. ssn)
	Type *PersonIdentificationType `json:"type,omitempty"`
	// Tax id value
	Value *string `json:"value,omitempty"`
}

func (o *PersonIdentification) GetAdministrativeArea() *string {
	if o == nil {
		return nil
	}
	return o.AdministrativeArea
}

func (o *PersonIdentification) GetDocumentReferenceIds() []string {
	if o == nil {
		return nil
	}
	return o.DocumentReferenceIds
}

func (o *PersonIdentification) GetRegionCode() *string {
	if o == nil {
		return nil
	}
	return o.RegionCode
}

func (o *PersonIdentification) GetType() *PersonIdentificationType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *PersonIdentification) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}
