// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// CreatedDate - date this person was added to the DNDB list
type CreatedDate struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day *int `json:"day,omitempty"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month *int `json:"month,omitempty"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year *int `json:"year,omitempty"`
}

func (o *CreatedDate) GetDay() *int {
	if o == nil {
		return nil
	}
	return o.Day
}

func (o *CreatedDate) GetMonth() *int {
	if o == nil {
		return nil
	}
	return o.Month
}

func (o *CreatedDate) GetYear() *int {
	if o == nil {
		return nil
	}
	return o.Year
}

// Dob - DNDB persons date of birth
type Dob struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day *int `json:"day,omitempty"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month *int `json:"month,omitempty"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year *int `json:"year,omitempty"`
}

func (o *Dob) GetDay() *int {
	if o == nil {
		return nil
	}
	return o.Day
}

func (o *Dob) GetMonth() *int {
	if o == nil {
		return nil
	}
	return o.Month
}

func (o *Dob) GetYear() *int {
	if o == nil {
		return nil
	}
	return o.Year
}

// EndDate - date this person will be removed from the DNDB list
type EndDate struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day *int `json:"day,omitempty"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month *int `json:"month,omitempty"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year *int `json:"year,omitempty"`
}

func (o *EndDate) GetDay() *int {
	if o == nil {
		return nil
	}
	return o.Day
}

func (o *EndDate) GetMonth() *int {
	if o == nil {
		return nil
	}
	return o.Month
}

func (o *EndDate) GetYear() *int {
	if o == nil {
		return nil
	}
	return o.Year
}

// DndbDetails - Dndb details
type DndbDetails struct {
	// DNDB persons business name
	BusinessNm *string `json:"business_nm,omitempty"`
	// reason why person exists in DNDB list
	Comments *string `json:"comments,omitempty"`
	// person that created this record for the DNDB list
	CreateUser *string `json:"create_user,omitempty"`
	// date this person was added to the DNDB list
	CreatedDate *CreatedDate `json:"created_date,omitempty"`
	// DNDB persons date of birth
	Dob *Dob `json:"dob,omitempty"`
	// DNDB persons email address
	Email *string `json:"email,omitempty"`
	// date this person will be removed from the DNDB list
	EndDate *EndDate `json:"end_date,omitempty"`
	// DNDB persons first name
	FirstNm *string `json:"first_nm,omitempty"`
	// DNDB profile person id
	ID *int `json:"id,omitempty"`
	// DNDB persons last name
	LastNm *string `json:"last_nm,omitempty"`
	// DNDB persons middle name
	MiddleNm *string `json:"middle_nm,omitempty"`
	// DNDB persons ssn number
	Ssn *string `json:"ssn,omitempty"`
	// DNDB persons telephone number
	Telephone *string `json:"telephone,omitempty"`
	// DNDB persons tin number
	Tin *string `json:"tin,omitempty"`
}

func (o *DndbDetails) GetBusinessNm() *string {
	if o == nil {
		return nil
	}
	return o.BusinessNm
}

func (o *DndbDetails) GetComments() *string {
	if o == nil {
		return nil
	}
	return o.Comments
}

func (o *DndbDetails) GetCreateUser() *string {
	if o == nil {
		return nil
	}
	return o.CreateUser
}

func (o *DndbDetails) GetCreatedDate() *CreatedDate {
	if o == nil {
		return nil
	}
	return o.CreatedDate
}

func (o *DndbDetails) GetDob() *Dob {
	if o == nil {
		return nil
	}
	return o.Dob
}

func (o *DndbDetails) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *DndbDetails) GetEndDate() *EndDate {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *DndbDetails) GetFirstNm() *string {
	if o == nil {
		return nil
	}
	return o.FirstNm
}

func (o *DndbDetails) GetID() *int {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *DndbDetails) GetLastNm() *string {
	if o == nil {
		return nil
	}
	return o.LastNm
}

func (o *DndbDetails) GetMiddleNm() *string {
	if o == nil {
		return nil
	}
	return o.MiddleNm
}

func (o *DndbDetails) GetSsn() *string {
	if o == nil {
		return nil
	}
	return o.Ssn
}

func (o *DndbDetails) GetTelephone() *string {
	if o == nil {
		return nil
	}
	return o.Telephone
}

func (o *DndbDetails) GetTin() *string {
	if o == nil {
		return nil
	}
	return o.Tin
}

// LastChangedDate - Date profile was last updated
type LastChangedDate struct {
	// Day
	Day *string `json:"day,omitempty"`
	// Month
	Month *string `json:"month,omitempty"`
	// Year
	Year *string `json:"year,omitempty"`
}

func (o *LastChangedDate) GetDay() *string {
	if o == nil {
		return nil
	}
	return o.Day
}

func (o *LastChangedDate) GetMonth() *string {
	if o == nil {
		return nil
	}
	return o.Month
}

func (o *LastChangedDate) GetYear() *string {
	if o == nil {
		return nil
	}
	return o.Year
}

// DowJonesDetails - Dow Jones details
type DowJonesDetails struct {
	// Active status of matched profile
	ActiveStatus *string `json:"active_status,omitempty"`
	// Corresponding address details
	AddressDetails []AddressDetail `json:"address_details,omitempty"`
	// Dates of birth
	BirthDates []DowJonesDate `json:"birth_dates,omitempty"`
	// Corresponding birth places
	BirthPlaces []string `json:"birth_places,omitempty"`
	// Corresponding country details
	CountryDetails []CountryDetail `json:"country_details,omitempty"`
	// If corresponding person is deceased
	Deceased *string `json:"deceased,omitempty"`
	// Dates of death
	DeceasedDates []DowJonesDate `json:"deceased_dates,omitempty"`
	// Corresponding description details
	DescriptionDetails []DescriptionDetail `json:"description_details,omitempty"`
	// Dow Jones profile person id
	DowJonesPersonID *int `json:"dow_jones_person_id,omitempty"`
	// Gender of person
	Gender *string `json:"gender,omitempty"`
	// Corresponding identifications
	Identifications []IdentificationDetail `json:"identifications,omitempty"`
	// Images relating to profile
	Images []string `json:"images,omitempty"`
	// Date profile was last updated
	LastChangedDate *LastChangedDate `json:"last_changed_date,omitempty"`
	// Name details associated with profile
	NameDetails []NameDetail `json:"name_details,omitempty"`
	// Associated profile notes
	ProfileNotes *string `json:"profile_notes,omitempty"`
	// Related profiles
	RelatedProfiles []RelatedProfile `json:"related_profiles,omitempty"`
	// Corresponding role details
	RoleDetails []RoleDetail `json:"role_details,omitempty"`
	// Corresponding sanctions list details
	SanctionsListDetails []SanctionsListDetail `json:"sanctions_list_details,omitempty"`
	// Sources relating to profile
	Sources []string `json:"sources,omitempty"`
}

func (o *DowJonesDetails) GetActiveStatus() *string {
	if o == nil {
		return nil
	}
	return o.ActiveStatus
}

func (o *DowJonesDetails) GetAddressDetails() []AddressDetail {
	if o == nil {
		return nil
	}
	return o.AddressDetails
}

func (o *DowJonesDetails) GetBirthDates() []DowJonesDate {
	if o == nil {
		return nil
	}
	return o.BirthDates
}

func (o *DowJonesDetails) GetBirthPlaces() []string {
	if o == nil {
		return nil
	}
	return o.BirthPlaces
}

func (o *DowJonesDetails) GetCountryDetails() []CountryDetail {
	if o == nil {
		return nil
	}
	return o.CountryDetails
}

func (o *DowJonesDetails) GetDeceased() *string {
	if o == nil {
		return nil
	}
	return o.Deceased
}

func (o *DowJonesDetails) GetDeceasedDates() []DowJonesDate {
	if o == nil {
		return nil
	}
	return o.DeceasedDates
}

func (o *DowJonesDetails) GetDescriptionDetails() []DescriptionDetail {
	if o == nil {
		return nil
	}
	return o.DescriptionDetails
}

func (o *DowJonesDetails) GetDowJonesPersonID() *int {
	if o == nil {
		return nil
	}
	return o.DowJonesPersonID
}

func (o *DowJonesDetails) GetGender() *string {
	if o == nil {
		return nil
	}
	return o.Gender
}

func (o *DowJonesDetails) GetIdentifications() []IdentificationDetail {
	if o == nil {
		return nil
	}
	return o.Identifications
}

func (o *DowJonesDetails) GetImages() []string {
	if o == nil {
		return nil
	}
	return o.Images
}

func (o *DowJonesDetails) GetLastChangedDate() *LastChangedDate {
	if o == nil {
		return nil
	}
	return o.LastChangedDate
}

func (o *DowJonesDetails) GetNameDetails() []NameDetail {
	if o == nil {
		return nil
	}
	return o.NameDetails
}

func (o *DowJonesDetails) GetProfileNotes() *string {
	if o == nil {
		return nil
	}
	return o.ProfileNotes
}

func (o *DowJonesDetails) GetRelatedProfiles() []RelatedProfile {
	if o == nil {
		return nil
	}
	return o.RelatedProfiles
}

func (o *DowJonesDetails) GetRoleDetails() []RoleDetail {
	if o == nil {
		return nil
	}
	return o.RoleDetails
}

func (o *DowJonesDetails) GetSanctionsListDetails() []SanctionsListDetail {
	if o == nil {
		return nil
	}
	return o.SanctionsListDetails
}

func (o *DowJonesDetails) GetSources() []string {
	if o == nil {
		return nil
	}
	return o.Sources
}

// WatchlistItem - Watchlist details response
type WatchlistItem struct {
	// Dndb details
	DndbDetails *DndbDetails `json:"dndb_details,omitempty"`
	// Dow Jones details
	DowJonesDetails *DowJonesDetails `json:"dow_jones_details,omitempty"`
	// The resource identifier for the WatchlistItem The format is "watchlists/{watchlist_id}/items/{watchlist_item_id}"
	Name *string `json:"name,omitempty"`
	// Indicates the watchlist source for a given match
	Watchlist *string `json:"watchlist,omitempty"`
	// Identification number for the watchlist item that was matched
	WatchlistItem *int `json:"watchlist_item,omitempty"`
}

func (o *WatchlistItem) GetDndbDetails() *DndbDetails {
	if o == nil {
		return nil
	}
	return o.DndbDetails
}

func (o *WatchlistItem) GetDowJonesDetails() *DowJonesDetails {
	if o == nil {
		return nil
	}
	return o.DowJonesDetails
}

func (o *WatchlistItem) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *WatchlistItem) GetWatchlist() *string {
	if o == nil {
		return nil
	}
	return o.Watchlist
}

func (o *WatchlistItem) GetWatchlistItem() *int {
	if o == nil {
		return nil
	}
	return o.WatchlistItem
}
