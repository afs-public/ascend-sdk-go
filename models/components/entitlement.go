// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"time"

	"github.com/afs-public/ascend-sdk-go/internal/utils"
)

// EntitlementState - GRANTED if it was activated via an enrollment, SUSPENDED if a restriction has temporarily disabled it, or DENIED if it has never before been GRANTED
type EntitlementState string

const (
	EntitlementStateEntitlementStateUnspecified EntitlementState = "ENTITLEMENT_STATE_UNSPECIFIED"
	EntitlementStateGranted                     EntitlementState = "GRANTED"
	EntitlementStateSuspended                   EntitlementState = "SUSPENDED"
	EntitlementStateDenied                      EntitlementState = "DENIED"
)

func (e EntitlementState) ToPointer() *EntitlementState {
	return &e
}

// An Entitlement for an Account. Defines what the account is allowed to do.
type Entitlement struct {
	// A friendly name for the entitlement used primarily for UI display
	DisplayName *string `json:"display_name,omitempty"`
	// The enum value of the entitlement being described; e.g., BANKING_CHECK
	EntitlementCode *string `json:"entitlement_code,omitempty"`
	// A system-generated reason about why the last modification occurred - typically due to an enrollment or restriction event
	LastModifiedReason *string `json:"last_modified_reason,omitempty"`
	// The last time the underlying entitlement had its status updated
	LastModifiedTime *time.Time `json:"last_modified_time,omitempty"`
	// The entitlement above the subject; A model of status inheritance exists which provides context on this value
	ParentEntitlements []string `json:"parent_entitlements,omitempty"`
	// GRANTED if it was activated via an enrollment, SUSPENDED if a restriction has temporarily disabled it, or DENIED if it has never before been GRANTED
	State *EntitlementState `json:"state,omitempty"`
}

func (e Entitlement) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *Entitlement) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *Entitlement) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *Entitlement) GetEntitlementCode() *string {
	if o == nil {
		return nil
	}
	return o.EntitlementCode
}

func (o *Entitlement) GetLastModifiedReason() *string {
	if o == nil {
		return nil
	}
	return o.LastModifiedReason
}

func (o *Entitlement) GetLastModifiedTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastModifiedTime
}

func (o *Entitlement) GetParentEntitlements() []string {
	if o == nil {
		return nil
	}
	return o.ParentEntitlements
}

func (o *Entitlement) GetState() *EntitlementState {
	if o == nil {
		return nil
	}
	return o.State
}
