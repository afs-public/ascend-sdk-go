// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"time"

	"github.com/afs-public/ascend-sdk-go/internal/utils"
)

// Result - The outcome of the delivery
type Result string

const (
	ResultPushSubscriptionDeliveryResultUnspecified Result = "PUSH_SUBSCRIPTION_DELIVERY_RESULT_UNSPECIFIED"
	ResultSucceeded                                 Result = "SUCCEEDED"
	ResultFailed                                    Result = "FAILED"
)

func (e Result) ToPointer() *Result {
	return &e
}
func (e *Result) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PUSH_SUBSCRIPTION_DELIVERY_RESULT_UNSPECIFIED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		*e = Result(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Result: %v", v)
	}
}

// PushSubscriptionDelivery - Represents the delivery results of an event for a push subscription
type PushSubscriptionDelivery struct {
	// The unique identifier for the delivery
	DeliveryID *string `json:"delivery_id,omitempty"`
	// The total time spent delivering
	Duration *string `json:"duration,omitempty"`
	// The resource name of the event; Format: messages/{message}
	Event *string `json:"event,omitempty"`
	// The date and time of the event publication
	EventPublishTime *time.Time `json:"event_publish_time,omitempty"`
	// The last response received when delivering the event
	LastResponse *string `json:"last_response,omitempty"`
	// The time the event was last pushed
	LastSendTime *time.Time `json:"last_send_time,omitempty"`
	// The resource name of the delivery; Format: subscriptions/{subscription}/deliveries/{delivery}
	Name *string `json:"name,omitempty"`
	// The outcome of the delivery
	Result *Result `json:"result,omitempty"`
}

func (p PushSubscriptionDelivery) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PushSubscriptionDelivery) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PushSubscriptionDelivery) GetDeliveryID() *string {
	if o == nil {
		return nil
	}
	return o.DeliveryID
}

func (o *PushSubscriptionDelivery) GetDuration() *string {
	if o == nil {
		return nil
	}
	return o.Duration
}

func (o *PushSubscriptionDelivery) GetEvent() *string {
	if o == nil {
		return nil
	}
	return o.Event
}

func (o *PushSubscriptionDelivery) GetEventPublishTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.EventPublishTime
}

func (o *PushSubscriptionDelivery) GetLastResponse() *string {
	if o == nil {
		return nil
	}
	return o.LastResponse
}

func (o *PushSubscriptionDelivery) GetLastSendTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSendTime
}

func (o *PushSubscriptionDelivery) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PushSubscriptionDelivery) GetResult() *Result {
	if o == nil {
		return nil
	}
	return o.Result
}
