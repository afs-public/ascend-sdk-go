// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// CashJournalCreate - A cash journal transfer. Funds are moved from a source account to a destination account
type CashJournalCreate struct {
	// A representation of a decimal value, such as 2.5. Clients may convert values into language-native decimal formats, such as Java's [BigDecimal][] or Python's [decimal.Decimal][].
	//
	//  [BigDecimal]:
	//  https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html
	//  [decimal.Decimal]: https://docs.python.org/3/library/decimal.html
	Amount *DecimalCreate `json:"amount,omitempty"`
	// The external identifier supplied by the API caller Each request must have a unique pairing of `client_transfer_id` and `source_account`
	ClientTransferID string `json:"client_transfer_id"`
	// The account that funds will be moved to
	DestinationAccount string `json:"destination_account"`
	// Whether the entire source account balance is being withdrawn Must not be true if the `amount` is specified
	FullDisbursement *bool `json:"full_disbursement,omitempty"`
	// A contribution to a retirement account.
	RetirementContribution *RetirementContributionCreate `json:"retirement_contribution,omitempty"`
	// A distribution from a retirement account.
	RetirementDistribution *RetirementDistributionCreate `json:"retirement_distribution,omitempty"`
	// The account that funds will be moved from
	SourceAccount string `json:"source_account"`
}

func (o *CashJournalCreate) GetAmount() *DecimalCreate {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *CashJournalCreate) GetClientTransferID() string {
	if o == nil {
		return ""
	}
	return o.ClientTransferID
}

func (o *CashJournalCreate) GetDestinationAccount() string {
	if o == nil {
		return ""
	}
	return o.DestinationAccount
}

func (o *CashJournalCreate) GetFullDisbursement() *bool {
	if o == nil {
		return nil
	}
	return o.FullDisbursement
}

func (o *CashJournalCreate) GetRetirementContribution() *RetirementContributionCreate {
	if o == nil {
		return nil
	}
	return o.RetirementContribution
}

func (o *CashJournalCreate) GetRetirementDistribution() *RetirementDistributionCreate {
	if o == nil {
		return nil
	}
	return o.RetirementDistribution
}

func (o *CashJournalCreate) GetSourceAccount() string {
	if o == nil {
		return ""
	}
	return o.SourceAccount
}
