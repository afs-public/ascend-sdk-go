// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// EnrollmentType - The enrollment type.
type EnrollmentType string

const (
	EnrollmentTypeEnrollmentTypeUnspecified             EnrollmentType = "ENROLLMENT_TYPE_UNSPECIFIED"
	EnrollmentTypeRegistrationIndividual                EnrollmentType = "REGISTRATION_INDIVIDUAL"
	EnrollmentTypeLendingLimitedPurposeMargin           EnrollmentType = "LENDING_LIMITED_PURPOSE_MARGIN"
	EnrollmentTypeLendingFullyPaidStockLoan             EnrollmentType = "LENDING_FULLY_PAID_STOCK_LOAN"
	EnrollmentTypeBeneficiaryDesignation                EnrollmentType = "BENEFICIARY_DESIGNATION"
	EnrollmentTypeRegistrationJointWros                 EnrollmentType = "REGISTRATION_JOINT_WROS"
	EnrollmentTypeRegistrationJointTic                  EnrollmentType = "REGISTRATION_JOINT_TIC"
	EnrollmentTypeRegistrationJointTbe                  EnrollmentType = "REGISTRATION_JOINT_TBE"
	EnrollmentTypeRegistrationJointCp                   EnrollmentType = "REGISTRATION_JOINT_CP"
	EnrollmentTypeRegistrationEstate                    EnrollmentType = "REGISTRATION_ESTATE"
	EnrollmentTypeRegistrationIraTraditional            EnrollmentType = "REGISTRATION_IRA_TRADITIONAL"
	EnrollmentTypeRegistrationIraSimple                 EnrollmentType = "REGISTRATION_IRA_SIMPLE"
	EnrollmentTypeRegistrationIraSep                    EnrollmentType = "REGISTRATION_IRA_SEP"
	EnrollmentTypeRegistrationIraRoth                   EnrollmentType = "REGISTRATION_IRA_ROTH"
	EnrollmentTypeRegistrationIraRollover               EnrollmentType = "REGISTRATION_IRA_ROLLOVER"
	EnrollmentTypeRegistrationTrust                     EnrollmentType = "REGISTRATION_TRUST"
	EnrollmentTypeRegistrationCorporation               EnrollmentType = "REGISTRATION_CORPORATION"
	EnrollmentTypeCashFdicCashSweep                     EnrollmentType = "CASH_FDIC_CASH_SWEEP"
	EnrollmentTypeMarginsPdtReset                       EnrollmentType = "MARGINS_PDT_RESET"
	EnrollmentTypeRetirementBeneficiaryDesignation      EnrollmentType = "RETIREMENT_BENEFICIARY_DESIGNATION"
	EnrollmentTypeDividendReinvestmentPlan              EnrollmentType = "DIVIDEND_REINVESTMENT_PLAN"
	EnrollmentTypeRegistrationIraBeneficiaryTraditional EnrollmentType = "REGISTRATION_IRA_BENEFICIARY_TRADITIONAL"
	EnrollmentTypeRegistrationIraBeneficiaryRoth        EnrollmentType = "REGISTRATION_IRA_BENEFICIARY_ROTH"
	EnrollmentTypeRegistrationCustodial                 EnrollmentType = "REGISTRATION_CUSTODIAL"
	EnrollmentTypeRegTMargin                            EnrollmentType = "REG_T_MARGIN"
)

func (e EnrollmentType) ToPointer() *EnrollmentType {
	return &e
}
func (e *EnrollmentType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENROLLMENT_TYPE_UNSPECIFIED":
		fallthrough
	case "REGISTRATION_INDIVIDUAL":
		fallthrough
	case "LENDING_LIMITED_PURPOSE_MARGIN":
		fallthrough
	case "LENDING_FULLY_PAID_STOCK_LOAN":
		fallthrough
	case "BENEFICIARY_DESIGNATION":
		fallthrough
	case "REGISTRATION_JOINT_WROS":
		fallthrough
	case "REGISTRATION_JOINT_TIC":
		fallthrough
	case "REGISTRATION_JOINT_TBE":
		fallthrough
	case "REGISTRATION_JOINT_CP":
		fallthrough
	case "REGISTRATION_ESTATE":
		fallthrough
	case "REGISTRATION_IRA_TRADITIONAL":
		fallthrough
	case "REGISTRATION_IRA_SIMPLE":
		fallthrough
	case "REGISTRATION_IRA_SEP":
		fallthrough
	case "REGISTRATION_IRA_ROTH":
		fallthrough
	case "REGISTRATION_IRA_ROLLOVER":
		fallthrough
	case "REGISTRATION_TRUST":
		fallthrough
	case "REGISTRATION_CORPORATION":
		fallthrough
	case "CASH_FDIC_CASH_SWEEP":
		fallthrough
	case "MARGINS_PDT_RESET":
		fallthrough
	case "RETIREMENT_BENEFICIARY_DESIGNATION":
		fallthrough
	case "DIVIDEND_REINVESTMENT_PLAN":
		fallthrough
	case "REGISTRATION_IRA_BENEFICIARY_TRADITIONAL":
		fallthrough
	case "REGISTRATION_IRA_BENEFICIARY_ROTH":
		fallthrough
	case "REGISTRATION_CUSTODIAL":
		fallthrough
	case "REG_T_MARGIN":
		*e = EnrollmentType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnrollmentType: %v", v)
	}
}

// AvailableEnrollment - Available Enrollment on an Account.
type AvailableEnrollment struct {
	// A list of legal agreements associated with the enrollment.
	Agreements []LegalAgreement `json:"agreements,omitempty"`
	// The enrollment type.
	EnrollmentType *EnrollmentType `json:"enrollment_type,omitempty"`
}

func (o *AvailableEnrollment) GetAgreements() []LegalAgreement {
	if o == nil {
		return nil
	}
	return o.Agreements
}

func (o *AvailableEnrollment) GetEnrollmentType() *EnrollmentType {
	if o == nil {
		return nil
	}
	return o.EnrollmentType
}
