// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// IdentityVerificationResultUpdate - An identity verification result that clients may supply. This result represents data and confirmation attesting to identity verification.
type IdentityVerificationResultUpdate struct {
	// Attestation that external result and review have verified the supplied investor's address has been verified in conjunction with other PII
	AddressVerified *bool `json:"address_verified,omitempty"`
	// Attestation that external result and review have verified the supplied investor's date of birth has been verified in conjunction with other PII
	BirthDateVerified *bool `json:"birth_date_verified,omitempty"`
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following:
	//
	//  * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date
	//
	//  Related types are [google.type.TimeOfDay][google.type.TimeOfDay] and `google.protobuf.Timestamp`.
	ExecutionDate *DateUpdate `json:"execution_date,omitempty"`
	// Client-generated identifier associated with the KYC results for the appropriate case
	ExternalCaseID *string `json:"external_case_id,omitempty"`
	// System generated document IDs returned after uploading identity documents to the Documents API
	IdentityVerificationDocumentIds []string `json:"identity_verification_document_ids,omitempty"`
	// Attestation that external result and review have verified the supplied investor's name has been verified in conjunction with other PII
	NameVerified *bool `json:"name_verified,omitempty"`
	// A system-generated document ID assigned when raw vendor results are uploaded to the Documents API; This field is optional for person record creation, but required for account creation if the Correspondent provides IDV results
	RawVendorDataDocumentID *string `json:"raw_vendor_data_document_id,omitempty"`
	// Attestation that external result and review have verified the supplied investor's Tax ID has been verified in conjunction with other PII
	TaxIDVerified *bool `json:"tax_id_verified,omitempty"`
	// The name(s) of the vendor(s) used to externally verify and screen a natural person; relates to the identity_verification_result
	Vendor *string `json:"vendor,omitempty"`
}

func (o *IdentityVerificationResultUpdate) GetAddressVerified() *bool {
	if o == nil {
		return nil
	}
	return o.AddressVerified
}

func (o *IdentityVerificationResultUpdate) GetBirthDateVerified() *bool {
	if o == nil {
		return nil
	}
	return o.BirthDateVerified
}

func (o *IdentityVerificationResultUpdate) GetExecutionDate() *DateUpdate {
	if o == nil {
		return nil
	}
	return o.ExecutionDate
}

func (o *IdentityVerificationResultUpdate) GetExternalCaseID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalCaseID
}

func (o *IdentityVerificationResultUpdate) GetIdentityVerificationDocumentIds() []string {
	if o == nil {
		return nil
	}
	return o.IdentityVerificationDocumentIds
}

func (o *IdentityVerificationResultUpdate) GetNameVerified() *bool {
	if o == nil {
		return nil
	}
	return o.NameVerified
}

func (o *IdentityVerificationResultUpdate) GetRawVendorDataDocumentID() *string {
	if o == nil {
		return nil
	}
	return o.RawVendorDataDocumentID
}

func (o *IdentityVerificationResultUpdate) GetTaxIDVerified() *bool {
	if o == nil {
		return nil
	}
	return o.TaxIDVerified
}

func (o *IdentityVerificationResultUpdate) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}
