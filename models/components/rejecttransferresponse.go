// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"time"

	"github.com/afs-public/ascend-sdk-go/internal/utils"
)

// RejectTransferResponseExternalAccount - The external account information
type RejectTransferResponseExternalAccount struct {
	// The account identifier The account number for external communications
	AccountNumber *string `json:"account_number,omitempty"`
	// Account owner title
	AccountTitle *string `json:"account_title,omitempty"`
	// The NSCC brokerage / clearing house identifier
	ParticipantNumber *string `json:"participant_number,omitempty"`
}

func (o *RejectTransferResponseExternalAccount) GetAccountNumber() *string {
	if o == nil {
		return nil
	}
	return o.AccountNumber
}

func (o *RejectTransferResponseExternalAccount) GetAccountTitle() *string {
	if o == nil {
		return nil
	}
	return o.AccountTitle
}

func (o *RejectTransferResponseExternalAccount) GetParticipantNumber() *string {
	if o == nil {
		return nil
	}
	return o.ParticipantNumber
}

// RejectTransferResponseDeliverer - The delivering party information
type RejectTransferResponseDeliverer struct {
	// The internal apex account id
	ApexAccountID *string `json:"apex_account_id,omitempty"`
	// The external account information
	ExternalAccount *RejectTransferResponseExternalAccount `json:"external_account,omitempty"`
}

func (o *RejectTransferResponseDeliverer) GetApexAccountID() *string {
	if o == nil {
		return nil
	}
	return o.ApexAccountID
}

func (o *RejectTransferResponseDeliverer) GetExternalAccount() *RejectTransferResponseExternalAccount {
	if o == nil {
		return nil
	}
	return o.ExternalAccount
}

// RejectTransferResponseDirection - The direction of the transfer
type RejectTransferResponseDirection string

const (
	RejectTransferResponseDirectionDirectionUnspecified RejectTransferResponseDirection = "DIRECTION_UNSPECIFIED"
	RejectTransferResponseDirectionOutgoing             RejectTransferResponseDirection = "OUTGOING"
	RejectTransferResponseDirectionIncoming             RejectTransferResponseDirection = "INCOMING"
)

func (e RejectTransferResponseDirection) ToPointer() *RejectTransferResponseDirection {
	return &e
}

// RejectTransferResponseNsccStatus - The NSCC transfer status
type RejectTransferResponseNsccStatus string

const (
	RejectTransferResponseNsccStatusNsccStatusUnspecified                   RejectTransferResponseNsccStatus = "NSCC_STATUS_UNSPECIFIED"
	RejectTransferResponseNsccStatusRequest                                 RejectTransferResponseNsccStatus = "REQUEST"
	RejectTransferResponseNsccStatusRequestAdjust                           RejectTransferResponseNsccStatus = "REQUEST_ADJUST"
	RejectTransferResponseNsccStatusRequestAdjustPast                       RejectTransferResponseNsccStatus = "REQUEST_ADJUST_PAST"
	RejectTransferResponseNsccStatusRequestPast                             RejectTransferResponseNsccStatus = "REQUEST_PAST"
	RejectTransferResponseNsccStatusRequestReject                           RejectTransferResponseNsccStatus = "REQUEST_REJECT"
	RejectTransferResponseNsccStatusReview                                  RejectTransferResponseNsccStatus = "REVIEW"
	RejectTransferResponseNsccStatusReviewAdjustDeliverer                   RejectTransferResponseNsccStatus = "REVIEW_ADJUST_DELIVERER"
	RejectTransferResponseNsccStatusReviewError                             RejectTransferResponseNsccStatus = "REVIEW_ERROR"
	RejectTransferResponseNsccStatusReviewAccelerate                        RejectTransferResponseNsccStatus = "REVIEW_ACCELERATE"
	RejectTransferResponseNsccStatusReviewAdjustReceiverAccelerate          RejectTransferResponseNsccStatus = "REVIEW_ADJUST_RECEIVER_ACCELERATE"
	RejectTransferResponseNsccStatusSettlePrep                              RejectTransferResponseNsccStatus = "SETTLE_PREP"
	RejectTransferResponseNsccStatusSettleClose                             RejectTransferResponseNsccStatus = "SETTLE_CLOSE"
	RejectTransferResponseNsccStatusClosePurge                              RejectTransferResponseNsccStatus = "CLOSE_PURGE"
	RejectTransferResponseNsccStatusPartialRequest                          RejectTransferResponseNsccStatus = "PARTIAL_REQUEST"
	RejectTransferResponseNsccStatusMemoPurgePartialTransferRequestReceiver RejectTransferResponseNsccStatus = "MEMO_PURGE_PARTIAL_TRANSFER_REQUEST_RECEIVER"
	RejectTransferResponseNsccStatusReject                                  RejectTransferResponseNsccStatus = "REJECT"
	RejectTransferResponseNsccStatusSystemPurge                             RejectTransferResponseNsccStatus = "SYSTEM_PURGE"
)

func (e RejectTransferResponseNsccStatus) ToPointer() *RejectTransferResponseNsccStatus {
	return &e
}

// RejectTransferResponseTransferExternalAccount - The external account information
type RejectTransferResponseTransferExternalAccount struct {
	// The account identifier The account number for external communications
	AccountNumber *string `json:"account_number,omitempty"`
	// Account owner title
	AccountTitle *string `json:"account_title,omitempty"`
	// The NSCC brokerage / clearing house identifier
	ParticipantNumber *string `json:"participant_number,omitempty"`
}

func (o *RejectTransferResponseTransferExternalAccount) GetAccountNumber() *string {
	if o == nil {
		return nil
	}
	return o.AccountNumber
}

func (o *RejectTransferResponseTransferExternalAccount) GetAccountTitle() *string {
	if o == nil {
		return nil
	}
	return o.AccountTitle
}

func (o *RejectTransferResponseTransferExternalAccount) GetParticipantNumber() *string {
	if o == nil {
		return nil
	}
	return o.ParticipantNumber
}

// RejectTransferResponseReceiver - The receiving party information
type RejectTransferResponseReceiver struct {
	// The internal apex account id
	ApexAccountID *string `json:"apex_account_id,omitempty"`
	// The external account information
	ExternalAccount *RejectTransferResponseTransferExternalAccount `json:"external_account,omitempty"`
}

func (o *RejectTransferResponseReceiver) GetApexAccountID() *string {
	if o == nil {
		return nil
	}
	return o.ApexAccountID
}

func (o *RejectTransferResponseReceiver) GetExternalAccount() *RejectTransferResponseTransferExternalAccount {
	if o == nil {
		return nil
	}
	return o.ExternalAccount
}

// RejectTransferResponseRejectCode - The reject code
type RejectTransferResponseRejectCode string

const (
	RejectTransferResponseRejectCodeRejectCodeUnspecified                                RejectTransferResponseRejectCode = "REJECT_CODE_UNSPECIFIED"
	RejectTransferResponseRejectCodeRejectCodeSsnTaxIDMismatch                           RejectTransferResponseRejectCode = "REJECT_CODE_SSN_TAX_ID_MISMATCH"
	RejectTransferResponseRejectCodeRejectCodeAccountTitleMismatch                       RejectTransferResponseRejectCode = "REJECT_CODE_ACCOUNT_TITLE_MISMATCH"
	RejectTransferResponseRejectCodeRejectCodeDocumentationNeeded                        RejectTransferResponseRejectCode = "REJECT_CODE_DOCUMENTATION_NEEDED"
	RejectTransferResponseRejectCodeRejectCodeAccountFlat                                RejectTransferResponseRejectCode = "REJECT_CODE_ACCOUNT_FLAT"
	RejectTransferResponseRejectCodeRejectCodeInvalidAccountNumber                       RejectTransferResponseRejectCode = "REJECT_CODE_INVALID_ACCOUNT_NUMBER"
	RejectTransferResponseRejectCodeRejectCodeDuplicate                                  RejectTransferResponseRejectCode = "REJECT_CODE_DUPLICATE"
	RejectTransferResponseRejectCodeRejectCodeAccountInDistributionOrTransfer            RejectTransferResponseRejectCode = "REJECT_CODE_ACCOUNT_IN_DISTRIBUTION_OR_TRANSFER"
	RejectTransferResponseRejectCodeRejectCodeClientRescinded                            RejectTransferResponseRejectCode = "REJECT_CODE_CLIENT_RESCINDED"
	RejectTransferResponseRejectCodeRejectCodeMissingAuthorizationSignature              RejectTransferResponseRejectCode = "REJECT_CODE_MISSING_AUTHORIZATION_SIGNATURE"
	RejectTransferResponseRejectCodeRejectCodeAccountViolatesCreditPolicyOfReceivingFirm RejectTransferResponseRejectCode = "REJECT_CODE_ACCOUNT_VIOLATES_CREDIT_POLICY_OF_RECEIVING_FIRM"
	RejectTransferResponseRejectCodeRejectCodeUnrecognizedForResidualCreditBalance       RejectTransferResponseRejectCode = "REJECT_CODE_UNRECOGNIZED_FOR_RESIDUAL_CREDIT_BALANCE"
	RejectTransferResponseRejectCodeRejectCodePartialTransferDeliverer                   RejectTransferResponseRejectCode = "REJECT_CODE_PARTIAL_TRANSFER_DELIVERER"
	RejectTransferResponseRejectCodeRejectCodeFailReversal                               RejectTransferResponseRejectCode = "REJECT_CODE_FAIL_REVERSAL"
	RejectTransferResponseRejectCodeRejectCodeReclaim                                    RejectTransferResponseRejectCode = "REJECT_CODE_RECLAIM"
	RejectTransferResponseRejectCodeRejectCodeMutualFundCleanup                          RejectTransferResponseRejectCode = "REJECT_CODE_MUTUAL_FUND_CLEANUP"
)

func (e RejectTransferResponseRejectCode) ToPointer() *RejectTransferResponseRejectCode {
	return &e
}

// RejectTransferResponseState - The transfer state
type RejectTransferResponseState string

const (
	RejectTransferResponseStateStateUnspecified      RejectTransferResponseState = "STATE_UNSPECIFIED"
	RejectTransferResponseStateReceived              RejectTransferResponseState = "RECEIVED"
	RejectTransferResponseStateSubmitted             RejectTransferResponseState = "SUBMITTED"
	RejectTransferResponseStateRejected              RejectTransferResponseState = "REJECTED"
	RejectTransferResponseStatePendingContraResponse RejectTransferResponseState = "PENDING_CONTRA_RESPONSE"
	RejectTransferResponseStateError                 RejectTransferResponseState = "ERROR"
	RejectTransferResponseStateAccepted              RejectTransferResponseState = "ACCEPTED"
	RejectTransferResponseStatePendingReview         RejectTransferResponseState = "PENDING_REVIEW"
	RejectTransferResponseStatePendingRejection      RejectTransferResponseState = "PENDING_REJECTION"
	RejectTransferResponseStatePendingSettlement     RejectTransferResponseState = "PENDING_SETTLEMENT"
	RejectTransferResponseStatePendingBookkeeping    RejectTransferResponseState = "PENDING_BOOKKEEPING"
	RejectTransferResponseStateCompleted             RejectTransferResponseState = "COMPLETED"
	RejectTransferResponseStatePurged                RejectTransferResponseState = "PURGED"
)

func (e RejectTransferResponseState) ToPointer() *RejectTransferResponseState {
	return &e
}

// RejectTransferResponseTransferType - The type of transfer
type RejectTransferResponseTransferType string

const (
	RejectTransferResponseTransferTypeTransferTypeUnspecified                         RejectTransferResponseTransferType = "TRANSFER_TYPE_UNSPECIFIED"
	RejectTransferResponseTransferTypeFailReversalBrokerToBrokerOnly                  RejectTransferResponseTransferType = "FAIL_REVERSAL_BROKER_TO_BROKER_ONLY"
	RejectTransferResponseTransferTypeFullTransfer                                    RejectTransferResponseTransferType = "FULL_TRANSFER"
	RejectTransferResponseTransferTypeMutualFundCleanup                               RejectTransferResponseTransferType = "MUTUAL_FUND_CLEANUP"
	RejectTransferResponseTransferTypePartialTransferDeliverer                        RejectTransferResponseTransferType = "PARTIAL_TRANSFER_DELIVERER"
	RejectTransferResponseTransferTypePartialTransferReceiver                         RejectTransferResponseTransferType = "PARTIAL_TRANSFER_RECEIVER"
	RejectTransferResponseTransferTypePositionTransferFundFirmToMutualFundCompanyOnly RejectTransferResponseTransferType = "POSITION_TRANSFER_FUND_FIRM_TO_MUTUAL_FUND_COMPANY_ONLY"
	RejectTransferResponseTransferTypeReclaim                                         RejectTransferResponseTransferType = "RECLAIM"
	RejectTransferResponseTransferTypeResidualCredit                                  RejectTransferResponseTransferType = "RESIDUAL_CREDIT"
)

func (e RejectTransferResponseTransferType) ToPointer() *RejectTransferResponseTransferType {
	return &e
}

// RejectTransferResponseTransfer - The rejected transfer's resource
type RejectTransferResponseTransfer struct {
	// The NSCC transfer identifier
	AcatControlNumber *string `json:"acat_control_number,omitempty"`
	// The assets being transferred (Cash, Equities, etc.)
	Assets []AcatsAsset `json:"assets,omitempty"`
	// User supplied comment
	Comment *string `json:"comment,omitempty"`
	// The transfer creation timestamp
	CreateTime *time.Time `json:"create_time,omitempty"`
	// The delivering party information
	Deliverer *RejectTransferResponseDeliverer `json:"deliverer,omitempty"`
	// The direction of the transfer
	Direction *RejectTransferResponseDirection `json:"direction,omitempty"`
	// The service generated name of the transfer. Format: correspondents/{correspondent_id}/accounts/{account_id}/transfers/{transfer_id}
	Name *string `json:"name,omitempty"`
	// The NSCC transfer status
	NsccStatus *RejectTransferResponseNsccStatus `json:"nscc_status,omitempty"`
	// An associated NSCC transfer identifier, if applicable
	OriginalControlNumber *string `json:"original_control_number,omitempty"`
	// The receiving party information
	Receiver *RejectTransferResponseReceiver `json:"receiver,omitempty"`
	// The reject code
	RejectCode *RejectTransferResponseRejectCode `json:"reject_code,omitempty"`
	// The transfer state
	State *RejectTransferResponseState `json:"state,omitempty"`
	// A reason for the state if applicable
	StateReason *string `json:"state_reason,omitempty"`
	// The type of transfer
	TransferType *RejectTransferResponseTransferType `json:"transfer_type,omitempty"`
}

func (r RejectTransferResponseTransfer) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RejectTransferResponseTransfer) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RejectTransferResponseTransfer) GetAcatControlNumber() *string {
	if o == nil {
		return nil
	}
	return o.AcatControlNumber
}

func (o *RejectTransferResponseTransfer) GetAssets() []AcatsAsset {
	if o == nil {
		return nil
	}
	return o.Assets
}

func (o *RejectTransferResponseTransfer) GetComment() *string {
	if o == nil {
		return nil
	}
	return o.Comment
}

func (o *RejectTransferResponseTransfer) GetCreateTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreateTime
}

func (o *RejectTransferResponseTransfer) GetDeliverer() *RejectTransferResponseDeliverer {
	if o == nil {
		return nil
	}
	return o.Deliverer
}

func (o *RejectTransferResponseTransfer) GetDirection() *RejectTransferResponseDirection {
	if o == nil {
		return nil
	}
	return o.Direction
}

func (o *RejectTransferResponseTransfer) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *RejectTransferResponseTransfer) GetNsccStatus() *RejectTransferResponseNsccStatus {
	if o == nil {
		return nil
	}
	return o.NsccStatus
}

func (o *RejectTransferResponseTransfer) GetOriginalControlNumber() *string {
	if o == nil {
		return nil
	}
	return o.OriginalControlNumber
}

func (o *RejectTransferResponseTransfer) GetReceiver() *RejectTransferResponseReceiver {
	if o == nil {
		return nil
	}
	return o.Receiver
}

func (o *RejectTransferResponseTransfer) GetRejectCode() *RejectTransferResponseRejectCode {
	if o == nil {
		return nil
	}
	return o.RejectCode
}

func (o *RejectTransferResponseTransfer) GetState() *RejectTransferResponseState {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *RejectTransferResponseTransfer) GetStateReason() *string {
	if o == nil {
		return nil
	}
	return o.StateReason
}

func (o *RejectTransferResponseTransfer) GetTransferType() *RejectTransferResponseTransferType {
	if o == nil {
		return nil
	}
	return o.TransferType
}

// RejectTransferResponse - Response from rejecting internal Ascend transfers. If this is the first side (delivering/receiving) of an internal transfer that is being rejected, the contra side would be implicitly rejected at the same time.
type RejectTransferResponse struct {
	// The rejected transfer's resource
	Transfer *RejectTransferResponseTransfer `json:"transfer,omitempty"`
}

func (o *RejectTransferResponse) GetTransfer() *RejectTransferResponseTransfer {
	if o == nil {
		return nil
	}
	return o.Transfer
}
