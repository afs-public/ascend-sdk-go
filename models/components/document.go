// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// DocumentDocumentType - Describes the contents of a document and how it is used
type DocumentDocumentType string

const (
	DocumentDocumentTypeAccountDocumentTypeUnspecified            DocumentDocumentType = "ACCOUNT_DOCUMENT_TYPE_UNSPECIFIED"
	DocumentDocumentTypeCertificateOfAppointment                  DocumentDocumentType = "CERTIFICATE_OF_APPOINTMENT"
	DocumentDocumentTypeFdicSweepProgramAgreement                 DocumentDocumentType = "FDIC_SWEEP_PROGRAM_AGREEMENT"
	DocumentDocumentTypeFpslMasterServicesLoanAgreement           DocumentDocumentType = "FPSL_MASTER_SERVICES_LOAN_AGREEMENT"
	DocumentDocumentTypeTransferOnDeathBeneficiaryDesignation     DocumentDocumentType = "TRANSFER_ON_DEATH_BENEFICIARY_DESIGNATION"
	DocumentDocumentTypeChangeOfAddress                           DocumentDocumentType = "CHANGE_OF_ADDRESS"
	DocumentDocumentTypeNewAccountForm                            DocumentDocumentType = "NEW_ACCOUNT_FORM"
	DocumentDocumentTypeLetter3210                                DocumentDocumentType = "LETTER_3210"
	DocumentDocumentTypeIraApplForm                               DocumentDocumentType = "IRA_APPL_FORM"
	DocumentDocumentTypeRiaIraApplForm                            DocumentDocumentType = "RIA_IRA_APPL_FORM"
	DocumentDocumentTypeIraDepositForm                            DocumentDocumentType = "IRA_DEPOSIT_FORM"
	DocumentDocumentTypeRiaIraDepositForm                         DocumentDocumentType = "RIA_IRA_DEPOSIT_FORM"
	DocumentDocumentTypeIraDistForm                               DocumentDocumentType = "IRA_DIST_FORM"
	DocumentDocumentTypeRiaIraDistForm                            DocumentDocumentType = "RIA_IRA_DIST_FORM"
	DocumentDocumentTypeRothApplForm                              DocumentDocumentType = "ROTH_APPL_FORM"
	DocumentDocumentTypeRiaRothApplForm                           DocumentDocumentType = "RIA_ROTH_APPL_FORM"
	DocumentDocumentTypeRothDistForm                              DocumentDocumentType = "ROTH_DIST_FORM"
	DocumentDocumentTypeRiaRothDistForm                           DocumentDocumentType = "RIA_ROTH_DIST_FORM"
	DocumentDocumentTypeSimpleContTransm                          DocumentDocumentType = "SIMPLE_CONT_TRANSM"
	DocumentDocumentTypeEsaApplForm                               DocumentDocumentType = "ESA_APPL_FORM"
	DocumentDocumentTypeEsaWthdrStatement                         DocumentDocumentType = "ESA_WTHDR_STATEMENT"
	DocumentDocumentTypeDirConvForm                               DocumentDocumentType = "DIR_CONV_FORM"
	DocumentDocumentTypeMrgnOptaAgreement                         DocumentDocumentType = "MRGN_OPTA_AGREEMENT"
	DocumentDocumentTypeIraBeneForm                               DocumentDocumentType = "IRA_BENE_FORM"
	DocumentDocumentTypeIraJrnlForm                               DocumentDocumentType = "IRA_JRNL_FORM"
	DocumentDocumentTypeSepEmplPlanDoc                            DocumentDocumentType = "SEP_EMPL_PLAN_DOC"
	DocumentDocumentTypeSimpleAdoptAgreement                      DocumentDocumentType = "SIMPLE_ADOPT_AGREEMENT"
	DocumentDocumentTypeSimpleApplForm                            DocumentDocumentType = "SIMPLE_APPL_FORM"
	DocumentDocumentTypeDeathCertification                        DocumentDocumentType = "DEATH_CERTIFICATION"
	DocumentDocumentTypeAchAgreement                              DocumentDocumentType = "ACH_AGREEMENT"
	DocumentDocumentTypeApexSelectApplication                     DocumentDocumentType = "APEX_SELECT_APPLICATION"
	DocumentDocumentTypeAsaDirectDeposit                          DocumentDocumentType = "ASA_DIRECT_DEPOSIT"
	DocumentDocumentTypeBankingMisc                               DocumentDocumentType = "BANKING_MISC"
	DocumentDocumentTypeAccTransferForm                           DocumentDocumentType = "ACC_TRANSFER_FORM"
	DocumentDocumentTypeAddressVerificationNotice                 DocumentDocumentType = "ADDRESS_VERIFICATION_NOTICE"
	DocumentDocumentTypeAffidavitOfDomicile                       DocumentDocumentType = "AFFIDAVIT_OF_DOMICILE"
	DocumentDocumentTypeApexSimpleDirectDeposit                   DocumentDocumentType = "APEX_SIMPLE_DIRECT_DEPOSIT"
	DocumentDocumentTypeTransferForm                              DocumentDocumentType = "TRANSFER_FORM"
	DocumentDocumentTypeJournalRequestForm                        DocumentDocumentType = "JOURNAL_REQUEST_FORM"
	DocumentDocumentTypeCheck                                     DocumentDocumentType = "CHECK"
	DocumentDocumentTypeCheckRequestForm                          DocumentDocumentType = "CHECK_REQUEST_FORM"
	DocumentDocumentTypeCorpAgreementCash                         DocumentDocumentType = "CORP_AGREEMENT_CASH"
	DocumentDocumentTypeCorpAgreementMarginsOptions               DocumentDocumentType = "CORP_AGREEMENT_MARGINS_OPTIONS"
	DocumentDocumentTypeCorpResolution                            DocumentDocumentType = "CORP_RESOLUTION"
	DocumentDocumentTypeCourtDocument                             DocumentDocumentType = "COURT_DOCUMENT"
	DocumentDocumentTypeCourtOrder                                DocumentDocumentType = "COURT_ORDER"
	DocumentDocumentTypeDepositSecuritiesRequestForm              DocumentDocumentType = "DEPOSIT_SECURITIES_REQUEST_FORM"
	DocumentDocumentTypeDigitalSignature                          DocumentDocumentType = "DIGITAL_SIGNATURE"
	DocumentDocumentTypeDirectConversionRequest                   DocumentDocumentType = "DIRECT_CONVERSION_REQUEST"
	DocumentDocumentTypeDistributionForm                          DocumentDocumentType = "DISTRIBUTION_FORM"
	DocumentDocumentTypeDocumentIrs                               DocumentDocumentType = "DOCUMENT_IRS"
	DocumentDocumentTypeDomesticWire                              DocumentDocumentType = "DOMESTIC_WIRE"
	DocumentDocumentTypeDwacRequestForm                           DocumentDocumentType = "DWAC_REQUEST_FORM"
	DocumentDocumentTypeDwre                                      DocumentDocumentType = "DWRE"
	DocumentDocumentTypeEntityDueDiligenceQuestionnaire           DocumentDocumentType = "ENTITY_DUE_DILIGENCE_QUESTIONNAIRE"
	DocumentDocumentTypeEntityUpdateForm                          DocumentDocumentType = "ENTITY_UPDATE_FORM"
	DocumentDocumentTypeEscheatForm                               DocumentDocumentType = "ESCHEAT_FORM"
	DocumentDocumentTypeEscheatmentDueDiligenceLetter             DocumentDocumentType = "ESCHEATMENT_DUE_DILIGENCE_LETTER"
	DocumentDocumentTypeESignatureMargin                          DocumentDocumentType = "E_SIGNATURE_MARGIN"
	DocumentDocumentTypeESignature                                DocumentDocumentType = "E_SIGNATURE"
	DocumentDocumentTypeESignatureOption                          DocumentDocumentType = "E_SIGNATURE_OPTION"
	DocumentDocumentTypeForeignAccountDueDiligenceQuestionnaire   DocumentDocumentType = "FOREIGN_ACCOUNT_DUE_DILIGENCE_QUESTIONNAIRE"
	DocumentDocumentTypeForeignBankCertificationDisclosure        DocumentDocumentType = "FOREIGN_BANK_CERTIFICATION_DISCLOSURE"
	DocumentDocumentTypeForeignEntityDeclarationForm              DocumentDocumentType = "FOREIGN_ENTITY_DECLARATION_FORM"
	DocumentDocumentTypeForeignFinInstDueDiligenceQuestionnaire   DocumentDocumentType = "FOREIGN_FIN_INST_DUE_DILIGENCE_QUESTIONNAIRE"
	DocumentDocumentTypeForm144                                   DocumentDocumentType = "FORM_144"
	DocumentDocumentTypeFreeDeliveryForm                          DocumentDocumentType = "FREE_DELIVERY_FORM"
	DocumentDocumentTypeFullTradingAuthorization                  DocumentDocumentType = "FULL_TRADING_AUTHORIZATION"
	DocumentDocumentTypeInternationalWireRequestForm              DocumentDocumentType = "INTERNATIONAL_WIRE_REQUEST_FORM"
	DocumentDocumentTypeIraLimitedMargin                          DocumentDocumentType = "IRA_LIMITED_MARGIN"
	DocumentDocumentTypeIrrevocableStockBondPower                 DocumentDocumentType = "IRREVOCABLE_STOCK_BOND_POWER"
	DocumentDocumentTypeJointAccAgreementEntirety                 DocumentDocumentType = "JOINT_ACC_AGREEMENT_ENTIRETY"
	DocumentDocumentTypeJointAccAgreementRightsOfSurvivorship     DocumentDocumentType = "JOINT_ACC_AGREEMENT_RIGHTS_OF_SURVIVORSHIP"
	DocumentDocumentTypeJointAccAgreementCommunityProperty        DocumentDocumentType = "JOINT_ACC_AGREEMENT_COMMUNITY_PROPERTY"
	DocumentDocumentTypeJointAccAgreementTenantsInCommon          DocumentDocumentType = "JOINT_ACC_AGREEMENT_TENANTS_IN_COMMON"
	DocumentDocumentTypeJointTefraW8                              DocumentDocumentType = "JOINT_TEFRA_W8"
	DocumentDocumentTypeLegalOpinion                              DocumentDocumentType = "LEGAL_OPINION"
	DocumentDocumentTypeLetterOfAuthority                         DocumentDocumentType = "LETTER_OF_AUTHORITY"
	DocumentDocumentTypeLettersOfTestamentaryCertAppointment      DocumentDocumentType = "LETTERS_OF_TESTAMENTARY_CERT_APPOINTMENT"
	DocumentDocumentTypeLimitedLiabilityCompanyAgreement          DocumentDocumentType = "LIMITED_LIABILITY_COMPANY_AGREEMENT"
	DocumentDocumentTypeLimitedPurposeMargin                      DocumentDocumentType = "LIMITED_PURPOSE_MARGIN"
	DocumentDocumentTypeMailAuthorization                         DocumentDocumentType = "MAIL_AUTHORIZATION"
	DocumentDocumentTypeMarginAgreement                           DocumentDocumentType = "MARGIN_AGREEMENT"
	DocumentDocumentTypeMsla                                      DocumentDocumentType = "MSLA"
	DocumentDocumentTypeMasterSubaccAddAccRequest                 DocumentDocumentType = "MASTER_SUBACC_ADD_ACC_REQUEST"
	DocumentDocumentTypeMasterSubaccAddAccRequestWCorrAttestation DocumentDocumentType = "MASTER_SUBACC_ADD_ACC_REQUEST_W_CORR_ATTESTATION"
	DocumentDocumentTypeMiscGeneral                               DocumentDocumentType = "MISC_GENERAL"
	DocumentDocumentTypeNewAccountApplicationEntity               DocumentDocumentType = "NEW_ACCOUNT_APPLICATION_ENTITY"
	DocumentDocumentTypeNonCorporateAssociation                   DocumentDocumentType = "NON_CORPORATE_ASSOCIATION"
	DocumentDocumentTypePartnershipAgreement                      DocumentDocumentType = "PARTNERSHIP_AGREEMENT"
	DocumentDocumentTypePatternDayTraderForm                      DocumentDocumentType = "PATTERN_DAY_TRADER_FORM"
	DocumentDocumentTypePowerOfAttorneyDurable                    DocumentDocumentType = "POWER_OF_ATTORNEY_DURABLE"
	DocumentDocumentTypePowerOfAttorneyGeneral                    DocumentDocumentType = "POWER_OF_ATTORNEY_GENERAL"
	DocumentDocumentTypeRegisteredAdvisoryAuthorityForm           DocumentDocumentType = "REGISTERED_ADVISORY_AUTHORITY_FORM"
	DocumentDocumentTypeRmd                                       DocumentDocumentType = "RMD"
	DocumentDocumentTypeRiskDisclosure                            DocumentDocumentType = "RISK_DISCLOSURE"
	DocumentDocumentTypeRule145SellersLetter                      DocumentDocumentType = "RULE_145_SELLERS_LETTER"
	DocumentDocumentTypeRule701Letter                             DocumentDocumentType = "RULE_701_LETTER"
	DocumentDocumentTypeSameNameLoa                               DocumentDocumentType = "SAME_NAME_LOA"
	DocumentDocumentTypeSecuritiesBasedLendingAgreement           DocumentDocumentType = "SECURITIES_BASED_LENDING_AGREEMENT"
	DocumentDocumentTypeSepContributionAgreement                  DocumentDocumentType = "SEP_CONTRIBUTION_AGREEMENT"
	DocumentDocumentTypeSepEmployerPlanDocumentation              DocumentDocumentType = "SEP_EMPLOYER_PLAN_DOCUMENTATION"
	DocumentDocumentTypeSignatureCard                             DocumentDocumentType = "SIGNATURE_CARD"
	DocumentDocumentTypeSimpleForm5304                            DocumentDocumentType = "SIMPLE_FORM_5304"
	DocumentDocumentTypeSimplifiedEmployeePension                 DocumentDocumentType = "SIMPLIFIED_EMPLOYEE_PENSION"
	DocumentDocumentTypeCertificateSoleProprietorship             DocumentDocumentType = "CERTIFICATE_SOLE_PROPRIETORSHIP"
	DocumentDocumentTypeTransferOnDeath                           DocumentDocumentType = "TRANSFER_ON_DEATH"
	DocumentDocumentTypeTrustAgreement                            DocumentDocumentType = "TRUST_AGREEMENT"
	DocumentDocumentTypeTaxW8Ben                                  DocumentDocumentType = "TAX_W8_BEN"
	DocumentDocumentTypeTaxW8BenJointAccountHolder                DocumentDocumentType = "TAX_W8_BEN_JOINT_ACCOUNT_HOLDER"
	DocumentDocumentTypeTaxW8Eci                                  DocumentDocumentType = "TAX_W8_ECI"
	DocumentDocumentTypeTaxW8Exp                                  DocumentDocumentType = "TAX_W8_EXP"
	DocumentDocumentTypeTaxW8Imy                                  DocumentDocumentType = "TAX_W8_IMY"
	DocumentDocumentTypeTaxW9                                     DocumentDocumentType = "TAX_W9"
	DocumentDocumentTypeWillCopy                                  DocumentDocumentType = "WILL_COPY"
	DocumentDocumentTypeWireRequestForm                           DocumentDocumentType = "WIRE_REQUEST_FORM"
	DocumentDocumentTypeWorthlessSecurities                       DocumentDocumentType = "WORTHLESS_SECURITIES"
	DocumentDocumentTypeChangeOfAddressRequest                    DocumentDocumentType = "CHANGE_OF_ADDRESS_REQUEST"
	DocumentDocumentTypeOptionsAgreement                          DocumentDocumentType = "OPTIONS_AGREEMENT"
)

func (e DocumentDocumentType) ToPointer() *DocumentDocumentType {
	return &e
}
func (e *DocumentDocumentType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT_DOCUMENT_TYPE_UNSPECIFIED":
		fallthrough
	case "CERTIFICATE_OF_APPOINTMENT":
		fallthrough
	case "FDIC_SWEEP_PROGRAM_AGREEMENT":
		fallthrough
	case "FPSL_MASTER_SERVICES_LOAN_AGREEMENT":
		fallthrough
	case "TRANSFER_ON_DEATH_BENEFICIARY_DESIGNATION":
		fallthrough
	case "CHANGE_OF_ADDRESS":
		fallthrough
	case "NEW_ACCOUNT_FORM":
		fallthrough
	case "LETTER_3210":
		fallthrough
	case "IRA_APPL_FORM":
		fallthrough
	case "RIA_IRA_APPL_FORM":
		fallthrough
	case "IRA_DEPOSIT_FORM":
		fallthrough
	case "RIA_IRA_DEPOSIT_FORM":
		fallthrough
	case "IRA_DIST_FORM":
		fallthrough
	case "RIA_IRA_DIST_FORM":
		fallthrough
	case "ROTH_APPL_FORM":
		fallthrough
	case "RIA_ROTH_APPL_FORM":
		fallthrough
	case "ROTH_DIST_FORM":
		fallthrough
	case "RIA_ROTH_DIST_FORM":
		fallthrough
	case "SIMPLE_CONT_TRANSM":
		fallthrough
	case "ESA_APPL_FORM":
		fallthrough
	case "ESA_WTHDR_STATEMENT":
		fallthrough
	case "DIR_CONV_FORM":
		fallthrough
	case "MRGN_OPTA_AGREEMENT":
		fallthrough
	case "IRA_BENE_FORM":
		fallthrough
	case "IRA_JRNL_FORM":
		fallthrough
	case "SEP_EMPL_PLAN_DOC":
		fallthrough
	case "SIMPLE_ADOPT_AGREEMENT":
		fallthrough
	case "SIMPLE_APPL_FORM":
		fallthrough
	case "DEATH_CERTIFICATION":
		fallthrough
	case "ACH_AGREEMENT":
		fallthrough
	case "APEX_SELECT_APPLICATION":
		fallthrough
	case "ASA_DIRECT_DEPOSIT":
		fallthrough
	case "BANKING_MISC":
		fallthrough
	case "ACC_TRANSFER_FORM":
		fallthrough
	case "ADDRESS_VERIFICATION_NOTICE":
		fallthrough
	case "AFFIDAVIT_OF_DOMICILE":
		fallthrough
	case "APEX_SIMPLE_DIRECT_DEPOSIT":
		fallthrough
	case "TRANSFER_FORM":
		fallthrough
	case "JOURNAL_REQUEST_FORM":
		fallthrough
	case "CHECK":
		fallthrough
	case "CHECK_REQUEST_FORM":
		fallthrough
	case "CORP_AGREEMENT_CASH":
		fallthrough
	case "CORP_AGREEMENT_MARGINS_OPTIONS":
		fallthrough
	case "CORP_RESOLUTION":
		fallthrough
	case "COURT_DOCUMENT":
		fallthrough
	case "COURT_ORDER":
		fallthrough
	case "DEPOSIT_SECURITIES_REQUEST_FORM":
		fallthrough
	case "DIGITAL_SIGNATURE":
		fallthrough
	case "DIRECT_CONVERSION_REQUEST":
		fallthrough
	case "DISTRIBUTION_FORM":
		fallthrough
	case "DOCUMENT_IRS":
		fallthrough
	case "DOMESTIC_WIRE":
		fallthrough
	case "DWAC_REQUEST_FORM":
		fallthrough
	case "DWRE":
		fallthrough
	case "ENTITY_DUE_DILIGENCE_QUESTIONNAIRE":
		fallthrough
	case "ENTITY_UPDATE_FORM":
		fallthrough
	case "ESCHEAT_FORM":
		fallthrough
	case "ESCHEATMENT_DUE_DILIGENCE_LETTER":
		fallthrough
	case "E_SIGNATURE_MARGIN":
		fallthrough
	case "E_SIGNATURE":
		fallthrough
	case "E_SIGNATURE_OPTION":
		fallthrough
	case "FOREIGN_ACCOUNT_DUE_DILIGENCE_QUESTIONNAIRE":
		fallthrough
	case "FOREIGN_BANK_CERTIFICATION_DISCLOSURE":
		fallthrough
	case "FOREIGN_ENTITY_DECLARATION_FORM":
		fallthrough
	case "FOREIGN_FIN_INST_DUE_DILIGENCE_QUESTIONNAIRE":
		fallthrough
	case "FORM_144":
		fallthrough
	case "FREE_DELIVERY_FORM":
		fallthrough
	case "FULL_TRADING_AUTHORIZATION":
		fallthrough
	case "INTERNATIONAL_WIRE_REQUEST_FORM":
		fallthrough
	case "IRA_LIMITED_MARGIN":
		fallthrough
	case "IRREVOCABLE_STOCK_BOND_POWER":
		fallthrough
	case "JOINT_ACC_AGREEMENT_ENTIRETY":
		fallthrough
	case "JOINT_ACC_AGREEMENT_RIGHTS_OF_SURVIVORSHIP":
		fallthrough
	case "JOINT_ACC_AGREEMENT_COMMUNITY_PROPERTY":
		fallthrough
	case "JOINT_ACC_AGREEMENT_TENANTS_IN_COMMON":
		fallthrough
	case "JOINT_TEFRA_W8":
		fallthrough
	case "LEGAL_OPINION":
		fallthrough
	case "LETTER_OF_AUTHORITY":
		fallthrough
	case "LETTERS_OF_TESTAMENTARY_CERT_APPOINTMENT":
		fallthrough
	case "LIMITED_LIABILITY_COMPANY_AGREEMENT":
		fallthrough
	case "LIMITED_PURPOSE_MARGIN":
		fallthrough
	case "MAIL_AUTHORIZATION":
		fallthrough
	case "MARGIN_AGREEMENT":
		fallthrough
	case "MSLA":
		fallthrough
	case "MASTER_SUBACC_ADD_ACC_REQUEST":
		fallthrough
	case "MASTER_SUBACC_ADD_ACC_REQUEST_W_CORR_ATTESTATION":
		fallthrough
	case "MISC_GENERAL":
		fallthrough
	case "NEW_ACCOUNT_APPLICATION_ENTITY":
		fallthrough
	case "NON_CORPORATE_ASSOCIATION":
		fallthrough
	case "PARTNERSHIP_AGREEMENT":
		fallthrough
	case "PATTERN_DAY_TRADER_FORM":
		fallthrough
	case "POWER_OF_ATTORNEY_DURABLE":
		fallthrough
	case "POWER_OF_ATTORNEY_GENERAL":
		fallthrough
	case "REGISTERED_ADVISORY_AUTHORITY_FORM":
		fallthrough
	case "RMD":
		fallthrough
	case "RISK_DISCLOSURE":
		fallthrough
	case "RULE_145_SELLERS_LETTER":
		fallthrough
	case "RULE_701_LETTER":
		fallthrough
	case "SAME_NAME_LOA":
		fallthrough
	case "SECURITIES_BASED_LENDING_AGREEMENT":
		fallthrough
	case "SEP_CONTRIBUTION_AGREEMENT":
		fallthrough
	case "SEP_EMPLOYER_PLAN_DOCUMENTATION":
		fallthrough
	case "SIGNATURE_CARD":
		fallthrough
	case "SIMPLE_FORM_5304":
		fallthrough
	case "SIMPLIFIED_EMPLOYEE_PENSION":
		fallthrough
	case "CERTIFICATE_SOLE_PROPRIETORSHIP":
		fallthrough
	case "TRANSFER_ON_DEATH":
		fallthrough
	case "TRUST_AGREEMENT":
		fallthrough
	case "TAX_W8_BEN":
		fallthrough
	case "TAX_W8_BEN_JOINT_ACCOUNT_HOLDER":
		fallthrough
	case "TAX_W8_ECI":
		fallthrough
	case "TAX_W8_EXP":
		fallthrough
	case "TAX_W8_IMY":
		fallthrough
	case "TAX_W9":
		fallthrough
	case "WILL_COPY":
		fallthrough
	case "WIRE_REQUEST_FORM":
		fallthrough
	case "WORTHLESS_SECURITIES":
		fallthrough
	case "CHANGE_OF_ADDRESS_REQUEST":
		fallthrough
	case "OPTIONS_AGREEMENT":
		*e = DocumentDocumentType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DocumentDocumentType: %v", v)
	}
}

// UploadedDate - Date that the document was uploaded
type UploadedDate struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day *int `json:"day,omitempty"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month *int `json:"month,omitempty"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year *int `json:"year,omitempty"`
}

func (o *UploadedDate) GetDay() *int {
	if o == nil {
		return nil
	}
	return o.Day
}

func (o *UploadedDate) GetMonth() *int {
	if o == nil {
		return nil
	}
	return o.Month
}

func (o *UploadedDate) GetYear() *int {
	if o == nil {
		return nil
	}
	return o.Year
}

// AccountDocument - Fields specific to an account document
type AccountDocument struct {
	// Identifies the account relevant to the document
	AccountID *string `json:"account_id,omitempty"`
	// Describes the contents of a document and how it is used
	DocumentType *DocumentDocumentType `json:"document_type,omitempty"`
	// Date that the document was uploaded
	UploadedDate *UploadedDate `json:"uploaded_date,omitempty"`
}

func (o *AccountDocument) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *AccountDocument) GetDocumentType() *DocumentDocumentType {
	if o == nil {
		return nil
	}
	return o.DocumentType
}

func (o *AccountDocument) GetUploadedDate() *UploadedDate {
	if o == nil {
		return nil
	}
	return o.UploadedDate
}

// DocumentIDDocumentDocumentType - Describes the contents of a document and how it is used
type DocumentIDDocumentDocumentType string

const (
	DocumentIDDocumentDocumentTypeIDDocumentTypeUnspecified          DocumentIDDocumentDocumentType = "ID_DOCUMENT_TYPE_UNSPECIFIED"
	DocumentIDDocumentDocumentTypeBirthCertificate                   DocumentIDDocumentDocumentType = "BIRTH_CERTIFICATE"
	DocumentIDDocumentDocumentTypeCustomerIdentificationProcess      DocumentIDDocumentDocumentType = "CUSTOMER_IDENTIFICATION_PROCESS"
	DocumentIDDocumentDocumentTypeDeathCertificate                   DocumentIDDocumentDocumentType = "DEATH_CERTIFICATE"
	DocumentIDDocumentDocumentTypeDrivingLicense                     DocumentIDDocumentDocumentType = "DRIVING_LICENSE"
	DocumentIDDocumentDocumentTypeEmployerConsentForm407Letter       DocumentIDDocumentDocumentType = "EMPLOYER_CONSENT_FORM_407_LETTER"
	DocumentIDDocumentDocumentTypeMarriageCertificate                DocumentIDDocumentDocumentType = "MARRIAGE_CERTIFICATE"
	DocumentIDDocumentDocumentTypePassport                           DocumentIDDocumentDocumentType = "PASSPORT"
	DocumentIDDocumentDocumentTypeProofOfTaxID                       DocumentIDDocumentDocumentType = "PROOF_OF_TAX_ID"
	DocumentIDDocumentDocumentTypeSocialSecurityDocument             DocumentIDDocumentDocumentType = "SOCIAL_SECURITY_DOCUMENT"
	DocumentIDDocumentDocumentTypeThirdPartyCipResults               DocumentIDDocumentDocumentType = "THIRD_PARTY_CIP_RESULTS"
	DocumentIDDocumentDocumentTypeStateIDCard                        DocumentIDDocumentDocumentType = "STATE_ID_CARD"
	DocumentIDDocumentDocumentTypeNationalIDCard                     DocumentIDDocumentDocumentType = "NATIONAL_ID_CARD"
	DocumentIDDocumentDocumentTypePermanentResidentVisa              DocumentIDDocumentDocumentType = "PERMANENT_RESIDENT_VISA"
	DocumentIDDocumentDocumentTypeIrisItinLetter                     DocumentIDDocumentDocumentType = "IRIS_ITIN_LETTER"
	DocumentIDDocumentDocumentTypeUtilityBill                        DocumentIDDocumentDocumentType = "UTILITY_BILL"
	DocumentIDDocumentDocumentTypeMilitaryIDCard                     DocumentIDDocumentDocumentType = "MILITARY_ID_CARD"
	DocumentIDDocumentDocumentTypeMortgageStatement                  DocumentIDDocumentDocumentType = "MORTGAGE_STATEMENT"
	DocumentIDDocumentDocumentTypeLeaseAgreement                     DocumentIDDocumentDocumentType = "LEASE_AGREEMENT"
	DocumentIDDocumentDocumentTypeExecutorCertification              DocumentIDDocumentDocumentType = "EXECUTOR_CERTIFICATION"
	DocumentIDDocumentDocumentTypeTrusteeCertification               DocumentIDDocumentDocumentType = "TRUSTEE_CERTIFICATION"
	DocumentIDDocumentDocumentTypeSelfie                             DocumentIDDocumentDocumentType = "SELFIE"
	DocumentIDDocumentDocumentTypeArticlesOfOrganisation             DocumentIDDocumentDocumentType = "ARTICLES_OF_ORGANISATION"
	DocumentIDDocumentDocumentTypeCertOfSoleOfficer                  DocumentIDDocumentDocumentType = "CERT_OF_SOLE_OFFICER"
	DocumentIDDocumentDocumentTypeCertificationCorrespondentAccounts DocumentIDDocumentDocumentType = "CERTIFICATION_CORRESPONDENT_ACCOUNTS"
	DocumentIDDocumentDocumentTypeCertificationForeignBanks          DocumentIDDocumentDocumentType = "CERTIFICATION_FOREIGN_BANKS"
	DocumentIDDocumentDocumentTypeCharterArticlesOfIncorporation     DocumentIDDocumentDocumentType = "CHARTER_ARTICLES_OF_INCORPORATION"
	DocumentIDDocumentDocumentTypeDivorceDecree                      DocumentIDDocumentDocumentType = "DIVORCE_DECREE"
	DocumentIDDocumentDocumentTypeProofOfResidence                   DocumentIDDocumentDocumentType = "PROOF_OF_RESIDENCE"
	DocumentIDDocumentDocumentTypeBoReportingExemptionProof          DocumentIDDocumentDocumentType = "BO_REPORTING_EXEMPTION_PROOF"
)

func (e DocumentIDDocumentDocumentType) ToPointer() *DocumentIDDocumentDocumentType {
	return &e
}
func (e *DocumentIDDocumentDocumentType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ID_DOCUMENT_TYPE_UNSPECIFIED":
		fallthrough
	case "BIRTH_CERTIFICATE":
		fallthrough
	case "CUSTOMER_IDENTIFICATION_PROCESS":
		fallthrough
	case "DEATH_CERTIFICATE":
		fallthrough
	case "DRIVING_LICENSE":
		fallthrough
	case "EMPLOYER_CONSENT_FORM_407_LETTER":
		fallthrough
	case "MARRIAGE_CERTIFICATE":
		fallthrough
	case "PASSPORT":
		fallthrough
	case "PROOF_OF_TAX_ID":
		fallthrough
	case "SOCIAL_SECURITY_DOCUMENT":
		fallthrough
	case "THIRD_PARTY_CIP_RESULTS":
		fallthrough
	case "STATE_ID_CARD":
		fallthrough
	case "NATIONAL_ID_CARD":
		fallthrough
	case "PERMANENT_RESIDENT_VISA":
		fallthrough
	case "IRIS_ITIN_LETTER":
		fallthrough
	case "UTILITY_BILL":
		fallthrough
	case "MILITARY_ID_CARD":
		fallthrough
	case "MORTGAGE_STATEMENT":
		fallthrough
	case "LEASE_AGREEMENT":
		fallthrough
	case "EXECUTOR_CERTIFICATION":
		fallthrough
	case "TRUSTEE_CERTIFICATION":
		fallthrough
	case "SELFIE":
		fallthrough
	case "ARTICLES_OF_ORGANISATION":
		fallthrough
	case "CERT_OF_SOLE_OFFICER":
		fallthrough
	case "CERTIFICATION_CORRESPONDENT_ACCOUNTS":
		fallthrough
	case "CERTIFICATION_FOREIGN_BANKS":
		fallthrough
	case "CHARTER_ARTICLES_OF_INCORPORATION":
		fallthrough
	case "DIVORCE_DECREE":
		fallthrough
	case "PROOF_OF_RESIDENCE":
		fallthrough
	case "BO_REPORTING_EXEMPTION_PROOF":
		*e = DocumentIDDocumentDocumentType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DocumentIDDocumentDocumentType: %v", v)
	}
}

// DocumentUploadedDate - Date that the document was uploaded
type DocumentUploadedDate struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day *int `json:"day,omitempty"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month *int `json:"month,omitempty"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year *int `json:"year,omitempty"`
}

func (o *DocumentUploadedDate) GetDay() *int {
	if o == nil {
		return nil
	}
	return o.Day
}

func (o *DocumentUploadedDate) GetMonth() *int {
	if o == nil {
		return nil
	}
	return o.Month
}

func (o *DocumentUploadedDate) GetYear() *int {
	if o == nil {
		return nil
	}
	return o.Year
}

// IDDocument - Fields specific to an identity document
type IDDocument struct {
	// Describes the contents of a document and how it is used
	DocumentType *DocumentIDDocumentDocumentType `json:"document_type,omitempty"`
	// Identifies the legal natural person relevant to the document
	LegalNaturalPersonID *string `json:"legal_natural_person_id,omitempty"`
	// Date that the document was uploaded
	UploadedDate *DocumentUploadedDate `json:"uploaded_date,omitempty"`
}

func (o *IDDocument) GetDocumentType() *DocumentIDDocumentDocumentType {
	if o == nil {
		return nil
	}
	return o.DocumentType
}

func (o *IDDocument) GetLegalNaturalPersonID() *string {
	if o == nil {
		return nil
	}
	return o.LegalNaturalPersonID
}

func (o *IDDocument) GetUploadedDate() *DocumentUploadedDate {
	if o == nil {
		return nil
	}
	return o.UploadedDate
}

// DocumentInvestorDocumentDocumentType - Describes the contents of a document and how it is used
type DocumentInvestorDocumentDocumentType string

const (
	DocumentInvestorDocumentDocumentTypeInvestorDocumentTypeUnspecified DocumentInvestorDocumentDocumentType = "INVESTOR_DOCUMENT_TYPE_UNSPECIFIED"
	DocumentInvestorDocumentDocumentTypeConfirmDaily                    DocumentInvestorDocumentDocumentType = "CONFIRM_DAILY"
	DocumentInvestorDocumentDocumentTypeConfirmMonthly                  DocumentInvestorDocumentDocumentType = "CONFIRM_MONTHLY"
	DocumentInvestorDocumentDocumentTypeFormConsolidated1099            DocumentInvestorDocumentDocumentType = "FORM_CONSOLIDATED_1099"
	DocumentInvestorDocumentDocumentTypeForm1042S                       DocumentInvestorDocumentDocumentType = "FORM_1042_S"
	DocumentInvestorDocumentDocumentTypeForm1099Q                       DocumentInvestorDocumentDocumentType = "FORM_1099_Q"
	DocumentInvestorDocumentDocumentTypeForm1099R                       DocumentInvestorDocumentDocumentType = "FORM_1099_R"
	DocumentInvestorDocumentDocumentTypeForm2439                        DocumentInvestorDocumentDocumentType = "FORM_2439"
	DocumentInvestorDocumentDocumentTypeForm4806A                       DocumentInvestorDocumentDocumentType = "FORM_480_6A"
	DocumentInvestorDocumentDocumentTypeForm4806B                       DocumentInvestorDocumentDocumentType = "FORM_480_6B"
	DocumentInvestorDocumentDocumentTypeForm5498                        DocumentInvestorDocumentDocumentType = "FORM_5498"
	DocumentInvestorDocumentDocumentTypeStatementMonthly                DocumentInvestorDocumentDocumentType = "STATEMENT_MONTHLY"
	DocumentInvestorDocumentDocumentTypeStatementQuarterly              DocumentInvestorDocumentDocumentType = "STATEMENT_QUARTERLY"
)

func (e DocumentInvestorDocumentDocumentType) ToPointer() *DocumentInvestorDocumentDocumentType {
	return &e
}
func (e *DocumentInvestorDocumentDocumentType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INVESTOR_DOCUMENT_TYPE_UNSPECIFIED":
		fallthrough
	case "CONFIRM_DAILY":
		fallthrough
	case "CONFIRM_MONTHLY":
		fallthrough
	case "FORM_CONSOLIDATED_1099":
		fallthrough
	case "FORM_1042_S":
		fallthrough
	case "FORM_1099_Q":
		fallthrough
	case "FORM_1099_R":
		fallthrough
	case "FORM_2439":
		fallthrough
	case "FORM_480_6A":
		fallthrough
	case "FORM_480_6B":
		fallthrough
	case "FORM_5498":
		fallthrough
	case "STATEMENT_MONTHLY":
		fallthrough
	case "STATEMENT_QUARTERLY":
		*e = DocumentInvestorDocumentDocumentType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DocumentInvestorDocumentDocumentType: %v", v)
	}
}

// DocumentProcessDate - Date that the related activities were processed
type DocumentProcessDate struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day *int `json:"day,omitempty"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month *int `json:"month,omitempty"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year *int `json:"year,omitempty"`
}

func (o *DocumentProcessDate) GetDay() *int {
	if o == nil {
		return nil
	}
	return o.Day
}

func (o *DocumentProcessDate) GetMonth() *int {
	if o == nil {
		return nil
	}
	return o.Month
}

func (o *DocumentProcessDate) GetYear() *int {
	if o == nil {
		return nil
	}
	return o.Year
}

// InvestorDocument - Fields specific to an investor document
type InvestorDocument struct {
	// Identifies the account relevant to the document
	AccountID *string `json:"account_id,omitempty"`
	// Describes the contents of a document and how it is used
	DocumentType *DocumentInvestorDocumentDocumentType `json:"document_type,omitempty"`
	// Date that the related activities were processed
	ProcessDate *DocumentProcessDate `json:"process_date,omitempty"`
}

func (o *InvestorDocument) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *InvestorDocument) GetDocumentType() *DocumentInvestorDocumentDocumentType {
	if o == nil {
		return nil
	}
	return o.DocumentType
}

func (o *InvestorDocument) GetProcessDate() *DocumentProcessDate {
	if o == nil {
		return nil
	}
	return o.ProcessDate
}

// Document - Describes a document that has been uploaded to Apex storage.
type Document struct {
	// Fields specific to an account document
	AccountDocument *AccountDocument `json:"account_document,omitempty"`
	// Identifies the correspondent relevant to the document
	CorrespondentID *string `json:"correspondent_id,omitempty"`
	// Signed link used to download a document; The link expires one hour after being generated
	DownloadLink *string `json:"download_link,omitempty"`
	// Fields specific to an identity document
	IDDocument *IDDocument `json:"id_document,omitempty"`
	// Fields specific to an investor document
	InvestorDocument *InvestorDocument `json:"investor_document,omitempty"`
	// Identifier for the document
	Name *string `json:"name,omitempty"`
}

func (o *Document) GetAccountDocument() *AccountDocument {
	if o == nil {
		return nil
	}
	return o.AccountDocument
}

func (o *Document) GetCorrespondentID() *string {
	if o == nil {
		return nil
	}
	return o.CorrespondentID
}

func (o *Document) GetDownloadLink() *string {
	if o == nil {
		return nil
	}
	return o.DownloadLink
}

func (o *Document) GetIDDocument() *IDDocument {
	if o == nil {
		return nil
	}
	return o.IDDocument
}

func (o *Document) GetInvestorDocument() *InvestorDocument {
	if o == nil {
		return nil
	}
	return o.InvestorDocument
}

func (o *Document) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}
