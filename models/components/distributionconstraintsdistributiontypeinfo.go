// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// DistributionConstraintsDistributionTypeInfoType - Retirement distribution type
type DistributionConstraintsDistributionTypeInfoType string

const (
	DistributionConstraintsDistributionTypeInfoTypeTypeUnspecified                            DistributionConstraintsDistributionTypeInfoType = "TYPE_UNSPECIFIED"
	DistributionConstraintsDistributionTypeInfoTypeNormal                                     DistributionConstraintsDistributionTypeInfoType = "NORMAL"
	DistributionConstraintsDistributionTypeInfoTypeDisability                                 DistributionConstraintsDistributionTypeInfoType = "DISABILITY"
	DistributionConstraintsDistributionTypeInfoTypeSosepp                                     DistributionConstraintsDistributionTypeInfoType = "SOSEPP"
	DistributionConstraintsDistributionTypeInfoTypePremature                                  DistributionConstraintsDistributionTypeInfoType = "PREMATURE"
	DistributionConstraintsDistributionTypeInfoTypeDeath                                      DistributionConstraintsDistributionTypeInfoType = "DEATH"
	DistributionConstraintsDistributionTypeInfoTypeExcessContributionRemovalBeforeTaxDeadline DistributionConstraintsDistributionTypeInfoType = "EXCESS_CONTRIBUTION_REMOVAL_BEFORE_TAX_DEADLINE"
	DistributionConstraintsDistributionTypeInfoTypeExcessContributionRemovalAfterTaxDeadline  DistributionConstraintsDistributionTypeInfoType = "EXCESS_CONTRIBUTION_REMOVAL_AFTER_TAX_DEADLINE"
	DistributionConstraintsDistributionTypeInfoTypeRolloverToQualifiedPlan                    DistributionConstraintsDistributionTypeInfoType = "ROLLOVER_TO_QUALIFIED_PLAN"
	DistributionConstraintsDistributionTypeInfoTypeRolloverToIra                              DistributionConstraintsDistributionTypeInfoType = "ROLLOVER_TO_IRA"
	DistributionConstraintsDistributionTypeInfoTypeDistributionTransfer                       DistributionConstraintsDistributionTypeInfoType = "DISTRIBUTION_TRANSFER"
	DistributionConstraintsDistributionTypeInfoTypeRecharacterizationPriorYear                DistributionConstraintsDistributionTypeInfoType = "RECHARACTERIZATION_PRIOR_YEAR"
	DistributionConstraintsDistributionTypeInfoTypeRecharacterizationCurrentYear              DistributionConstraintsDistributionTypeInfoType = "RECHARACTERIZATION_CURRENT_YEAR"
	DistributionConstraintsDistributionTypeInfoTypeDistributionConversion                     DistributionConstraintsDistributionTypeInfoType = "DISTRIBUTION_CONVERSION"
	DistributionConstraintsDistributionTypeInfoTypeManagementFee                              DistributionConstraintsDistributionTypeInfoType = "MANAGEMENT_FEE"
	DistributionConstraintsDistributionTypeInfoTypePlanLoan401K                               DistributionConstraintsDistributionTypeInfoType = "PLAN_LOAN_401K"
	DistributionConstraintsDistributionTypeInfoTypePrematureSimpleIraLessThan2Years           DistributionConstraintsDistributionTypeInfoType = "PREMATURE_SIMPLE_IRA_LESS_THAN_2_YEARS"
	DistributionConstraintsDistributionTypeInfoTypeNormalRothIraGreaterThan5Years             DistributionConstraintsDistributionTypeInfoType = "NORMAL_ROTH_IRA_GREATER_THAN_5_YEARS"
	DistributionConstraintsDistributionTypeInfoTypeNetIncomeAttributable                      DistributionConstraintsDistributionTypeInfoType = "NET_INCOME_ATTRIBUTABLE"
	DistributionConstraintsDistributionTypeInfoTypeRevocation                                 DistributionConstraintsDistributionTypeInfoType = "REVOCATION"
	DistributionConstraintsDistributionTypeInfoTypeNonReportable                              DistributionConstraintsDistributionTypeInfoType = "NON_REPORTABLE"
)

func (e DistributionConstraintsDistributionTypeInfoType) ToPointer() *DistributionConstraintsDistributionTypeInfoType {
	return &e
}

// DistributionConstraintsDistributionTypeInfo - Retirement distribution type info
type DistributionConstraintsDistributionTypeInfo struct {
	// Whether federal withholding is enabled
	FederalWithholdingEnabled *bool `json:"federal_withholding_enabled,omitempty"`
	// Whether state withholding is enabled
	StateWithholdingEnabled *bool `json:"state_withholding_enabled,omitempty"`
	// Retirement distribution type
	Type *DistributionConstraintsDistributionTypeInfoType `json:"type,omitempty"`
}

func (o *DistributionConstraintsDistributionTypeInfo) GetFederalWithholdingEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.FederalWithholdingEnabled
}

func (o *DistributionConstraintsDistributionTypeInfo) GetStateWithholdingEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.StateWithholdingEnabled
}

func (o *DistributionConstraintsDistributionTypeInfo) GetType() *DistributionConstraintsDistributionTypeInfoType {
	if o == nil {
		return nil
	}
	return o.Type
}
