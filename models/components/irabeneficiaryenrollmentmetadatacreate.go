// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlan - Option to auto-enroll in dividend reinvestment; defaults to true
type IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlan string

const (
	IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlanAutoEnrollDividendReinvestmentUnspecified IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlan = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED"
	IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlanDividendReinvestmentEnroll                IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_ENROLL"
	IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlanDividendReinvestmentDecline               IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlan = "DIVIDEND_REINVESTMENT_DECLINE"
)

func (e IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlan) ToPointer() *IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlan {
	return &e
}
func (e *IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlan) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED":
		fallthrough
	case "DIVIDEND_REINVESTMENT_ENROLL":
		fallthrough
	case "DIVIDEND_REINVESTMENT_DECLINE":
		*e = IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlan(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlan: %v", v)
	}
}

// IRABeneficiaryEnrollmentMetadataCreateFdicCashSweep - Option to auto-enroll in FDIC cash sweep; defaults to true
type IRABeneficiaryEnrollmentMetadataCreateFdicCashSweep string

const (
	IRABeneficiaryEnrollmentMetadataCreateFdicCashSweepAutoEnrollFdicCashSweepUnspecified IRABeneficiaryEnrollmentMetadataCreateFdicCashSweep = "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED"
	IRABeneficiaryEnrollmentMetadataCreateFdicCashSweepFdicCashSweepEnroll                IRABeneficiaryEnrollmentMetadataCreateFdicCashSweep = "FDIC_CASH_SWEEP_ENROLL"
	IRABeneficiaryEnrollmentMetadataCreateFdicCashSweepFdicCashSweepDecline               IRABeneficiaryEnrollmentMetadataCreateFdicCashSweep = "FDIC_CASH_SWEEP_DECLINE"
)

func (e IRABeneficiaryEnrollmentMetadataCreateFdicCashSweep) ToPointer() *IRABeneficiaryEnrollmentMetadataCreateFdicCashSweep {
	return &e
}
func (e *IRABeneficiaryEnrollmentMetadataCreateFdicCashSweep) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AUTO_ENROLL_FDIC_CASH_SWEEP_UNSPECIFIED":
		fallthrough
	case "FDIC_CASH_SWEEP_ENROLL":
		fallthrough
	case "FDIC_CASH_SWEEP_DECLINE":
		*e = IRABeneficiaryEnrollmentMetadataCreateFdicCashSweep(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IRABeneficiaryEnrollmentMetadataCreateFdicCashSweep: %v", v)
	}
}

// IRABeneficiaryEnrollmentMetadataCreate - Enrollment metadata for beneficiary IRA accounts enrollment type
type IRABeneficiaryEnrollmentMetadataCreate struct {
	// Option to auto-enroll in dividend reinvestment; defaults to true
	DividendReinvestmentPlan *IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlan `json:"dividend_reinvestment_plan,omitempty"`
	// Option to auto-enroll in FDIC cash sweep; defaults to true
	FdicCashSweep *IRABeneficiaryEnrollmentMetadataCreateFdicCashSweep `json:"fdic_cash_sweep,omitempty"`
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following:
	//
	//  * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date
	//
	//  Related types are [google.type.TimeOfDay][google.type.TimeOfDay] and `google.protobuf.Timestamp`.
	InheritedFromOwnerBirthDate *DateCreate `json:"inherited_from_owner_birth_date,omitempty"`
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following:
	//
	//  * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date
	//
	//  Related types are [google.type.TimeOfDay][google.type.TimeOfDay] and `google.protobuf.Timestamp`.
	InheritedFromOwnerDeathDate *DateCreate `json:"inherited_from_owner_death_date,omitempty"`
	// The name of the owner from whom the account is inherited
	InheritedFromOwnerName string `json:"inherited_from_owner_name"`
	// Indicates if the customer is the spouse of the decedent
	InheritorIsDecedentsSpouse bool `json:"inheritor_is_decedents_spouse"`
}

func (o *IRABeneficiaryEnrollmentMetadataCreate) GetDividendReinvestmentPlan() *IRABeneficiaryEnrollmentMetadataCreateDividendReinvestmentPlan {
	if o == nil {
		return nil
	}
	return o.DividendReinvestmentPlan
}

func (o *IRABeneficiaryEnrollmentMetadataCreate) GetFdicCashSweep() *IRABeneficiaryEnrollmentMetadataCreateFdicCashSweep {
	if o == nil {
		return nil
	}
	return o.FdicCashSweep
}

func (o *IRABeneficiaryEnrollmentMetadataCreate) GetInheritedFromOwnerBirthDate() *DateCreate {
	if o == nil {
		return nil
	}
	return o.InheritedFromOwnerBirthDate
}

func (o *IRABeneficiaryEnrollmentMetadataCreate) GetInheritedFromOwnerDeathDate() *DateCreate {
	if o == nil {
		return nil
	}
	return o.InheritedFromOwnerDeathDate
}

func (o *IRABeneficiaryEnrollmentMetadataCreate) GetInheritedFromOwnerName() string {
	if o == nil {
		return ""
	}
	return o.InheritedFromOwnerName
}

func (o *IRABeneficiaryEnrollmentMetadataCreate) GetInheritorIsDecedentsSpouse() bool {
	if o == nil {
		return false
	}
	return o.InheritorIsDecedentsSpouse
}
