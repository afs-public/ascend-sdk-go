// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/afs-public/ascend-sdk-go/models/components"
)

type BookingRebookTradeRequest struct {
	// The account id.
	AccountID string `pathParam:"style=simple,explode=false,name=account_id"`
	// The trade id.
	TradeID                  string                              `pathParam:"style=simple,explode=false,name=trade_id"`
	RebookTradeRequestCreate components.RebookTradeRequestCreate `request:"mediaType=application/json"`
}

func (o *BookingRebookTradeRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *BookingRebookTradeRequest) GetTradeID() string {
	if o == nil {
		return ""
	}
	return o.TradeID
}

func (o *BookingRebookTradeRequest) GetRebookTradeRequestCreate() components.RebookTradeRequestCreate {
	if o == nil {
		return components.RebookTradeRequestCreate{}
	}
	return o.RebookTradeRequestCreate
}

type BookingRebookTradeResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	RebookTradeResponse *components.RebookTradeResponse
	// INVALID_ARGUMENT: The request is not valid.
	// FAILED_PRECONDITION: The operation was rejected because the system is not in a state required for the operation's processing.
	Status *components.Status
}

func (o *BookingRebookTradeResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *BookingRebookTradeResponse) GetRebookTradeResponse() *components.RebookTradeResponse {
	if o == nil {
		return nil
	}
	return o.RebookTradeResponse
}

func (o *BookingRebookTradeResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
