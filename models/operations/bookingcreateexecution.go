// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/afs-public/ascend-sdk-go/models/components"
)

type BookingCreateExecutionRequest struct {
	// The account id.
	AccountID string `pathParam:"style=simple,explode=false,name=account_id"`
	// The trade id.
	TradeID         string                     `pathParam:"style=simple,explode=false,name=trade_id"`
	ExecutionCreate components.ExecutionCreate `request:"mediaType=application/json"`
}

func (o *BookingCreateExecutionRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *BookingCreateExecutionRequest) GetTradeID() string {
	if o == nil {
		return ""
	}
	return o.TradeID
}

func (o *BookingCreateExecutionRequest) GetExecutionCreate() components.ExecutionCreate {
	if o == nil {
		return components.ExecutionCreate{}
	}
	return o.ExecutionCreate
}

type BookingCreateExecutionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	Execution *components.Execution
	// FAILED_PRECONDITION: The operation was rejected because the system is not in a state required for the operation's processing.
	// INVALID_ARGUMENT: The request is not valid.
	Status *components.Status
}

func (o *BookingCreateExecutionResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *BookingCreateExecutionResponse) GetExecution() *components.Execution {
	if o == nil {
		return nil
	}
	return o.Execution
}

func (o *BookingCreateExecutionResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
