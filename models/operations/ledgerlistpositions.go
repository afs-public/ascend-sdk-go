// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/afs-public/ascend-sdk-go/models/components"
)

type LedgerListPositionsRequest struct {
	// The account id.
	AccountID string `pathParam:"style=simple,explode=false,name=account_id"`
	// The maximum number of positions to return. The service may return fewer than this value Default is 100 (subject to change) The maximum is 1000, values exceeding this will be set to 1000 (subject to change)
	PageSize *int `queryParam:"style=form,explode=true,name=page_size"`
	// This page token comes from a previous `ListPositions` call; provide this token to retrieve the subsequent page When paginating, all other parameters you include in `ListPositions` must match the call that includes the page token to maintain a stable result set
	PageToken *string `queryParam:"style=form,explode=true,name=page_token"`
	// A CEL string to filter results; See the [CEL Search](https://developer.apexclearing.com/apex-fintech-solutions/docs/cel-search) page in Guides for more information;
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
}

func (o *LedgerListPositionsRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *LedgerListPositionsRequest) GetPageSize() *int {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *LedgerListPositionsRequest) GetPageToken() *string {
	if o == nil {
		return nil
	}
	return o.PageToken
}

func (o *LedgerListPositionsRequest) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

type LedgerListPositionsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	ListPositionsResponse *components.ListPositionsResponse
	// INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details.
	Status *components.Status

	Next func() (*LedgerListPositionsResponse, error)
}

func (o *LedgerListPositionsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *LedgerListPositionsResponse) GetListPositionsResponse() *components.ListPositionsResponse {
	if o == nil {
		return nil
	}
	return o.ListPositionsResponse
}

func (o *LedgerListPositionsResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
