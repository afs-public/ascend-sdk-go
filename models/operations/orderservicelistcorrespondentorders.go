// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/afs-public/ascend-sdk-go/models/components"
)

type OrderServiceListCorrespondentOrdersRequest struct {
	// The correspondent id.
	CorrespondentID string `pathParam:"style=simple,explode=false,name=correspondent_id"`
	// CEL filter string expressing what orders should be listed. The only properties available for filtering are the boolean `open` and `order_date`. Each of these represent fields on the Orders object, and more details about each can be found attached to the properties.
	//
	//  If `open` is not provided, both "open" and "not open" orders will be returned. All `order_date` searches are limited to orders within the most recent 365 days. If no `order_date` is specified, the default will search between now and 365 days ago.
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// The number of records to return in a single page. The maximum page size is 100. If a value is not provided, the default of 100 will be used. If a value less than one, or greater than the maximum, is provided, the default value will be used.
	PageSize *int `queryParam:"style=form,explode=true,name=page_size"`
	// The token for the next page of content to fetch. When paginating, all other parameters provided to `ListOrders` must match the call that provided the page token.
	PageToken *string `queryParam:"style=form,explode=true,name=page_token"`
}

func (o *OrderServiceListCorrespondentOrdersRequest) GetCorrespondentID() string {
	if o == nil {
		return ""
	}
	return o.CorrespondentID
}

func (o *OrderServiceListCorrespondentOrdersRequest) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *OrderServiceListCorrespondentOrdersRequest) GetPageSize() *int {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *OrderServiceListCorrespondentOrdersRequest) GetPageToken() *string {
	if o == nil {
		return nil
	}
	return o.PageToken
}

type OrderServiceListCorrespondentOrdersResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	ListCorrespondentOrdersResponse *components.ListCorrespondentOrdersResponse
	// INVALID_ARGUMENT: There was an issue with one or more fields in the request. The message field will contain details about which field failed validation and why.
	Status *components.Status
}

func (o *OrderServiceListCorrespondentOrdersResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *OrderServiceListCorrespondentOrdersResponse) GetListCorrespondentOrdersResponse() *components.ListCorrespondentOrdersResponse {
	if o == nil {
		return nil
	}
	return o.ListCorrespondentOrdersResponse
}

func (o *OrderServiceListCorrespondentOrdersResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
