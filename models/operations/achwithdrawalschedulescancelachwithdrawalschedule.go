// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/afs-public/ascend-sdk-go/models/components"
)

type AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest struct {
	// The account id.
	AccountID string `pathParam:"style=simple,explode=false,name=account_id"`
	// The achWithdrawalSchedule id.
	AchWithdrawalScheduleID                  string                                              `pathParam:"style=simple,explode=false,name=achWithdrawalSchedule_id"`
	CancelAchWithdrawalScheduleRequestCreate components.CancelAchWithdrawalScheduleRequestCreate `request:"mediaType=application/json"`
}

func (o *AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest) GetAchWithdrawalScheduleID() string {
	if o == nil {
		return ""
	}
	return o.AchWithdrawalScheduleID
}

func (o *AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest) GetCancelAchWithdrawalScheduleRequestCreate() components.CancelAchWithdrawalScheduleRequestCreate {
	if o == nil {
		return components.CancelAchWithdrawalScheduleRequestCreate{}
	}
	return o.CancelAchWithdrawalScheduleRequestCreate
}

type AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	AchWithdrawalSchedule *components.AchWithdrawalSchedule
	// INVALID_ARGUMENT: The request has an invalid argument.
	Status *components.Status
}

func (o *AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse) GetAchWithdrawalSchedule() *components.AchWithdrawalSchedule {
	if o == nil {
		return nil
	}
	return o.AchWithdrawalSchedule
}

func (o *AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
