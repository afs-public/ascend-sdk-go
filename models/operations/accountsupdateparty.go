// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/afs-public/ascend-sdk-go/models/components"
)

type AccountsUpdatePartyRequest struct {
	// The account id.
	AccountID string `pathParam:"style=simple,explode=false,name=account_id"`
	// The party id.
	PartyID string `pathParam:"style=simple,explode=false,name=party_id"`
	// The list of fields to update. Updatable Fields  `phone_number`  `email_address`  `statement_delivery_preference`  `trade_confirmation_delivery_preference`  `tax_document_delivery_preference`  `proxy_delivery_preference`  `prospectus_delivery_preference`  `mailing_address.region_code`  `mailing_address.postal_code`  `mailing_address.administrative_area`  `mailing_address.locality`  `mailing_address.address_lines`
	UpdateMask         *string                       `queryParam:"style=form,explode=true,name=update_mask"`
	PartyRequestUpdate components.PartyRequestUpdate `request:"mediaType=application/json"`
}

func (o *AccountsUpdatePartyRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *AccountsUpdatePartyRequest) GetPartyID() string {
	if o == nil {
		return ""
	}
	return o.PartyID
}

func (o *AccountsUpdatePartyRequest) GetUpdateMask() *string {
	if o == nil {
		return nil
	}
	return o.UpdateMask
}

func (o *AccountsUpdatePartyRequest) GetPartyRequestUpdate() components.PartyRequestUpdate {
	if o == nil {
		return components.PartyRequestUpdate{}
	}
	return o.PartyRequestUpdate
}

type AccountsUpdatePartyResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	Party *components.Party
	// INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details.
	Status *components.Status
}

func (o *AccountsUpdatePartyResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *AccountsUpdatePartyResponse) GetParty() *components.Party {
	if o == nil {
		return nil
	}
	return o.Party
}

func (o *AccountsUpdatePartyResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
