// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"

	"github.com/afs-public/ascend-sdk-go/models/components"
)

// CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamView - Optional. The view to return. Defaults to BASIC.
type CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamView string

const (
	CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamViewViewUnspecified CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamView = "VIEW_UNSPECIFIED"
	CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamViewBasic           CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamView = "BASIC"
	CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamViewFull            CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamView = "FULL"
)

func (e CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamView) ToPointer() *CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamView {
	return &e
}
func (e *CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamView) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VIEW_UNSPECIFIED":
		fallthrough
	case "BASIC":
		fallthrough
	case "FULL":
		*e = CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamView(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamView: %v", v)
	}
}

type CustomerIdentificationResultServiceGetCustomerIdentificationRequest struct {
	// The correspondent id.
	CorrespondentID string `pathParam:"style=simple,explode=false,name=correspondent_id"`
	// The customerIdentification id.
	CustomerIdentificationID string `pathParam:"style=simple,explode=false,name=customerIdentification_id"`
	// Optional. The view to return. Defaults to BASIC.
	View *CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamView `queryParam:"style=form,explode=true,name=view"`
}

func (o *CustomerIdentificationResultServiceGetCustomerIdentificationRequest) GetCorrespondentID() string {
	if o == nil {
		return ""
	}
	return o.CorrespondentID
}

func (o *CustomerIdentificationResultServiceGetCustomerIdentificationRequest) GetCustomerIdentificationID() string {
	if o == nil {
		return ""
	}
	return o.CustomerIdentificationID
}

func (o *CustomerIdentificationResultServiceGetCustomerIdentificationRequest) GetView() *CustomerIdentificationResultServiceGetCustomerIdentificationQueryParamView {
	if o == nil {
		return nil
	}
	return o.View
}

type CustomerIdentificationResultServiceGetCustomerIdentificationResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	CustomerIdentification *components.CustomerIdentification
	// INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details.
	Status *components.Status
}

func (o *CustomerIdentificationResultServiceGetCustomerIdentificationResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CustomerIdentificationResultServiceGetCustomerIdentificationResponse) GetCustomerIdentification() *components.CustomerIdentification {
	if o == nil {
		return nil
	}
	return o.CustomerIdentification
}

func (o *CustomerIdentificationResultServiceGetCustomerIdentificationResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
