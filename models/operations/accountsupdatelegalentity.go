// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/afs-public/ascend-sdk-go/models/components"
)

type AccountsUpdateLegalEntityRequest struct {
	// The legalEntity id.
	LegalEntityID string `pathParam:"style=simple,explode=false,name=legalEntity_id"`
	// The list of fields to update. Updatable Fields `for_the_benefit_of` `tax_profile.withholding_state` `formation_date` `broker_dealer` `legal_address.address_lines` `legal_address.locality` `legal_address.administrative_area` `legal_address.region_code` `legal_address.postal_code` `exempt_verifying_beneficial_owners` `exempt_customer_reason` `foreign_financial_institution` `accredited_investor` `adviser` `regulated_investment_company` `lei_code` `entity_name` `tax_id` `tax_id_type` `institutional_customer` `operating_regions` `doing_business_as`
	UpdateMask        *string                      `queryParam:"style=form,explode=true,name=update_mask"`
	LegalEntityUpdate components.LegalEntityUpdate `request:"mediaType=application/json"`
}

func (o *AccountsUpdateLegalEntityRequest) GetLegalEntityID() string {
	if o == nil {
		return ""
	}
	return o.LegalEntityID
}

func (o *AccountsUpdateLegalEntityRequest) GetUpdateMask() *string {
	if o == nil {
		return nil
	}
	return o.UpdateMask
}

func (o *AccountsUpdateLegalEntityRequest) GetLegalEntityUpdate() components.LegalEntityUpdate {
	if o == nil {
		return components.LegalEntityUpdate{}
	}
	return o.LegalEntityUpdate
}

type AccountsUpdateLegalEntityResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	LegalEntity *components.LegalEntity
	// INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details.
	Status *components.Status
}

func (o *AccountsUpdateLegalEntityResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *AccountsUpdateLegalEntityResponse) GetLegalEntity() *components.LegalEntity {
	if o == nil {
		return nil
	}
	return o.LegalEntity
}

func (o *AccountsUpdateLegalEntityResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
