// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/afs-public/ascend-sdk-go/models/components"
)

type BookingCreateTradeRequest struct {
	// The account id.
	AccountID   string                 `pathParam:"style=simple,explode=false,name=account_id"`
	TradeCreate components.TradeCreate `request:"mediaType=application/json"`
}

func (o *BookingCreateTradeRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *BookingCreateTradeRequest) GetTradeCreate() components.TradeCreate {
	if o == nil {
		return components.TradeCreate{}
	}
	return o.TradeCreate
}

type BookingCreateTradeResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	BookingTrade *components.BookingTrade
	// FAILED_PRECONDITION: The operation was rejected because the system is not in a state required for the operation's processing.
	// INVALID_ARGUMENT: The request is not valid.
	Status *components.Status
}

func (o *BookingCreateTradeResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *BookingCreateTradeResponse) GetBookingTrade() *components.BookingTrade {
	if o == nil {
		return nil
	}
	return o.BookingTrade
}

func (o *BookingCreateTradeResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
