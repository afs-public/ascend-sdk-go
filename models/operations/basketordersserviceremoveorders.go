// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/afs-public/ascend-sdk-go/models/components"
)

type BasketOrdersServiceRemoveOrdersRequest struct {
	// The correspondent id.
	CorrespondentID string `pathParam:"style=simple,explode=false,name=correspondent_id"`
	// The basket id.
	BasketID                  string                               `pathParam:"style=simple,explode=false,name=basket_id"`
	RemoveOrdersRequestCreate components.RemoveOrdersRequestCreate `request:"mediaType=application/json"`
}

func (o *BasketOrdersServiceRemoveOrdersRequest) GetCorrespondentID() string {
	if o == nil {
		return ""
	}
	return o.CorrespondentID
}

func (o *BasketOrdersServiceRemoveOrdersRequest) GetBasketID() string {
	if o == nil {
		return ""
	}
	return o.BasketID
}

func (o *BasketOrdersServiceRemoveOrdersRequest) GetRemoveOrdersRequestCreate() components.RemoveOrdersRequestCreate {
	if o == nil {
		return components.RemoveOrdersRequestCreate{}
	}
	return o.RemoveOrdersRequestCreate
}

type BasketOrdersServiceRemoveOrdersResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	RemoveOrdersResponse *components.RemoveOrdersResponse
	// INVALID_ARGUMENT: There was an issue with one or more fields in the request.  The message field will contain details about which field failed validation and why.
	// FAILED_PRECONDITION: The requested basket has already been submitted.
	Status *components.Status
}

func (o *BasketOrdersServiceRemoveOrdersResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *BasketOrdersServiceRemoveOrdersResponse) GetRemoveOrdersResponse() *components.RemoveOrdersResponse {
	if o == nil {
		return nil
	}
	return o.RemoveOrdersResponse
}

func (o *BasketOrdersServiceRemoveOrdersResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
