// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/afs-public/ascend-sdk-go/models/components"
)

type BookingCreateTradeAllocationRequest struct {
	// The account id.
	AccountID string `pathParam:"style=simple,explode=false,name=account_id"`
	// A globally unique UUID that is specific to the request. This id is used to prevent duplicate requests from being processed.
	RequestID             *string                          `queryParam:"style=form,explode=true,name=request_id"`
	TradeAllocationCreate components.TradeAllocationCreate `request:"mediaType=application/json"`
}

func (o *BookingCreateTradeAllocationRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *BookingCreateTradeAllocationRequest) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

func (o *BookingCreateTradeAllocationRequest) GetTradeAllocationCreate() components.TradeAllocationCreate {
	if o == nil {
		return components.TradeAllocationCreate{}
	}
	return o.TradeAllocationCreate
}

type BookingCreateTradeAllocationResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	TradeAllocation *components.TradeAllocation
	// INVALID_ARGUMENT: The request is not valid.
	// FAILED_PRECONDITION: The operation was rejected because the system is not in a state required for the operation's processing.
	Status *components.Status
}

func (o *BookingCreateTradeAllocationResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *BookingCreateTradeAllocationResponse) GetTradeAllocation() *components.TradeAllocation {
	if o == nil {
		return nil
	}
	return o.TradeAllocation
}

func (o *BookingCreateTradeAllocationResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
