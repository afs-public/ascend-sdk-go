// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/afs-public/ascend-sdk-go/models/components"
)

type AssetTradingConfigServiceListAssetTradingConfigsRequest struct {
	// The correspondent id.
	CorrespondentID string `pathParam:"style=simple,explode=false,name=correspondent_id"`
	// The asset id.
	AssetID string `pathParam:"style=simple,explode=false,name=asset_id"`
	// The maximum number of asset trading configs to return. The service may return fewer than this value. Default is 100 (subject to change) The maximum is 1000, values exceeding this will be set to 1000 (subject to change)
	PageSize *int `queryParam:"style=form,explode=true,name=page_size"`
	// A page token, received from a previous `ListAssetTradingConfigRequest` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListAssetTradingConfigRequest` must match the call that provided the page token in order to maintain a stable result set.
	PageToken *string `queryParam:"style=form,explode=true,name=page_token"`
	// A CEL string to filter results; See the [CEL Search](https://developer.apexclearing.com/apex-fintech-solutions/docs/cel-search) page in Guides for more information; symbol, cusip, isin, and asset_type are available in the CEL string. Additional fields will be available in the future. This is subject to change.
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
}

func (o *AssetTradingConfigServiceListAssetTradingConfigsRequest) GetCorrespondentID() string {
	if o == nil {
		return ""
	}
	return o.CorrespondentID
}

func (o *AssetTradingConfigServiceListAssetTradingConfigsRequest) GetAssetID() string {
	if o == nil {
		return ""
	}
	return o.AssetID
}

func (o *AssetTradingConfigServiceListAssetTradingConfigsRequest) GetPageSize() *int {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *AssetTradingConfigServiceListAssetTradingConfigsRequest) GetPageToken() *string {
	if o == nil {
		return nil
	}
	return o.PageToken
}

func (o *AssetTradingConfigServiceListAssetTradingConfigsRequest) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

type AssetTradingConfigServiceListAssetTradingConfigsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	ListAssetTradingConfigsResponse *components.ListAssetTradingConfigsResponse
	// INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details.
	Status *components.Status
}

func (o *AssetTradingConfigServiceListAssetTradingConfigsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *AssetTradingConfigServiceListAssetTradingConfigsResponse) GetListAssetTradingConfigsResponse() *components.ListAssetTradingConfigsResponse {
	if o == nil {
		return nil
	}
	return o.ListAssetTradingConfigsResponse
}

func (o *AssetTradingConfigServiceListAssetTradingConfigsResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
