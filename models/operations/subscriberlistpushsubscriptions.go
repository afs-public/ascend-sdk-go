// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"ascend-sdk/models/components"
)

type SubscriberListPushSubscriptionsRequest struct {
	// A CEL string to filter results; See the [CEL Search](https://developer.apexclearing.com/apex-fintech-solutions/docs/cel-search) page in Guides for more information; If empty, all subscriptions the user has permission to view will be returned; Filter options include:
	//  `name`
	//  `subscription_id`
	//  `client_id`
	//  `correspondent_id`
	//  `display_name`
	//  `event_types`
	//  `state`
	//  `http_callback.url`
	//  `http_callback.timeout_seconds`
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// The number of entries to return in a single page; Default = 100; Maximum = 1000
	PageSize *int `queryParam:"style=form,explode=true,name=page_size"`
	// Page token used for pagination; Supplying a page token returns the next page of results
	PageToken *string `queryParam:"style=form,explode=true,name=page_token"`
}

func (o *SubscriberListPushSubscriptionsRequest) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *SubscriberListPushSubscriptionsRequest) GetPageSize() *int {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *SubscriberListPushSubscriptionsRequest) GetPageToken() *string {
	if o == nil {
		return nil
	}
	return o.PageToken
}

type SubscriberListPushSubscriptionsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	ListPushSubscriptionsResponse *components.ListPushSubscriptionsResponse
	// INVALID_ARGUMENT: The request was not well formed.
	Status *components.Status
}

func (o *SubscriberListPushSubscriptionsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SubscriberListPushSubscriptionsResponse) GetListPushSubscriptionsResponse() *components.ListPushSubscriptionsResponse {
	if o == nil {
		return nil
	}
	return o.ListPushSubscriptionsResponse
}

func (o *SubscriberListPushSubscriptionsResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
