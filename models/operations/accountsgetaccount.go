// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"ascend-sdk/models/components"
	"encoding/json"
	"fmt"
)

// QueryParamView - The view to return. Defaults to `FULL`.
type QueryParamView string

const (
	QueryParamViewAccountViewUnspecified QueryParamView = "ACCOUNT_VIEW_UNSPECIFIED"
	QueryParamViewBasic                  QueryParamView = "BASIC"
	QueryParamViewFull                   QueryParamView = "FULL"
)

func (e QueryParamView) ToPointer() *QueryParamView {
	return &e
}
func (e *QueryParamView) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT_VIEW_UNSPECIFIED":
		fallthrough
	case "BASIC":
		fallthrough
	case "FULL":
		*e = QueryParamView(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryParamView: %v", v)
	}
}

type AccountsGetAccountRequest struct {
	// The account id.
	AccountID string `pathParam:"style=simple,explode=false,name=account_id"`
	// The view to return. Defaults to `FULL`.
	View *QueryParamView `queryParam:"style=form,explode=true,name=view"`
}

func (o *AccountsGetAccountRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *AccountsGetAccountRequest) GetView() *QueryParamView {
	if o == nil {
		return nil
	}
	return o.View
}

type AccountsGetAccountResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	Account *components.Account
	// INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details.
	Status *components.Status
}

func (o *AccountsGetAccountResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *AccountsGetAccountResponse) GetAccount() *components.Account {
	if o == nil {
		return nil
	}
	return o.Account
}

func (o *AccountsGetAccountResponse) GetStatus() *components.Status {
	if o == nil {
		return nil
	}
	return o.Status
}
